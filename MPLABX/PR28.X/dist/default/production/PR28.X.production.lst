

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jul 22 15:05:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F727
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009F                     	;# 
   106  0108                     	;# 
   107  0109                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0185                     	;# 
   115  0186                     	;# 
   116  0188                     	;# 
   117  0189                     	;# 
   118  018C                     	;# 
   119  0017                     _CCP1CON	set	23
   120  0015                     _CCPR1L	set	21
   121  0006                     _PORTB	set	6
   122  0009                     _PORTE	set	9
   123  0010                     _T1CON	set	16
   124  0012                     _T2CON	set	18
   125  000F                     _TMR1H	set	15
   126  000E                     _TMR1L	set	14
   127  0011                     _TMR2	set	17
   128  005F                     _GIE	set	95
   129  005E                     _PEIE	set	94
   130  0028                     _RA0	set	40
   131  0029                     _RA1	set	41
   132  002A                     _RA2	set	42
   133  002B                     _RA3	set	43
   134  002D                     _RA5	set	45
   135  002E                     _RA6	set	46
   136  002F                     _RA7	set	47
   137  0038                     _RC0	set	56
   138  0039                     _RC1	set	57
   139  003B                     _RC3	set	59
   140  003C                     _RC4	set	60
   141  003D                     _RC5	set	61
   142  003E                     _RC6	set	62
   143  003F                     _RC7	set	63
   144  0048                     _RE0	set	72
   145  0049                     _RE1	set	73
   146  004A                     _RE2	set	74
   147  0067                     _TMR1GIF	set	103
   148  0080                     _TMR1ON	set	128
   149  0061                     _TMR2IF	set	97
   150  0092                     _TMR2ON	set	146
   151  0090                     _OSCCON	set	144
   152  0092                     _PR2	set	146
   153  008F                     _T1GCON	set	143
   154  0085                     _TRISA	set	133
   155  0086                     _TRISB	set	134
   156  0087                     _TRISC	set	135
   157  0088                     _TRISD	set	136
   158  0089                     _TRISE	set	137
   159  0467                     _TMR1GIE	set	1127
   160  0461                     _TMR2IE	set	1121
   161  0108                     _CPSCON0	set	264
   162  0109                     _CPSCON1	set	265
   163  0185                     _ANSELA	set	389
   164  0186                     _ANSELB	set	390
   165  0188                     _ANSELD	set	392
   166  0189                     _ANSELE	set	393
   167                           
   168                           	psect	strings
   169  0800                     __pstrings:	
   170  0800                     stringtab:	
   171  0800                     __stringtab:	
   172  0800                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175  0800                     stringdir:	
   176  0800  3008               	movlw	high stringdir
   177  0801  008A               	movwf	10
   178  0802  0804               	movf	4,w
   179  0803  0A84               	incf	4,f
   180  0804  0782               	addwf	2,f
   181  0805                     __stringbase:	
   182  0805  3400               	retlw	0
   183  0806                     __end_of__stringtab:	
   184  0806                     STR_2:	
   185  0806  3450               	retlw	80	;'P'
   186  0807  3452               	retlw	82	;'R'
   187  0808  3420               	retlw	32	;' '
   188  0809  3432               	retlw	50	;'2'
   189  080A  3438               	retlw	56	;'8'
   190  080B  3420               	retlw	32	;' '
   191  080C  342D               	retlw	45	;'-'
   192  080D  3420               	retlw	32	;' '
   193  080E  346D               	retlw	109	;'m'
   194  080F  3454               	retlw	84	;'T'
   195  0810  346F               	retlw	111	;'o'
   196  0811  3475               	retlw	117	;'u'
   197  0812  3463               	retlw	99	;'c'
   198  0813  3468               	retlw	104	;'h'
   199  0814  3420               	retlw	32	;' '
   200  0815  3477               	retlw	119	;'w'
   201  0816  3469               	retlw	105	;'i'
   202  0817  3474               	retlw	116	;'t'
   203  0818  3468               	retlw	104	;'h'
   204  0819  3420               	retlw	32	;' '
   205  081A  3454               	retlw	84	;'T'
   206  081B  3469               	retlw	105	;'i'
   207  081C  3463               	retlw	99	;'c'
   208  081D  3420               	retlw	32	;' '
   209  081E  3454               	retlw	84	;'T'
   210  081F  3461               	retlw	97	;'a'
   211  0820  3463               	retlw	99	;'c'
   212  0821  3420               	retlw	32	;' '
   213  0822  3454               	retlw	84	;'T'
   214  0823  346F               	retlw	111	;'o'
   215  0824  3465               	retlw	101	;'e'
   216  0825  3400               	retlw	0
   217  0826                     STR_1:	
   218  0826  3443               	retlw	67	;'C'
   219  0827  3479               	retlw	121	;'y'
   220  0828  3474               	retlw	116	;'t'
   221  0829  3472               	retlw	114	;'r'
   222  082A  346F               	retlw	111	;'o'
   223  082B  346E               	retlw	110	;'n'
   224  082C  3420               	retlw	32	;' '
   225  082D  3454               	retlw	84	;'T'
   226  082E  3465               	retlw	101	;'e'
   227  082F  3463               	retlw	99	;'c'
   228  0830  3468               	retlw	104	;'h'
   229  0831  346E               	retlw	110	;'n'
   230  0832  346F               	retlw	111	;'o'
   231  0833  346C               	retlw	108	;'l'
   232  0834  346F               	retlw	111	;'o'
   233  0835  3467               	retlw	103	;'g'
   234  0836  3469               	retlw	105	;'i'
   235  0837  3465               	retlw	101	;'e'
   236  0838  3473               	retlw	115	;'s'
   237  0839  3420               	retlw	32	;' '
   238  083A  3453               	retlw	83	;'S'
   239  083B  3464               	retlw	100	;'d'
   240  083C  346E               	retlw	110	;'n'
   241  083D  3420               	retlw	32	;' '
   242  083E  3442               	retlw	66	;'B'
   243  083F  3468               	retlw	104	;'h'
   244  0840  3464               	retlw	100	;'d'
   245  0841  3420               	retlw	32	;' '
   246  0842  3420               	retlw	32	;' '
   247  0843  3420               	retlw	32	;' '
   248  0844  3400               	retlw	0
   249  0845                     STR_9:	
   250  0845  3463               	retlw	99	;'c'
   251  0846  346F               	retlw	111	;'o'
   252  0847  346E               	retlw	110	;'n'
   253  0848  3467               	retlw	103	;'g'
   254  0849  3472               	retlw	114	;'r'
   255  084A  3461               	retlw	97	;'a'
   256  084B  3474               	retlw	116	;'t'
   257  084C  3475               	retlw	117	;'u'
   258  084D  346C               	retlw	108	;'l'
   259  084E  3461               	retlw	97	;'a'
   260  084F  3474               	retlw	116	;'t'
   261  0850  3469               	retlw	105	;'i'
   262  0851  346F               	retlw	111	;'o'
   263  0852  346E               	retlw	110	;'n'
   264  0853  3421               	retlw	33	;'!'
   265  0854  3420               	retlw	32	;' '
   266  0855  3400               	retlw	0
   267  0856                     STR_10:	
   268  0856  342A               	retlw	42	;'*'
   269  0857  342A               	retlw	42	;'*'
   270  0858  3470               	retlw	112	;'p'
   271  0859  346C               	retlw	108	;'l'
   272  085A  3461               	retlw	97	;'a'
   273  085B  3479               	retlw	121	;'y'
   274  085C  3465               	retlw	101	;'e'
   275  085D  3472               	retlw	114	;'r'
   276  085E  3431               	retlw	49	;'1'
   277  085F  3420               	retlw	32	;' '
   278  0860  3477               	retlw	119	;'w'
   279  0861  3469               	retlw	105	;'i'
   280  0862  346E               	retlw	110	;'n'
   281  0863  3473               	retlw	115	;'s'
   282  0864  342A               	retlw	42	;'*'
   283  0865  342A               	retlw	42	;'*'
   284  0866  3400               	retlw	0
   285  0867                     STR_12:	
   286  0867  342A               	retlw	42	;'*'
   287  0868  342A               	retlw	42	;'*'
   288  0869  3470               	retlw	112	;'p'
   289  086A  346C               	retlw	108	;'l'
   290  086B  3461               	retlw	97	;'a'
   291  086C  3479               	retlw	121	;'y'
   292  086D  3465               	retlw	101	;'e'
   293  086E  3472               	retlw	114	;'r'
   294  086F  3432               	retlw	50	;'2'
   295  0870  3420               	retlw	32	;' '
   296  0871  3477               	retlw	119	;'w'
   297  0872  3469               	retlw	105	;'i'
   298  0873  346E               	retlw	110	;'n'
   299  0874  3473               	retlw	115	;'s'
   300  0875  342A               	retlw	42	;'*'
   301  0876  342A               	retlw	42	;'*'
   302  0877  3400               	retlw	0
   303  0878                     STR_4:	
   304  0878  3450               	retlw	80	;'P'
   305  0879  346C               	retlw	108	;'l'
   306  087A  3461               	retlw	97	;'a'
   307  087B  3479               	retlw	121	;'y'
   308  087C  3465               	retlw	101	;'e'
   309  087D  3472               	retlw	114	;'r'
   310  087E  3420               	retlw	32	;' '
   311  087F  3432               	retlw	50	;'2'
   312  0880  3420               	retlw	32	;' '
   313  0881  343D               	retlw	61	;'='
   314  0882  3420               	retlw	32	;' '
   315  0883  3467               	retlw	103	;'g'
   316  0884  3472               	retlw	114	;'r'
   317  0885  3465               	retlw	101	;'e'
   318  0886  3465               	retlw	101	;'e'
   319  0887  346E               	retlw	110	;'n'
   320  0888  3400               	retlw	0
   321  0889                     STR_7:	
   322  0889  3450               	retlw	80	;'P'
   323  088A  346C               	retlw	108	;'l'
   324  088B  3461               	retlw	97	;'a'
   325  088C  3479               	retlw	121	;'y'
   326  088D  3465               	retlw	101	;'e'
   327  088E  3472               	retlw	114	;'r'
   328  088F  3420               	retlw	32	;' '
   329  0890  3431               	retlw	49	;'1'
   330  0891  3427               	retlw	39	;'''
   331  0892  3473               	retlw	115	;'s'
   332  0893  3420               	retlw	32	;' '
   333  0894  3474               	retlw	116	;'t'
   334  0895  3475               	retlw	117	;'u'
   335  0896  3472               	retlw	114	;'r'
   336  0897  346E               	retlw	110	;'n'
   337  0898  3400               	retlw	0
   338  0899                     STR_8:	
   339  0899  3450               	retlw	80	;'P'
   340  089A  346C               	retlw	108	;'l'
   341  089B  3461               	retlw	97	;'a'
   342  089C  3479               	retlw	121	;'y'
   343  089D  3465               	retlw	101	;'e'
   344  089E  3472               	retlw	114	;'r'
   345  089F  3420               	retlw	32	;' '
   346  08A0  3432               	retlw	50	;'2'
   347  08A1  3427               	retlw	39	;'''
   348  08A2  3473               	retlw	115	;'s'
   349  08A3  3420               	retlw	32	;' '
   350  08A4  3474               	retlw	116	;'t'
   351  08A5  3475               	retlw	117	;'u'
   352  08A6  3472               	retlw	114	;'r'
   353  08A7  346E               	retlw	110	;'n'
   354  08A8  3400               	retlw	0
   355  08A9                     STR_5:	
   356  08A9  3450               	retlw	80	;'P'
   357  08AA  346C               	retlw	108	;'l'
   358  08AB  3461               	retlw	97	;'a'
   359  08AC  3479               	retlw	121	;'y'
   360  08AD  3465               	retlw	101	;'e'
   361  08AE  3472               	retlw	114	;'r'
   362  08AF  3420               	retlw	32	;' '
   363  08B0  3431               	retlw	49	;'1'
   364  08B1  3420               	retlw	32	;' '
   365  08B2  3473               	retlw	115	;'s'
   366  08B3  3474               	retlw	116	;'t'
   367  08B4  3461               	retlw	97	;'a'
   368  08B5  3472               	retlw	114	;'r'
   369  08B6  3474               	retlw	116	;'t'
   370  08B7  3473               	retlw	115	;'s'
   371  08B8  3400               	retlw	0
   372  08B9                     STR_3:	
   373  08B9  3450               	retlw	80	;'P'
   374  08BA  346C               	retlw	108	;'l'
   375  08BB  3461               	retlw	97	;'a'
   376  08BC  3479               	retlw	121	;'y'
   377  08BD  3465               	retlw	101	;'e'
   378  08BE  3472               	retlw	114	;'r'
   379  08BF  3420               	retlw	32	;' '
   380  08C0  3431               	retlw	49	;'1'
   381  08C1  3420               	retlw	32	;' '
   382  08C2  343D               	retlw	61	;'='
   383  08C3  3420               	retlw	32	;' '
   384  08C4  3472               	retlw	114	;'r'
   385  08C5  3465               	retlw	101	;'e'
   386  08C6  3464               	retlw	100	;'d'
   387  08C7  3400               	retlw	0
   388  08C8                     STR_14:	
   389  08C8  342A               	retlw	42	;'*'
   390  08C9  342A               	retlw	42	;'*'
   391  08CA  342A               	retlw	42	;'*'
   392  08CB  3464               	retlw	100	;'d'
   393  08CC  3472               	retlw	114	;'r'
   394  08CD  3461               	retlw	97	;'a'
   395  08CE  3477               	retlw	119	;'w'
   396  08CF  342A               	retlw	42	;'*'
   397  08D0  342A               	retlw	42	;'*'
   398  08D1  342A               	retlw	42	;'*'
   399  08D2  3400               	retlw	0
   400  08D3                     STR_6:	
   401  08D3  3466               	retlw	102	;'f'
   402  08D4  3469               	retlw	105	;'i'
   403  08D5  3472               	retlw	114	;'r'
   404  08D6  3473               	retlw	115	;'s'
   405  08D7  3474               	retlw	116	;'t'
   406  08D8  3400               	retlw	0
   407  0845                     
   408                           ; #config settings
   409  0000                     
   410                           	psect	cinit
   411  0015                     start_initialization:	
   412  0015                     __initialization:	
   413                           
   414                           ; Clear objects allocated to COMMON
   415  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   416  0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   417                           
   418                           ; Clear objects allocated to BANK0
   419  0017  1383               	bcf	3,7	;select IRP bank0
   420  0018  3020               	movlw	low __pbssBANK0
   421  0019  0084               	movwf	4
   422  001A  3052               	movlw	low (__pbssBANK0+50)
   423  001B  160A  118A  2357  120A  118A  	fcall	clear_ram0
   424                           
   425                           ; Clear objects allocated to BANK1
   426  0020  30A0               	movlw	low __pbssBANK1
   427  0021  0084               	movwf	4
   428  0022  30B2               	movlw	low (__pbssBANK1+18)
   429  0023  160A  118A  2357   	fcall	clear_ram0
   430  0026                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  0026                     __end_of__initialization:	
   434  0026  0183               	clrf	3
   435  0027  120A  158A  2E5D   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  007C                     __pbssCOMMON:	
   439  007C                     _bigval:	
   440  007C                     	ds	2
   441                           
   442                           	psect	bssBANK0
   443  0020                     __pbssBANK0:	
   444  0020                     _average:	
   445  0020                     	ds	18
   446  0032                     _Buttons:	
   447  0032                     	ds	9
   448  003B                     _matrix:	
   449  003B                     	ds	9
   450  0044                     _result1:	
   451  0044                     	ds	3
   452  0047                     _smallavg:	
   453  0047                     	ds	2
   454  0049                     _threshold:	
   455  0049                     	ds	2
   456  004B                     _threshold4:	
   457  004B                     	ds	2
   458  004D                     _Flags:	
   459  004D                     	ds	1
   460  004E                     _data:	
   461  004E                     	ds	1
   462  004F                     _flag:	
   463  004F                     	ds	1
   464  0050                     _index:	
   465  0050                     	ds	1
   466  0051                     _result:	
   467  0051                     	ds	1
   468                           
   469                           	psect	bssBANK1
   470  00A0                     __pbssBANK1:	
   471  00A0                     _reading:	
   472  00A0                     	ds	18
   473                           
   474                           	psect	clrtext
   475  1357                     clear_ram0:	
   476                           ;	Called with FSR containing the base address, and
   477                           ;	W with the last address+1
   478                           
   479  1357  0064               	clrwdt	;clear the watchdog before getting into this loop
   480  1358                     clrloop0:	
   481  1358  0180               	clrf	0	;clear RAM location pointed to by FSR
   482  1359  0A84               	incf	4,f	;increment pointer
   483  135A  0604               	xorwf	4,w	;XOR with final address
   484  135B  1903               	btfsc	3,2	;have we reached the end yet?
   485  135C  3400               	retlw	0	;all done for this memory range, return
   486  135D  0604               	xorwf	4,w	;XOR again to restore value
   487  135E  2B58               	goto	clrloop0	;do the next byte
   488                           
   489                           	psect	cstackCOMMON
   490  0070                     __pcstackCOMMON:	
   491  0070                     ?_Init:	
   492  0070                     ?_send_config:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0070                     ?_lcd_clr:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0070                     ?_lcd_goto:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0070                     ?_send_string:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0070                     ?_lcd_shift:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0070                     ?_PIEZO_S:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0070                     ?_checkflag:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0070                     ?_PIEZO:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0070                     ?_PIEZO_D:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0070                     ?_draw:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0070                     ?_led_off:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ?_CapInit:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ?_GetReading:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0070                     ?_player_1:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ?_player_2:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ?_checkstatus:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ?_DisplayLEDs:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ?_SetNextChannel:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ??_SetNextChannel:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0070                     ?_RestartTimer1:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0070                     ?_led_display1:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0070                     ?_led_display2:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0070                     ?_led_display3:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0070                     ?_e_pulse:	
   562                           ; 0 bytes @ 0x0
   563                           
   564  0070                     ?_main:	
   565                           ; 0 bytes @ 0x0
   566                           
   567  0070                     ?_isr:	
   568                           ; 0 bytes @ 0x0
   569                           
   570  0070                     ?_store:	
   571                           ; 0 bytes @ 0x0
   572                           
   573  0070                     ?_send_char:	
   574                           ; 0 bytes @ 0x0
   575                           
   576  0070                     ?i1_RestartTimer1:	
   577                           ; 0 bytes @ 0x0
   578                           
   579  0070                     ??i1_RestartTimer1:	
   580                           ; 0 bytes @ 0x0
   581                           
   582  0070                     ?_winlose:	
   583                           ; 0 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587  0070                     	ds	1
   588  0071                     ??_GetReading:	
   589                           
   590                           ; 0 bytes @ 0x1
   591  0071                     	ds	7
   592  0078                     ??_isr:	
   593                           
   594                           ; 0 bytes @ 0x8
   595  0078                     	ds	4
   596                           
   597                           	psect	cstackBANK0
   598  0052                     __pcstackBANK0:	
   599  0052                     ?_delay:	
   600  0052                     ??_RestartTimer1:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0052                     ??_led_display1:	
   604                           ; 0 bytes @ 0x0
   605                           
   606  0052                     ??_led_display2:	
   607                           ; 0 bytes @ 0x0
   608                           
   609  0052                     ??_led_display3:	
   610                           ; 0 bytes @ 0x0
   611                           
   612  0052                     ??_store:	
   613                           ; 0 bytes @ 0x0
   614                           
   615  0052                     ?___bmul:	
   616                           ; 0 bytes @ 0x0
   617                           
   618  0052                     ___bmul@multiplicand:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0052                     delay@data:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           ; 4 bytes @ 0x0
   626  0052                     	ds	1
   627  0053                     ??___bmul:	
   628  0053                     led_display1@value1:	
   629                           ; 0 bytes @ 0x1
   630                           
   631  0053                     led_display2@value2:	
   632                           ; 1 bytes @ 0x1
   633                           
   634  0053                     led_display3@value3:	
   635                           ; 1 bytes @ 0x1
   636                           
   637                           
   638                           ; 1 bytes @ 0x1
   639  0053                     	ds	1
   640  0054                     ??_led_off:	
   641  0054                     ??_DisplayLEDs:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0054                     ___bmul@product:	
   645                           ; 0 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0054                     	ds	1
   650  0055                     ___bmul@multiplier:	
   651  0055                     DisplayLEDs@k:	
   652                           ; 1 bytes @ 0x3
   653                           
   654                           
   655                           ; 2 bytes @ 0x3
   656  0055                     	ds	1
   657  0056                     ??_delay:	
   658  0056                     ??_winlose:	
   659                           ; 0 bytes @ 0x4
   660                           
   661  0056                     ??_CapInit:	
   662                           ; 0 bytes @ 0x4
   663                           
   664                           
   665                           ; 0 bytes @ 0x4
   666  0056                     	ds	1
   667  0057                     ??_checkflag:	
   668  0057                     ??_player_1:	
   669                           ; 0 bytes @ 0x5
   670                           
   671  0057                     ??_player_2:	
   672                           ; 0 bytes @ 0x5
   673                           
   674  0057                     ??_checkstatus:	
   675                           ; 0 bytes @ 0x5
   676                           
   677                           
   678                           ; 0 bytes @ 0x5
   679  0057                     	ds	2
   680  0059                     CapInit@i:	
   681  0059                     winlose@status:	
   682                           ; 2 bytes @ 0x7
   683                           
   684                           
   685                           ; 2 bytes @ 0x7
   686  0059                     	ds	1
   687  005A                     ??_send_config:	
   688  005A                     ??_PIEZO_S:	
   689                           ; 0 bytes @ 0x8
   690                           
   691  005A                     ??_PIEZO:	
   692                           ; 0 bytes @ 0x8
   693                           
   694  005A                     ??_PIEZO_D:	
   695                           ; 0 bytes @ 0x8
   696                           
   697  005A                     ??_draw:	
   698                           ; 0 bytes @ 0x8
   699                           
   700  005A                     ??_e_pulse:	
   701                           ; 0 bytes @ 0x8
   702                           
   703  005A                     ??_send_char:	
   704                           ; 0 bytes @ 0x8
   705                           
   706  005A                     send_config@data:	
   707                           ; 0 bytes @ 0x8
   708                           
   709  005A                     send_char@data:	
   710                           ; 1 bytes @ 0x8
   711                           
   712                           
   713                           ; 1 bytes @ 0x8
   714  005A                     	ds	1
   715  005B                     ??_lcd_clr:	
   716  005B                     ??_lcd_goto:	
   717                           ; 0 bytes @ 0x9
   718                           
   719  005B                     ??_send_string:	
   720                           ; 0 bytes @ 0x9
   721                           
   722  005B                     ??_lcd_shift:	
   723                           ; 0 bytes @ 0x9
   724                           
   725  005B                     winlose@flag_w:	
   726                           ; 0 bytes @ 0x9
   727                           
   728  005B                     CapInit@j:	
   729                           ; 1 bytes @ 0x9
   730                           
   731                           
   732                           ; 2 bytes @ 0x9
   733  005B                     	ds	1
   734  005C                     lcd_goto@data:	
   735  005C                     send_string@s:	
   736                           ; 1 bytes @ 0xA
   737                           
   738  005C                     winlose@i_280:	
   739                           ; 1 bytes @ 0xA
   740                           
   741                           
   742                           ; 2 bytes @ 0xA
   743  005C                     	ds	2
   744  005E                     winlose@j_281:	
   745                           
   746                           ; 2 bytes @ 0xC
   747  005E                     	ds	2
   748  0060                     winlose@i_279:	
   749                           
   750                           ; 2 bytes @ 0xE
   751  0060                     	ds	2
   752  0062                     ??_Init:	
   753                           
   754                           ; 0 bytes @ 0x10
   755  0062                     	ds	1
   756  0063                     ??_main:	
   757                           
   758                           ; 0 bytes @ 0x11
   759  0063                     	ds	1
   760  0064                     main@i:	
   761                           
   762                           ; 2 bytes @ 0x12
   763  0064                     	ds	2
   764                           
   765                           	psect	maintext
   766  0E5D                     __pmaintext:	
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 86 in file "../../Source file/PR28.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  i               2   18[BANK0 ] int 
   777 ;; Return value:  Size  Location     Type
   778 ;;		None               void
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : B00/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       2       0       0       0
   788 ;;      Temps:          0       1       0       0       0
   789 ;;      Totals:         0       3       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels required when called:    8
   792 ;; This function calls:
   793 ;;		_Init
   794 ;;		_PIEZO
   795 ;;		_PIEZO_D
   796 ;;		_PIEZO_S
   797 ;;		_checkflag
   798 ;;		_delay
   799 ;;		_draw
   800 ;;		_lcd_clr
   801 ;;		_lcd_goto
   802 ;;		_lcd_shift
   803 ;;		_send_config
   804 ;;		_send_string
   805 ;;		_winlose
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _main
   813  0E5D                     _main:	
   814                           
   815                           ;PR28.c: 88: Init();
   816                           
   817                           ;incstack = 0
   818                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   819  0E5D  160A  118A  248B  120A  158A  	fcall	_Init
   820                           
   821                           ;PR28.c: 91: send_config(0b00000001);
   822  0E62  3001               	movlw	1
   823  0E63  160A  118A  23CB  120A  158A  	fcall	_send_config
   824                           
   825                           ;PR28.c: 92: send_config(0b00000010);
   826  0E68  3002               	movlw	2
   827  0E69  160A  118A  23CB  120A  158A  	fcall	_send_config
   828                           
   829                           ;PR28.c: 93: send_config(0b00000110);
   830  0E6E  3006               	movlw	6
   831  0E6F  160A  118A  23CB  120A  158A  	fcall	_send_config
   832                           
   833                           ;PR28.c: 94: send_config(0b00001100);
   834  0E74  300C               	movlw	12
   835  0E75  160A  118A  23CB  120A  158A  	fcall	_send_config
   836                           
   837                           ;PR28.c: 95: send_config(0b00111000);
   838  0E7A  3038               	movlw	56
   839  0E7B  160A  118A  23CB  120A  158A  	fcall	_send_config
   840                           
   841                           ;PR28.c: 96: lcd_clr();
   842  0E80  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
   843                           
   844                           ;PR28.c: 97: lcd_goto(0);
   845  0E85  3000               	movlw	0
   846  0E86  160A  118A  2411  120A  158A  	fcall	_lcd_goto
   847                           
   848                           ;PR28.c: 98: send_string("Cytron Technologies Sdn Bhd   ");
   849  0E8B  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   850  0E8C  160A  118A  2468  120A  158A  	fcall	_send_string
   851                           
   852                           ;PR28.c: 99: lcd_goto(20);
   853  0E91  3014               	movlw	20
   854  0E92  160A  118A  2411  120A  158A  	fcall	_lcd_goto
   855                           
   856                           ;PR28.c: 100: send_string("PR 28 - mTouch with Tic Tac Toe");
   857  0E97  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   858  0E98  160A  118A  2468  120A  158A  	fcall	_send_string
   859                           
   860                           ;PR28.c: 101: delay(10000);
   861  0E9D  3000               	movlw	0
   862  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
   863  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
   864  0EA0  00D5               	movwf	delay@data+3
   865  0EA1  3000               	movlw	0
   866  0EA2  00D4               	movwf	delay@data+2
   867  0EA3  3027               	movlw	39
   868  0EA4  00D3               	movwf	delay@data+1
   869  0EA5  3010               	movlw	16
   870  0EA6  00D2               	movwf	delay@data
   871  0EA7  120A  158A  20D9  120A  158A  	fcall	_delay
   872                           
   873                           ;PR28.c: 102: for (int i = 0; i <15 ; i++)
   874  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
   875  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
   876  0EAE  01E4               	clrf	main@i
   877  0EAF  01E5               	clrf	main@i+1
   878  0EB0  0865               	movf	main@i+1,w
   879  0EB1  3A80               	xorlw	128
   880  0EB2  00FF               	movwf	127
   881  0EB3  3080               	movlw	128
   882  0EB4  027F               	subwf	127,w
   883  0EB5  1D03               	skipz
   884  0EB6  2EB9               	goto	u6695
   885  0EB7  300F               	movlw	15
   886  0EB8  0264               	subwf	main@i,w
   887  0EB9                     u6695:	
   888  0EB9  1803               	btfsc	3,0
   889  0EBA  2ED3               	goto	l4119
   890  0EBB                     l4113:	
   891                           
   892                           ;PR28.c: 103: {
   893                           ;PR28.c: 104: lcd_shift();
   894  0EBB  160A  118A  23B7  120A  158A  	fcall	_lcd_shift
   895  0EC0  3001               	movlw	1
   896  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
   897  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
   898  0EC3  07E4               	addwf	main@i,f
   899  0EC4  1803               	skipnc
   900  0EC5  0AE5               	incf	main@i+1,f
   901  0EC6  3000               	movlw	0
   902  0EC7  07E5               	addwf	main@i+1,f
   903  0EC8  0865               	movf	main@i+1,w
   904  0EC9  3A80               	xorlw	128
   905  0ECA  00FF               	movwf	127
   906  0ECB  3080               	movlw	128
   907  0ECC  027F               	subwf	127,w
   908  0ECD  1D03               	skipz
   909  0ECE  2ED1               	goto	u6705
   910  0ECF  300F               	movlw	15
   911  0ED0  0264               	subwf	main@i,w
   912  0ED1                     u6705:	
   913  0ED1  1C03               	skipc
   914  0ED2  2EBB               	goto	l4113
   915  0ED3                     l4119:	
   916                           
   917                           ;PR28.c: 105: }
   918                           ;PR28.c: 106: delay(30000);
   919  0ED3  3000               	movlw	0
   920  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
   921  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
   922  0ED6  00D5               	movwf	delay@data+3
   923  0ED7  3000               	movlw	0
   924  0ED8  00D4               	movwf	delay@data+2
   925  0ED9  3075               	movlw	117
   926  0EDA  00D3               	movwf	delay@data+1
   927  0EDB  3030               	movlw	48
   928  0EDC  00D2               	movwf	delay@data
   929  0EDD  120A  158A  20D9  120A  158A  	fcall	_delay
   930                           
   931                           ;PR28.c: 107: lcd_clr();
   932  0EE2  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
   933                           
   934                           ;PR28.c: 108: lcd_goto(0);
   935  0EE7  3000               	movlw	0
   936  0EE8  160A  118A  2411  120A  158A  	fcall	_lcd_goto
   937                           
   938                           ;PR28.c: 109: send_string("Player 1 = red");
   939  0EED  30B4               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   940  0EEE  160A  118A  2468  120A  158A  	fcall	_send_string
   941                           
   942                           ;PR28.c: 110: lcd_goto(20);
   943  0EF3  3014               	movlw	20
   944  0EF4  160A  118A  2411  120A  158A  	fcall	_lcd_goto
   945                           
   946                           ;PR28.c: 111: send_string("Player 2 = green");
   947  0EF9  3073               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   948  0EFA  160A  118A  2468  120A  158A  	fcall	_send_string
   949                           
   950                           ;PR28.c: 112: delay(60000);
   951  0EFF  3000               	movlw	0
   952  0F00  1283               	bcf	3,5	;RP0=0, select bank0
   953  0F01  1303               	bcf	3,6	;RP1=0, select bank0
   954  0F02  00D5               	movwf	delay@data+3
   955  0F03  3000               	movlw	0
   956  0F04  00D4               	movwf	delay@data+2
   957  0F05  30EA               	movlw	234
   958  0F06  00D3               	movwf	delay@data+1
   959  0F07  3060               	movlw	96
   960  0F08  00D2               	movwf	delay@data
   961  0F09  120A  158A  20D9  120A  158A  	fcall	_delay
   962                           
   963                           ;PR28.c: 113: lcd_clr();
   964  0F0E  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
   965                           
   966                           ;PR28.c: 114: lcd_goto(0);
   967  0F13  3000               	movlw	0
   968  0F14  160A  118A  2411  120A  158A  	fcall	_lcd_goto
   969                           
   970                           ;PR28.c: 115: send_string("Player 1 starts");
   971  0F19  30A4               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   972  0F1A  160A  118A  2468  120A  158A  	fcall	_send_string
   973                           
   974                           ;PR28.c: 116: lcd_goto(20);
   975  0F1F  3014               	movlw	20
   976  0F20  160A  118A  2411  120A  158A  	fcall	_lcd_goto
   977                           
   978                           ;PR28.c: 117: send_string("first");
   979  0F25  30CE               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   980  0F26  160A  118A  2468  120A  158A  	fcall	_send_string
   981                           
   982                           ;PR28.c: 118: delay(30000);
   983  0F2B  3000               	movlw	0
   984  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
   985  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
   986  0F2E  00D5               	movwf	delay@data+3
   987  0F2F  3000               	movlw	0
   988  0F30  00D4               	movwf	delay@data+2
   989  0F31  3075               	movlw	117
   990  0F32  00D3               	movwf	delay@data+1
   991  0F33  3030               	movlw	48
   992  0F34  00D2               	movwf	delay@data
   993  0F35  120A  158A  20D9  120A  158A  	fcall	_delay
   994                           
   995                           ;PR28.c: 120: Buttons.BTN0 = Buttons.BTN1 = Buttons.BTN2 = Buttons.BTN3 = 0;
   996  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
   997  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
   998  0F3C  01B5               	clrf	_Buttons+3
   999  0F3D  01B4               	clrf	_Buttons+2
  1000  0F3E  01B3               	clrf	_Buttons+1
  1001  0F3F  01B2               	clrf	_Buttons
  1002                           
  1003                           ;PR28.c: 121: Buttons.BTN4 = Buttons.BTN5 = Buttons.BTN6 = Buttons.BTN7 = 0;
  1004  0F40  01B9               	clrf	_Buttons+7
  1005  0F41  01B8               	clrf	_Buttons+6
  1006  0F42  01B7               	clrf	_Buttons+5
  1007  0F43  01B6               	clrf	_Buttons+4
  1008                           
  1009                           ;PR28.c: 122: Buttons.BTN8 = 0;
  1010  0F44  01BA               	clrf	_Buttons+8
  1011                           
  1012                           ;PR28.c: 125: PIEZO_S();
  1013  0F45  120A  158A  20FE  120A  158A  	fcall	_PIEZO_S
  1014  0F4A                     l4159:	
  1015                           ;PR28.c: 126: while (data == ' ')
  1016                           
  1017  0F4A  3020               	movlw	32
  1018  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0F4D  064E               	xorwf	_data,w
  1021  0F4E  1D03               	btfss	3,2
  1022  0F4F  2F83               	goto	l4161
  1023                           
  1024                           ;PR28.c: 127: {
  1025                           ;PR28.c: 128: if( flag == 0)
  1026  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0F52  084F               	movf	_flag,w
  1029  0F53  1D03               	btfss	3,2
  1030  0F54  2F62               	goto	l4151
  1031                           
  1032                           ;PR28.c: 129: {
  1033                           ;PR28.c: 130: lcd_clr();
  1034  0F55  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
  1035                           
  1036                           ;PR28.c: 131: lcd_goto(0);
  1037  0F5A  3000               	movlw	0
  1038  0F5B  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1039                           
  1040                           ;PR28.c: 132: send_string("Player 1's turn");
  1041  0F60  3084               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1042  0F61  2F6E               	goto	L1
  1043  0F62                     l4151:	
  1044                           ;PR28.c: 133: }else
  1045                           
  1046                           
  1047                           ;PR28.c: 134: {
  1048                           ;PR28.c: 135: lcd_clr();
  1049  0F62  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
  1050                           
  1051                           ;PR28.c: 136: lcd_goto(0);
  1052  0F67  3000               	movlw	0
  1053  0F68  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1054                           
  1055                           ;PR28.c: 137: send_string("Player 2's turn");
  1056  0F6D  3094               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1057  0F6E                     L1:	
  1058  0F6E  160A  118A  2468  120A  158A  	fcall	_send_string
  1059                           
  1060                           ;PR28.c: 138: }
  1061                           ;PR28.c: 139: checkflag();
  1062  0F73  160A  118A  238F  120A  158A  	fcall	_checkflag
  1063                           
  1064                           ;PR28.c: 140: data = winlose();
  1065  0F78  120A  158A  22DD  120A  158A  	fcall	_winlose
  1066  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0F7F  00E3               	movwf	??_main
  1069  0F80  0863               	movf	??_main,w
  1070  0F81  00CE               	movwf	_data
  1071  0F82  2F4A               	goto	l4159
  1072  0F83                     l4161:	
  1073                           
  1074                           ;PR28.c: 141: }
  1075                           ;PR28.c: 142: if(data =='X'){
  1076  0F83  3058               	movlw	88
  1077  0F84  064E               	xorwf	_data,w
  1078  0F85  1D03               	btfss	3,2
  1079  0F86  2FA9               	goto	l4169
  1080                           
  1081                           ;PR28.c: 143: PIEZO();
  1082  0F87  120A  158A  23FD  120A  158A  	fcall	_PIEZO
  1083                           
  1084                           ;PR28.c: 144: lcd_clr();
  1085  0F8C  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
  1086                           
  1087                           ;PR28.c: 145: lcd_goto(0);
  1088  0F91  3000               	movlw	0
  1089  0F92  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1090                           
  1091                           ;PR28.c: 146: send_string("congratulation! ");
  1092  0F97  3040               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1093  0F98  160A  118A  2468  120A  158A  	fcall	_send_string
  1094                           
  1095                           ;PR28.c: 147: lcd_goto(20);
  1096  0F9D  3014               	movlw	20
  1097  0F9E  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1098                           
  1099                           ;PR28.c: 148: send_string("**player1 wins**");
  1100  0FA3  3051               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1101  0FA4  160A  118A  2468  120A  158A  	fcall	_send_string
  1102  0FA9                     l4169:	
  1103                           
  1104                           ;PR28.c: 149: }
  1105                           ;PR28.c: 150: if(data == 'O'){
  1106  0FA9  304F               	movlw	79
  1107  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0FAC  064E               	xorwf	_data,w
  1110  0FAD  1D03               	btfss	3,2
  1111  0FAE  2FD1               	goto	l4183
  1112                           
  1113                           ;PR28.c: 151: PIEZO();
  1114  0FAF  120A  158A  23FD  120A  158A  	fcall	_PIEZO
  1115                           
  1116                           ;PR28.c: 152: lcd_clr();
  1117  0FB4  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
  1118                           
  1119                           ;PR28.c: 153: lcd_goto(0);
  1120  0FB9  3000               	movlw	0
  1121  0FBA  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1122                           
  1123                           ;PR28.c: 154: send_string("congratulation! ");
  1124  0FBF  3040               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1125  0FC0  160A  118A  2468  120A  158A  	fcall	_send_string
  1126                           
  1127                           ;PR28.c: 155: lcd_goto(20);
  1128  0FC5  3014               	movlw	20
  1129  0FC6  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1130                           
  1131                           ;PR28.c: 156: send_string("**player2 wins**");
  1132  0FCB  3062               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1133  0FCC  160A  118A  2468  120A  158A  	fcall	_send_string
  1134  0FD1                     l4183:	
  1135                           ;PR28.c: 157: }while(data == 'd'){
  1136                           
  1137  0FD1  3064               	movlw	100
  1138  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0FD4  064E               	xorwf	_data,w
  1141  0FD5  1D03               	btfss	3,2
  1142  0FD6  2FFF               	goto	l194
  1143                           
  1144                           ;PR28.c: 158: PIEZO_D();
  1145  0FD7  120A  118A  254E  120A  158A  	fcall	_PIEZO_D
  1146  0FDC                     l190:	
  1147                           ;PR28.c: 159: while(1){
  1148                           
  1149                           
  1150                           ;PR28.c: 160: draw();
  1151  0FDC  160A  118A  251D  120A  158A  	fcall	_draw
  1152                           
  1153                           ;PR28.c: 161: lcd_clr();
  1154  0FE1  160A  118A  23A3  120A  158A  	fcall	_lcd_clr
  1155                           
  1156                           ;PR28.c: 162: lcd_goto(0);
  1157  0FE6  3000               	movlw	0
  1158  0FE7  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1159                           
  1160                           ;PR28.c: 163: send_string("congratulation! ");
  1161  0FEC  3040               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1162  0FED  160A  118A  2468  120A  158A  	fcall	_send_string
  1163                           
  1164                           ;PR28.c: 164: lcd_goto(20);
  1165  0FF2  3014               	movlw	20
  1166  0FF3  160A  118A  2411  120A  158A  	fcall	_lcd_goto
  1167                           
  1168                           ;PR28.c: 165: send_string("***draw***");
  1169  0FF8  30C3               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1170  0FF9  160A  118A  2468  120A  158A  	fcall	_send_string
  1171  0FFE  2FDC               	goto	l190
  1172  0FFF                     l194:	
  1173                           ;PR28.c: 166: }
  1174                           ;PR28.c: 167: }
  1175                           ;PR28.c: 168: while(1){}
  1176                           
  1177  0FFF  2FFF               	goto	l194
  1178  1000                     __end_of_main:	
  1179                           
  1180                           	psect	text1
  1181  1468                     __ptext1:	
  1182 ;; *************** function _send_string *****************
  1183 ;; Defined at:
  1184 ;;		line 904 in file "../../Source file/PR28.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  s               1    wreg     PTR const unsigned char 
  1187 ;;		 -> STR_14(11), STR_13(17), STR_12(17), STR_11(17), 
  1188 ;;		 -> STR_10(17), STR_9(17), STR_8(16), STR_7(16), 
  1189 ;;		 -> STR_6(6), STR_5(16), STR_4(17), STR_3(15), 
  1190 ;;		 -> STR_2(32), STR_1(31), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  s               1   10[BANK0 ] PTR const unsigned char 
  1193 ;;		 -> STR_14(11), STR_13(17), STR_12(17), STR_11(17), 
  1194 ;;		 -> STR_10(17), STR_9(17), STR_8(16), STR_7(16), 
  1195 ;;		 -> STR_6(6), STR_5(16), STR_4(17), STR_3(15), 
  1196 ;;		 -> STR_2(32), STR_1(31), 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;		None               void
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       1       0       0       0
  1208 ;;      Temps:          0       1       0       0       0
  1209 ;;      Totals:         0       2       0       0       0
  1210 ;;Total ram usage:        2 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    6
  1213 ;; This function calls:
  1214 ;;		_send_char
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _send_string
  1222  1468                     _send_string:	
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1226                           ;send_string@s stored from wreg
  1227  1468  1283               	bcf	3,5	;RP0=0, select bank0
  1228  1469  1303               	bcf	3,6	;RP1=0, select bank0
  1229  146A  00DC               	movwf	send_string@s
  1230  146B                     l3721:	
  1231                           ;PR28.c: 907: while (s && *s)send_char (*s++);
  1232                           
  1233  146B  085C               	movf	send_string@s,w
  1234  146C  1903               	btfsc	3,2
  1235  146D  0008               	return
  1236  146E  085C               	movf	send_string@s,w
  1237  146F  0084               	movwf	4
  1238  1470  120A  158A  2000  160A  118A  	fcall	stringdir
  1239  1475  3A00               	xorlw	0
  1240  1476  1903               	btfsc	3,2
  1241  1477  0008               	return
  1242  1478  085C               	movf	send_string@s,w
  1243  1479  0084               	movwf	4
  1244  147A  120A  158A  2000  160A  118A  	fcall	stringdir
  1245  147F  160A  118A  23E2  160A  118A  	fcall	_send_char
  1246  1484  3001               	movlw	1
  1247  1485  1283               	bcf	3,5	;RP0=0, select bank0
  1248  1486  1303               	bcf	3,6	;RP1=0, select bank0
  1249  1487  00DB               	movwf	??_send_string
  1250  1488  085B               	movf	??_send_string,w
  1251  1489  07DC               	addwf	send_string@s,f
  1252  148A  2C6B               	goto	l3721
  1253  148B                     __end_of_send_string:	
  1254                           
  1255                           	psect	text2
  1256  13E2                     __ptext2:	
  1257 ;; *************** function _send_char *****************
  1258 ;; Defined at:
  1259 ;;		line 843 in file "../../Source file/PR28.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  data            1    wreg     unsigned char 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  data            1    8[BANK0 ] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;		None               void
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       1       0       0       0
  1275 ;;      Temps:          0       0       0       0       0
  1276 ;;      Totals:         0       1       0       0       0
  1277 ;;Total ram usage:        1 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    5
  1280 ;; This function calls:
  1281 ;;		_delay
  1282 ;;		_e_pulse
  1283 ;; This function is called by:
  1284 ;;		_send_string
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _send_char
  1290  13E2                     _send_char:	
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  1294                           ;send_char@data stored from wreg
  1295  13E2  1283               	bcf	3,5	;RP0=0, select bank0
  1296  13E3  1303               	bcf	3,6	;RP1=0, select bank0
  1297  13E4  00DA               	movwf	send_char@data
  1298                           
  1299                           ;PR28.c: 845: RE0=1;
  1300  13E5  1409               	bsf	9,0	;volatile
  1301                           
  1302                           ;PR28.c: 846: PORTB=data;
  1303  13E6  085A               	movf	send_char@data,w
  1304  13E7  0086               	movwf	6	;volatile
  1305                           
  1306                           ;PR28.c: 847: delay(50);
  1307  13E8  3000               	movlw	0
  1308  13E9  00D5               	movwf	delay@data+3
  1309  13EA  3000               	movlw	0
  1310  13EB  00D4               	movwf	delay@data+2
  1311  13EC  3000               	movlw	0
  1312  13ED  00D3               	movwf	delay@data+1
  1313  13EE  3032               	movlw	50
  1314  13EF  00D2               	movwf	delay@data
  1315  13F0  120A  158A  20D9  160A  118A  	fcall	_delay
  1316                           
  1317                           ;PR28.c: 848: e_pulse();
  1318  13F5  160A  118A  2449   	fcall	_e_pulse
  1319  13F8  0008               	return
  1320  13F9                     __end_of_send_char:	
  1321                           
  1322                           	psect	text3
  1323  13B7                     __ptext3:	
  1324 ;; *************** function _lcd_shift *****************
  1325 ;; Defined at:
  1326 ;;		line 884 in file "../../Source file/PR28.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;		None               void
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    6
  1347 ;; This function calls:
  1348 ;;		_delay
  1349 ;;		_send_config
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _lcd_shift
  1357  13B7                     _lcd_shift:	
  1358                           
  1359                           ;PR28.c: 886: send_config(0x18);
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _lcd_shift: [wreg+status,2+status,0+pclath+cstack]
  1363  13B7  3018               	movlw	24
  1364  13B8  160A  118A  23CB  160A  118A  	fcall	_send_config
  1365                           
  1366                           ;PR28.c: 887: delay(6000);
  1367  13BD  3000               	movlw	0
  1368  13BE  1283               	bcf	3,5	;RP0=0, select bank0
  1369  13BF  1303               	bcf	3,6	;RP1=0, select bank0
  1370  13C0  00D5               	movwf	delay@data+3
  1371  13C1  3000               	movlw	0
  1372  13C2  00D4               	movwf	delay@data+2
  1373  13C3  3017               	movlw	23
  1374  13C4  00D3               	movwf	delay@data+1
  1375  13C5  3070               	movlw	112
  1376  13C6  00D2               	movwf	delay@data
  1377  13C7  120A  158A  20D9   	fcall	_delay
  1378  13CA  0008               	return
  1379  13CB                     __end_of_lcd_shift:	
  1380                           
  1381                           	psect	text4
  1382  1411                     __ptext4:	
  1383 ;; *************** function _lcd_goto *****************
  1384 ;; Defined at:
  1385 ;;		line 867 in file "../../Source file/PR28.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  data            1    wreg     unsigned char 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  data            1   10[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       1       0       0       0
  1401 ;;      Temps:          0       1       0       0       0
  1402 ;;      Totals:         0       2       0       0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    6
  1406 ;; This function calls:
  1407 ;;		_send_config
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _lcd_goto
  1415  1411                     _lcd_goto:	
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1419                           ;lcd_goto@data stored from wreg
  1420  1411  1283               	bcf	3,5	;RP0=0, select bank0
  1421  1412  1303               	bcf	3,6	;RP1=0, select bank0
  1422  1413  00DC               	movwf	lcd_goto@data
  1423                           
  1424                           ;PR28.c: 869: if(data<16)
  1425  1414  3010               	movlw	16
  1426  1415  025C               	subwf	lcd_goto@data,w
  1427  1416  1803               	skipnc
  1428  1417  2C1E               	goto	l3711
  1429                           
  1430                           ;PR28.c: 870: {
  1431                           ;PR28.c: 871: send_config(0x80+data);
  1432  1418  085C               	movf	lcd_goto@data,w
  1433  1419  3E80               	addlw	128
  1434  141A  160A  118A  23CB   	fcall	_send_config
  1435                           
  1436                           ;PR28.c: 872: }
  1437  141D  0008               	return
  1438  141E                     l3711:	
  1439                           
  1440                           ;PR28.c: 873: else
  1441                           ;PR28.c: 874: {
  1442                           ;PR28.c: 875: data=data-20;
  1443  141E  1283               	bcf	3,5	;RP0=0, select bank0
  1444  141F  1303               	bcf	3,6	;RP1=0, select bank0
  1445  1420  085C               	movf	lcd_goto@data,w
  1446  1421  3EEC               	addlw	236
  1447  1422  00DB               	movwf	??_lcd_goto
  1448  1423  085B               	movf	??_lcd_goto,w
  1449  1424  00DC               	movwf	lcd_goto@data
  1450                           
  1451                           ;PR28.c: 876: send_config(0xc0+data);
  1452  1425  085C               	movf	lcd_goto@data,w
  1453  1426  3EC0               	addlw	192
  1454  1427  160A  118A  23CB   	fcall	_send_config
  1455  142A  0008               	return
  1456  142B                     __end_of_lcd_goto:	
  1457                           
  1458                           	psect	text5
  1459  13A3                     __ptext5:	
  1460 ;; *************** function _lcd_clr *****************
  1461 ;; Defined at:
  1462 ;;		line 894 in file "../../Source file/PR28.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;		None               void
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0
  1479 ;;      Totals:         0       0       0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    6
  1483 ;; This function calls:
  1484 ;;		_delay
  1485 ;;		_send_config
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _lcd_clr
  1493  13A3                     _lcd_clr:	
  1494                           
  1495                           ;PR28.c: 896: send_config(0x01);
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  1499  13A3  3001               	movlw	1
  1500  13A4  160A  118A  23CB  160A  118A  	fcall	_send_config
  1501                           
  1502                           ;PR28.c: 897: delay(50);
  1503  13A9  3000               	movlw	0
  1504  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  1505  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  1506  13AC  00D5               	movwf	delay@data+3
  1507  13AD  3000               	movlw	0
  1508  13AE  00D4               	movwf	delay@data+2
  1509  13AF  3000               	movlw	0
  1510  13B0  00D3               	movwf	delay@data+1
  1511  13B1  3032               	movlw	50
  1512  13B2  00D2               	movwf	delay@data
  1513  13B3  120A  158A  20D9   	fcall	_delay
  1514  13B6  0008               	return
  1515  13B7                     __end_of_lcd_clr:	
  1516                           
  1517                           	psect	text6
  1518  13CB                     __ptext6:	
  1519 ;; *************** function _send_config *****************
  1520 ;; Defined at:
  1521 ;;		line 831 in file "../../Source file/PR28.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  data            1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  data            1    8[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         0       1       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         0       1       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    5
  1542 ;; This function calls:
  1543 ;;		_delay
  1544 ;;		_e_pulse
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;;		_lcd_goto
  1548 ;;		_lcd_shift
  1549 ;;		_lcd_clr
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _send_config
  1555  13CB                     _send_config:	
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  1559                           ;send_config@data stored from wreg
  1560  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  1561  13CC  1303               	bcf	3,6	;RP1=0, select bank0
  1562  13CD  00DA               	movwf	send_config@data
  1563                           
  1564                           ;PR28.c: 833: RE0=0;
  1565  13CE  1009               	bcf	9,0	;volatile
  1566                           
  1567                           ;PR28.c: 834: PORTB=data;
  1568  13CF  085A               	movf	send_config@data,w
  1569  13D0  0086               	movwf	6	;volatile
  1570                           
  1571                           ;PR28.c: 835: delay(50);
  1572  13D1  3000               	movlw	0
  1573  13D2  00D5               	movwf	delay@data+3
  1574  13D3  3000               	movlw	0
  1575  13D4  00D4               	movwf	delay@data+2
  1576  13D5  3000               	movlw	0
  1577  13D6  00D3               	movwf	delay@data+1
  1578  13D7  3032               	movlw	50
  1579  13D8  00D2               	movwf	delay@data
  1580  13D9  120A  158A  20D9  160A  118A  	fcall	_delay
  1581                           
  1582                           ;PR28.c: 836: e_pulse();
  1583  13DE  160A  118A  2449   	fcall	_e_pulse
  1584  13E1  0008               	return
  1585  13E2                     __end_of_send_config:	
  1586                           
  1587                           	psect	text7
  1588  1449                     __ptext7:	
  1589 ;; *************** function _e_pulse *****************
  1590 ;; Defined at:
  1591 ;;		line 855 in file "../../Source file/PR28.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;		None               void
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0
  1608 ;;      Totals:         0       0       0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    4
  1612 ;; This function calls:
  1613 ;;		_delay
  1614 ;; This function is called by:
  1615 ;;		_send_config
  1616 ;;		_send_char
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _e_pulse
  1622  1449                     _e_pulse:	
  1623                           
  1624                           ;PR28.c: 857: RE1=1;
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  1628  1449  1283               	bcf	3,5	;RP0=0, select bank0
  1629  144A  1303               	bcf	3,6	;RP1=0, select bank0
  1630  144B  1489               	bsf	9,1	;volatile
  1631                           
  1632                           ;PR28.c: 858: delay(50);
  1633  144C  3000               	movlw	0
  1634  144D  00D5               	movwf	delay@data+3
  1635  144E  3000               	movlw	0
  1636  144F  00D4               	movwf	delay@data+2
  1637  1450  3000               	movlw	0
  1638  1451  00D3               	movwf	delay@data+1
  1639  1452  3032               	movlw	50
  1640  1453  00D2               	movwf	delay@data
  1641  1454  120A  158A  20D9  160A  118A  	fcall	_delay
  1642                           
  1643                           ;PR28.c: 859: RE1=0;
  1644  1459  1283               	bcf	3,5	;RP0=0, select bank0
  1645  145A  1303               	bcf	3,6	;RP1=0, select bank0
  1646  145B  1089               	bcf	9,1	;volatile
  1647                           
  1648                           ;PR28.c: 860: delay(50);
  1649  145C  3000               	movlw	0
  1650  145D  00D5               	movwf	delay@data+3
  1651  145E  3000               	movlw	0
  1652  145F  00D4               	movwf	delay@data+2
  1653  1460  3000               	movlw	0
  1654  1461  00D3               	movwf	delay@data+1
  1655  1462  3032               	movlw	50
  1656  1463  00D2               	movwf	delay@data
  1657  1464  120A  158A  20D9   	fcall	_delay
  1658  1467  0008               	return
  1659  1468                     __end_of_e_pulse:	
  1660                           
  1661                           	psect	text8
  1662  151D                     __ptext8:	
  1663 ;; *************** function _draw *****************
  1664 ;; Defined at:
  1665 ;;		line 915 in file "../../Source file/PR28.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       1       0       0       0
  1682 ;;      Totals:         0       1       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    5
  1686 ;; This function calls:
  1687 ;;		_delay
  1688 ;;		_led_display1
  1689 ;;		_led_display2
  1690 ;;		_led_display3
  1691 ;;		_led_off
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _draw
  1699  151D                     _draw:	
  1700                           
  1701                           ;PR28.c: 917: RC5 = RC6 = RC7 = 1;
  1702                           
  1703                           ;incstack = 0
  1704                           ; Regs used in _draw: [wreg+status,2+status,0+pclath+cstack]
  1705  151D  1283               	bcf	3,5	;RP0=0, select bank0
  1706  151E  1303               	bcf	3,6	;RP1=0, select bank0
  1707  151F  1787               	bsf	7,7	;volatile
  1708  1520  1F87               	btfss	7,7	;volatile
  1709  1521  2D26               	goto	u6610
  1710  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1711  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1712  1524  1707               	bsf	7,6	;volatile
  1713  1525  2D29               	goto	u6624
  1714  1526                     u6610:	
  1715  1526  1283               	bcf	3,5	;RP0=0, select bank0
  1716  1527  1303               	bcf	3,6	;RP1=0, select bank0
  1717  1528  1307               	bcf	7,6	;volatile
  1718  1529                     u6624:	
  1719  1529  1F07               	btfss	7,6	;volatile
  1720  152A  2D2F               	goto	u6620
  1721  152B  1283               	bcf	3,5	;RP0=0, select bank0
  1722  152C  1303               	bcf	3,6	;RP1=0, select bank0
  1723  152D  1687               	bsf	7,5	;volatile
  1724  152E  2D32               	goto	l4023
  1725  152F                     u6620:	
  1726  152F  1283               	bcf	3,5	;RP0=0, select bank0
  1727  1530  1303               	bcf	3,6	;RP1=0, select bank0
  1728  1531  1287               	bcf	7,5	;volatile
  1729  1532                     l4023:	
  1730                           
  1731                           ;PR28.c: 918: result = 0b00100100;
  1732  1532  3024               	movlw	36
  1733  1533  00DA               	movwf	??_draw
  1734  1534  085A               	movf	??_draw,w
  1735  1535  00D1               	movwf	_result
  1736                           
  1737                           ;PR28.c: 919: RA6 = RA7 = RA0 = 1;
  1738  1536  1405               	bsf	5,0	;volatile
  1739  1537  1C05               	btfss	5,0	;volatile
  1740  1538  2D3D               	goto	u6640
  1741  1539  1283               	bcf	3,5	;RP0=0, select bank0
  1742  153A  1303               	bcf	3,6	;RP1=0, select bank0
  1743  153B  1785               	bsf	5,7	;volatile
  1744  153C  2D40               	goto	u6654
  1745  153D                     u6640:	
  1746  153D  1283               	bcf	3,5	;RP0=0, select bank0
  1747  153E  1303               	bcf	3,6	;RP1=0, select bank0
  1748  153F  1385               	bcf	5,7	;volatile
  1749  1540                     u6654:	
  1750  1540  1F85               	btfss	5,7	;volatile
  1751  1541  2D46               	goto	u6650
  1752  1542  1283               	bcf	3,5	;RP0=0, select bank0
  1753  1543  1303               	bcf	3,6	;RP1=0, select bank0
  1754  1544  1705               	bsf	5,6	;volatile
  1755  1545  2D49               	goto	l4027
  1756  1546                     u6650:	
  1757  1546  1283               	bcf	3,5	;RP0=0, select bank0
  1758  1547  1303               	bcf	3,6	;RP1=0, select bank0
  1759  1548  1305               	bcf	5,6	;volatile
  1760  1549                     l4027:	
  1761                           
  1762                           ;PR28.c: 920: led_display1(result);
  1763  1549  0851               	movf	_result,w
  1764  154A  160A  118A  2581  160A  118A  	fcall	_led_display1
  1765                           
  1766                           ;PR28.c: 921: led_display2(result);
  1767  154F  1283               	bcf	3,5	;RP0=0, select bank0
  1768  1550  1303               	bcf	3,6	;RP1=0, select bank0
  1769  1551  0851               	movf	_result,w
  1770  1552  160A  118A  25F7  160A  118A  	fcall	_led_display2
  1771                           
  1772                           ;PR28.c: 922: led_display3(result);
  1773  1557  1283               	bcf	3,5	;RP0=0, select bank0
  1774  1558  1303               	bcf	3,6	;RP1=0, select bank0
  1775  1559  0851               	movf	_result,w
  1776  155A  160A  118A  266D  160A  118A  	fcall	_led_display3
  1777                           
  1778                           ;PR28.c: 923: delay(3500);
  1779  155F  3000               	movlw	0
  1780  1560  1283               	bcf	3,5	;RP0=0, select bank0
  1781  1561  1303               	bcf	3,6	;RP1=0, select bank0
  1782  1562  00D5               	movwf	delay@data+3
  1783  1563  3000               	movlw	0
  1784  1564  00D4               	movwf	delay@data+2
  1785  1565  300D               	movlw	13
  1786  1566  00D3               	movwf	delay@data+1
  1787  1567  30AC               	movlw	172
  1788  1568  00D2               	movwf	delay@data
  1789  1569  120A  158A  20D9  160A  118A  	fcall	_delay
  1790                           
  1791                           ;PR28.c: 924: led_off();
  1792  156E  160A  118A  242B  160A  118A  	fcall	_led_off
  1793                           
  1794                           ;PR28.c: 925: delay(3500);
  1795  1573  3000               	movlw	0
  1796  1574  1283               	bcf	3,5	;RP0=0, select bank0
  1797  1575  1303               	bcf	3,6	;RP1=0, select bank0
  1798  1576  00D5               	movwf	delay@data+3
  1799  1577  3000               	movlw	0
  1800  1578  00D4               	movwf	delay@data+2
  1801  1579  300D               	movlw	13
  1802  157A  00D3               	movwf	delay@data+1
  1803  157B  30AC               	movlw	172
  1804  157C  00D2               	movwf	delay@data
  1805  157D  120A  158A  20D9   	fcall	_delay
  1806  1580  0008               	return
  1807  1581                     __end_of_draw:	
  1808                           
  1809                           	psect	text9
  1810  138F                     __ptext9:	
  1811 ;; *************** function _checkflag *****************
  1812 ;; Defined at:
  1813 ;;		line 291 in file "../../Source file/PR28.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    7
  1834 ;; This function calls:
  1835 ;;		_player_1
  1836 ;;		_player_2
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           
  1843                           ;psect for function _checkflag
  1844  138F                     _checkflag:	
  1845                           
  1846                           ;PR28.c: 293: switch(flag){
  1847                           
  1848                           ;incstack = 0
  1849                           ; Regs used in _checkflag: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1850  138F  2B98               	goto	l3791
  1851  1390                     l3785:	
  1852                           ;PR28.c: 294: case 0: player_1(); break;
  1853                           
  1854  1390  160A  118A  2371   	fcall	_player_1
  1855  1393  0008               	return
  1856  1394                     l3787:	
  1857                           ;PR28.c: 295: case 1: player_2(); break;
  1858                           
  1859  1394  120A  118A  27F0   	fcall	_player_2
  1860                           
  1861                           ;PR28.c: 297: }
  1862                           
  1863                           ;PR28.c: 296: default: break;
  1864  1397  0008               	return
  1865  1398                     l3791:	
  1866  1398  1283               	bcf	3,5	;RP0=0, select bank0
  1867  1399  1303               	bcf	3,6	;RP1=0, select bank0
  1868  139A  084F               	movf	_flag,w
  1869                           
  1870                           ; Switch size 1, requested type "space"
  1871                           ; Number of cases is 2, Range of values is 0 to 1
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte            7     4 (average)
  1875                           ; direct_byte           14     8 (fixed)
  1876                           ; jumptable            260     6 (fixed)
  1877                           ;	Chosen strategy is simple_byte
  1878  139B  3A00               	xorlw	0	; case 0
  1879  139C  1903               	skipnz
  1880  139D  2B90               	goto	l3785
  1881  139E  3A01               	xorlw	1	; case 1
  1882  139F  1903               	skipnz
  1883  13A0  2B94               	goto	l3787
  1884  13A1  2BA2               	goto	l223
  1885  13A2                     l223:	
  1886  13A2  0008               	return
  1887  13A3                     __end_of_checkflag:	
  1888                           
  1889                           	psect	text10
  1890  07F0                     __ptext10:	
  1891 ;; *************** function _player_2 *****************
  1892 ;; Defined at:
  1893 ;;		line 318 in file "../../Source file/PR28.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;		None               void
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    6
  1914 ;; This function calls:
  1915 ;;		_checkstatus
  1916 ;; This function is called by:
  1917 ;;		_checkflag
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _player_2
  1923  07F0                     _player_2:	
  1924  07F0                     l3597:	
  1925                           ;PR28.c: 320: while (flag == 1){
  1926                           
  1927                           ;incstack = 0
  1928                           ; Regs used in _player_2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1929                           
  1930  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1931  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1932  07F2  034F               	decf	_flag,w
  1933  07F3  1D03               	btfss	3,2
  1934  07F4  0008               	return
  1935                           
  1936                           ;PR28.c: 321: checkstatus();
  1937  07F5  120A  158A  2524  120A  118A  	fcall	_checkstatus
  1938  07FA  2FF0               	goto	l3597
  1939  07FB                     __end_of_player_2:	
  1940                           
  1941                           	psect	text11
  1942  1371                     __ptext11:	
  1943 ;; *************** function _player_1 *****************
  1944 ;; Defined at:
  1945 ;;		line 305 in file "../../Source file/PR28.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;		None               void
  1952 ;; Registers used:
  1953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    6
  1966 ;; This function calls:
  1967 ;;		_checkstatus
  1968 ;; This function is called by:
  1969 ;;		_checkflag
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _player_1
  1975  1371                     _player_1:	
  1976  1371                     l3591:	
  1977                           ;PR28.c: 307: while(flag == 0){
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _player_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1981                           
  1982  1371  1283               	bcf	3,5	;RP0=0, select bank0
  1983  1372  1303               	bcf	3,6	;RP1=0, select bank0
  1984  1373  084F               	movf	_flag,w
  1985  1374  1D03               	btfss	3,2
  1986  1375  0008               	return
  1987                           
  1988                           ;PR28.c: 308: checkstatus();
  1989  1376  120A  158A  2524  160A  118A  	fcall	_checkstatus
  1990  137B  2B71               	goto	l3591
  1991  137C                     __end_of_player_1:	
  1992                           
  1993                           	psect	text12
  1994  0D24                     __ptext12:	
  1995 ;; *************** function _checkstatus *****************
  1996 ;; Defined at:
  1997 ;;		line 363 in file "../../Source file/PR28.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;		None               void
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    5
  2018 ;; This function calls:
  2019 ;;		_DisplayLEDs
  2020 ;;		_store
  2021 ;; This function is called by:
  2022 ;;		_player_1
  2023 ;;		_player_2
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _checkstatus
  2029  0D24                     _checkstatus:	
  2030                           
  2031                           ;PR28.c: 364: if(Buttons.BTN0 ==1){
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _checkstatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2035  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0D26  0332               	decf	_Buttons,w
  2038  0D27  1D03               	btfss	3,2
  2039  0D28  2D48               	goto	l3265
  2040                           
  2041                           ;PR28.c: 365: if (matrix[0][0] =='X' | matrix[0][0] == 'O')
  2042  0D29  3058               	movlw	88
  2043  0D2A  063B               	xorwf	_matrix,w
  2044  0D2B  1903               	btfsc	3,2
  2045  0D2C  2D31               	goto	l3251
  2046  0D2D  304F               	movlw	79
  2047  0D2E  063B               	xorwf	_matrix,w
  2048  0D2F  1D03               	btfss	3,2
  2049  0D30  2D35               	goto	l3255
  2050  0D31                     l3251:	
  2051                           
  2052                           ;PR28.c: 366: { if(flag==0){flag = 0;}
  2053  0D31  084F               	movf	_flag,w
  2054  0D32  1D03               	btfss	3,2
  2055  0D33  2D44               	goto	l3261
  2056  0D34  2D47               	goto	l3263
  2057  0D35                     l3255:	
  2058                           ;PR28.c: 369: }else {
  2059                           
  2060                           ;PR28.c: 367: else
  2061                           ;PR28.c: 368: flag = 1;
  2062                           
  2063                           
  2064                           ;PR28.c: 370: store();
  2065  0D35  160A  118A  26E3  120A  158A  	fcall	_store
  2066                           
  2067                           ;PR28.c: 371: DisplayLEDs();
  2068  0D3A  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2069                           
  2070                           ;PR28.c: 372: if(flag ==0){flag = 1;}
  2071  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0D41  084F               	movf	_flag,w
  2074  0D42  1D03               	btfss	3,2
  2075  0D43  2D47               	goto	l3263
  2076  0D44                     l3261:	
  2077  0D44  01CF               	clrf	_flag
  2078  0D45  0ACF               	incf	_flag,f
  2079  0D46  2D48               	goto	l3265
  2080  0D47                     l3263:	
  2081                           
  2082                           ;PR28.c: 373: else
  2083                           ;PR28.c: 374: flag = 0;
  2084  0D47  01CF               	clrf	_flag
  2085  0D48                     l3265:	
  2086                           
  2087                           ;PR28.c: 375: }
  2088                           ;PR28.c: 376: }
  2089                           ;PR28.c: 377: if(Buttons.BTN1 ==1){
  2090  0D48  0333               	decf	_Buttons+1,w
  2091  0D49  1D03               	btfss	3,2
  2092  0D4A  2D6A               	goto	l3285
  2093                           
  2094                           ;PR28.c: 378: if (matrix[0][1] =='X' | matrix[0][1] == 'O')
  2095  0D4B  3058               	movlw	88
  2096  0D4C  063C               	xorwf	_matrix+1,w
  2097  0D4D  1903               	btfsc	3,2
  2098  0D4E  2D53               	goto	l3271
  2099  0D4F  304F               	movlw	79
  2100  0D50  063C               	xorwf	_matrix+1,w
  2101  0D51  1D03               	btfss	3,2
  2102  0D52  2D57               	goto	l3275
  2103  0D53                     l3271:	
  2104                           
  2105                           ;PR28.c: 379: { if(flag==0){flag = 0;}
  2106  0D53  084F               	movf	_flag,w
  2107  0D54  1D03               	btfss	3,2
  2108  0D55  2D66               	goto	l3281
  2109  0D56  2D69               	goto	l3283
  2110  0D57                     l3275:	
  2111                           ;PR28.c: 382: }else {
  2112                           
  2113                           ;PR28.c: 380: else
  2114                           ;PR28.c: 381: flag = 1;
  2115                           
  2116                           
  2117                           ;PR28.c: 383: store();
  2118  0D57  160A  118A  26E3  120A  158A  	fcall	_store
  2119                           
  2120                           ;PR28.c: 384: DisplayLEDs();
  2121  0D5C  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2122                           
  2123                           ;PR28.c: 385: if(flag ==0){flag = 1;}
  2124  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0D63  084F               	movf	_flag,w
  2127  0D64  1D03               	btfss	3,2
  2128  0D65  2D69               	goto	l3283
  2129  0D66                     l3281:	
  2130  0D66  01CF               	clrf	_flag
  2131  0D67  0ACF               	incf	_flag,f
  2132  0D68  2D6A               	goto	l3285
  2133  0D69                     l3283:	
  2134                           
  2135                           ;PR28.c: 386: else
  2136                           ;PR28.c: 387: flag = 0;
  2137  0D69  01CF               	clrf	_flag
  2138  0D6A                     l3285:	
  2139                           
  2140                           ;PR28.c: 388: }
  2141                           ;PR28.c: 389: }
  2142                           ;PR28.c: 390: if(Buttons.BTN2 ==1){
  2143  0D6A  0334               	decf	_Buttons+2,w
  2144  0D6B  1D03               	btfss	3,2
  2145  0D6C  2D8C               	goto	l3305
  2146                           
  2147                           ;PR28.c: 391: if (matrix[0][2] =='X' | matrix[0][2] == 'O')
  2148  0D6D  3058               	movlw	88
  2149  0D6E  063D               	xorwf	_matrix+2,w
  2150  0D6F  1903               	btfsc	3,2
  2151  0D70  2D75               	goto	l3291
  2152  0D71  304F               	movlw	79
  2153  0D72  063D               	xorwf	_matrix+2,w
  2154  0D73  1D03               	btfss	3,2
  2155  0D74  2D79               	goto	l3295
  2156  0D75                     l3291:	
  2157                           
  2158                           ;PR28.c: 392: { if(flag==0){flag = 0;}
  2159  0D75  084F               	movf	_flag,w
  2160  0D76  1D03               	btfss	3,2
  2161  0D77  2D88               	goto	l3301
  2162  0D78  2D8B               	goto	l3303
  2163  0D79                     l3295:	
  2164                           ;PR28.c: 395: }else {
  2165                           
  2166                           ;PR28.c: 393: else
  2167                           ;PR28.c: 394: flag = 1;
  2168                           
  2169                           
  2170                           ;PR28.c: 396: store();
  2171  0D79  160A  118A  26E3  120A  158A  	fcall	_store
  2172                           
  2173                           ;PR28.c: 397: DisplayLEDs();
  2174  0D7E  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2175                           
  2176                           ;PR28.c: 398: if(flag ==0){flag = 1;}
  2177  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0D85  084F               	movf	_flag,w
  2180  0D86  1D03               	btfss	3,2
  2181  0D87  2D8B               	goto	l3303
  2182  0D88                     l3301:	
  2183  0D88  01CF               	clrf	_flag
  2184  0D89  0ACF               	incf	_flag,f
  2185  0D8A  2D8C               	goto	l3305
  2186  0D8B                     l3303:	
  2187                           
  2188                           ;PR28.c: 399: else
  2189                           ;PR28.c: 400: flag = 0;
  2190  0D8B  01CF               	clrf	_flag
  2191  0D8C                     l3305:	
  2192                           
  2193                           ;PR28.c: 401: }
  2194                           ;PR28.c: 402: }
  2195                           ;PR28.c: 403: if(Buttons.BTN3 ==1){
  2196  0D8C  0335               	decf	_Buttons+3,w
  2197  0D8D  1D03               	btfss	3,2
  2198  0D8E  2DAE               	goto	l3325
  2199                           
  2200                           ;PR28.c: 404: if (matrix[1][0] =='X' | matrix[1][0] == 'O')
  2201  0D8F  3058               	movlw	88
  2202  0D90  063E               	xorwf	_matrix+3,w
  2203  0D91  1903               	btfsc	3,2
  2204  0D92  2D97               	goto	l3311
  2205  0D93  304F               	movlw	79
  2206  0D94  063E               	xorwf	_matrix+3,w
  2207  0D95  1D03               	btfss	3,2
  2208  0D96  2D9B               	goto	l3315
  2209  0D97                     l3311:	
  2210                           
  2211                           ;PR28.c: 405: { if(flag==0){flag = 0;}
  2212  0D97  084F               	movf	_flag,w
  2213  0D98  1D03               	btfss	3,2
  2214  0D99  2DAA               	goto	l3321
  2215  0D9A  2DAD               	goto	l3323
  2216  0D9B                     l3315:	
  2217                           ;PR28.c: 408: }else {
  2218                           
  2219                           ;PR28.c: 406: else
  2220                           ;PR28.c: 407: flag = 1;
  2221                           
  2222                           
  2223                           ;PR28.c: 409: store();
  2224  0D9B  160A  118A  26E3  120A  158A  	fcall	_store
  2225                           
  2226                           ;PR28.c: 410: DisplayLEDs();
  2227  0DA0  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2228                           
  2229                           ;PR28.c: 411: if(flag ==0){flag = 1;}
  2230  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0DA7  084F               	movf	_flag,w
  2233  0DA8  1D03               	btfss	3,2
  2234  0DA9  2DAD               	goto	l3323
  2235  0DAA                     l3321:	
  2236  0DAA  01CF               	clrf	_flag
  2237  0DAB  0ACF               	incf	_flag,f
  2238  0DAC  2DAE               	goto	l3325
  2239  0DAD                     l3323:	
  2240                           
  2241                           ;PR28.c: 412: else
  2242                           ;PR28.c: 413: flag = 0;
  2243  0DAD  01CF               	clrf	_flag
  2244  0DAE                     l3325:	
  2245                           
  2246                           ;PR28.c: 414: }
  2247                           ;PR28.c: 415: }
  2248                           ;PR28.c: 416: if(Buttons.BTN4 ==1){
  2249  0DAE  0336               	decf	_Buttons+4,w
  2250  0DAF  1D03               	btfss	3,2
  2251  0DB0  2DD0               	goto	l3345
  2252                           
  2253                           ;PR28.c: 417: if (matrix[1][1] =='X' | matrix[1][1] == 'O')
  2254  0DB1  3058               	movlw	88
  2255  0DB2  063F               	xorwf	_matrix+4,w
  2256  0DB3  1903               	btfsc	3,2
  2257  0DB4  2DB9               	goto	l3331
  2258  0DB5  304F               	movlw	79
  2259  0DB6  063F               	xorwf	_matrix+4,w
  2260  0DB7  1D03               	btfss	3,2
  2261  0DB8  2DBD               	goto	l3335
  2262  0DB9                     l3331:	
  2263                           
  2264                           ;PR28.c: 418: { if(flag==0){flag = 0;}
  2265  0DB9  084F               	movf	_flag,w
  2266  0DBA  1D03               	btfss	3,2
  2267  0DBB  2DCC               	goto	l3341
  2268  0DBC  2DCF               	goto	l3343
  2269  0DBD                     l3335:	
  2270                           ;PR28.c: 421: }else {
  2271                           
  2272                           ;PR28.c: 419: else
  2273                           ;PR28.c: 420: flag = 1;
  2274                           
  2275                           
  2276                           ;PR28.c: 422: store();
  2277  0DBD  160A  118A  26E3  120A  158A  	fcall	_store
  2278                           
  2279                           ;PR28.c: 423: DisplayLEDs();
  2280  0DC2  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2281                           
  2282                           ;PR28.c: 424: if(flag ==0){flag = 1;}
  2283  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0DC9  084F               	movf	_flag,w
  2286  0DCA  1D03               	btfss	3,2
  2287  0DCB  2DCF               	goto	l3343
  2288  0DCC                     l3341:	
  2289  0DCC  01CF               	clrf	_flag
  2290  0DCD  0ACF               	incf	_flag,f
  2291  0DCE  2DD0               	goto	l3345
  2292  0DCF                     l3343:	
  2293                           
  2294                           ;PR28.c: 425: else
  2295                           ;PR28.c: 426: flag = 0;
  2296  0DCF  01CF               	clrf	_flag
  2297  0DD0                     l3345:	
  2298                           
  2299                           ;PR28.c: 427: }
  2300                           ;PR28.c: 428: }
  2301                           ;PR28.c: 429: if(Buttons.BTN5 ==1){
  2302  0DD0  0337               	decf	_Buttons+5,w
  2303  0DD1  1D03               	btfss	3,2
  2304  0DD2  2DF2               	goto	l3365
  2305                           
  2306                           ;PR28.c: 430: if (matrix[1][2] =='X' | matrix[1][2] == 'O')
  2307  0DD3  3058               	movlw	88
  2308  0DD4  0640               	xorwf	_matrix+5,w
  2309  0DD5  1903               	btfsc	3,2
  2310  0DD6  2DDB               	goto	l3351
  2311  0DD7  304F               	movlw	79
  2312  0DD8  0640               	xorwf	_matrix+5,w
  2313  0DD9  1D03               	btfss	3,2
  2314  0DDA  2DDF               	goto	l3355
  2315  0DDB                     l3351:	
  2316                           
  2317                           ;PR28.c: 431: { if(flag==0){flag = 0;}
  2318  0DDB  084F               	movf	_flag,w
  2319  0DDC  1D03               	btfss	3,2
  2320  0DDD  2DEE               	goto	l3361
  2321  0DDE  2DF1               	goto	l3363
  2322  0DDF                     l3355:	
  2323                           ;PR28.c: 434: }else {
  2324                           
  2325                           ;PR28.c: 432: else
  2326                           ;PR28.c: 433: flag = 1;
  2327                           
  2328                           
  2329                           ;PR28.c: 435: store();
  2330  0DDF  160A  118A  26E3  120A  158A  	fcall	_store
  2331                           
  2332                           ;PR28.c: 436: DisplayLEDs();
  2333  0DE4  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2334                           
  2335                           ;PR28.c: 437: if(flag ==0){flag = 1;}
  2336  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0DEB  084F               	movf	_flag,w
  2339  0DEC  1D03               	btfss	3,2
  2340  0DED  2DF1               	goto	l3363
  2341  0DEE                     l3361:	
  2342  0DEE  01CF               	clrf	_flag
  2343  0DEF  0ACF               	incf	_flag,f
  2344  0DF0  2DF2               	goto	l3365
  2345  0DF1                     l3363:	
  2346                           
  2347                           ;PR28.c: 438: else
  2348                           ;PR28.c: 439: flag = 0;
  2349  0DF1  01CF               	clrf	_flag
  2350  0DF2                     l3365:	
  2351                           
  2352                           ;PR28.c: 440: }
  2353                           ;PR28.c: 441: }
  2354                           ;PR28.c: 442: if(Buttons.BTN6 ==1){
  2355  0DF2  0338               	decf	_Buttons+6,w
  2356  0DF3  1D03               	btfss	3,2
  2357  0DF4  2E14               	goto	l3385
  2358                           
  2359                           ;PR28.c: 443: if (matrix[2][0] =='X' | matrix[2][0] == 'O')
  2360  0DF5  3058               	movlw	88
  2361  0DF6  0641               	xorwf	_matrix+6,w
  2362  0DF7  1903               	btfsc	3,2
  2363  0DF8  2DFD               	goto	l3371
  2364  0DF9  304F               	movlw	79
  2365  0DFA  0641               	xorwf	_matrix+6,w
  2366  0DFB  1D03               	btfss	3,2
  2367  0DFC  2E01               	goto	l3375
  2368  0DFD                     l3371:	
  2369                           
  2370                           ;PR28.c: 444: { if(flag==0){flag = 0;}
  2371  0DFD  084F               	movf	_flag,w
  2372  0DFE  1D03               	btfss	3,2
  2373  0DFF  2E10               	goto	l3381
  2374  0E00  2E13               	goto	l3383
  2375  0E01                     l3375:	
  2376                           ;PR28.c: 447: }else {
  2377                           
  2378                           ;PR28.c: 445: else
  2379                           ;PR28.c: 446: flag = 1;
  2380                           
  2381                           
  2382                           ;PR28.c: 448: store();
  2383  0E01  160A  118A  26E3  120A  158A  	fcall	_store
  2384                           
  2385                           ;PR28.c: 449: DisplayLEDs();
  2386  0E06  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2387                           
  2388                           ;PR28.c: 450: if(flag ==0){flag = 1;}
  2389  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0E0D  084F               	movf	_flag,w
  2392  0E0E  1D03               	btfss	3,2
  2393  0E0F  2E13               	goto	l3383
  2394  0E10                     l3381:	
  2395  0E10  01CF               	clrf	_flag
  2396  0E11  0ACF               	incf	_flag,f
  2397  0E12  2E14               	goto	l3385
  2398  0E13                     l3383:	
  2399                           
  2400                           ;PR28.c: 451: else
  2401                           ;PR28.c: 452: flag = 0;
  2402  0E13  01CF               	clrf	_flag
  2403  0E14                     l3385:	
  2404                           
  2405                           ;PR28.c: 453: }
  2406                           ;PR28.c: 454: }
  2407                           ;PR28.c: 455: if(Buttons.BTN7 ==1){
  2408  0E14  0339               	decf	_Buttons+7,w
  2409  0E15  1D03               	btfss	3,2
  2410  0E16  2E36               	goto	l3405
  2411                           
  2412                           ;PR28.c: 456: if (matrix[2][1] =='X' | matrix[2][1] == 'O')
  2413  0E17  3058               	movlw	88
  2414  0E18  0642               	xorwf	_matrix+7,w
  2415  0E19  1903               	btfsc	3,2
  2416  0E1A  2E1F               	goto	l3391
  2417  0E1B  304F               	movlw	79
  2418  0E1C  0642               	xorwf	_matrix+7,w
  2419  0E1D  1D03               	btfss	3,2
  2420  0E1E  2E23               	goto	l3395
  2421  0E1F                     l3391:	
  2422                           
  2423                           ;PR28.c: 457: { if(flag==0){flag = 0;}
  2424  0E1F  084F               	movf	_flag,w
  2425  0E20  1D03               	btfss	3,2
  2426  0E21  2E32               	goto	l3401
  2427  0E22  2E35               	goto	l3403
  2428  0E23                     l3395:	
  2429                           ;PR28.c: 460: }else {
  2430                           
  2431                           ;PR28.c: 458: else
  2432                           ;PR28.c: 459: flag = 1;
  2433                           
  2434                           
  2435                           ;PR28.c: 461: store();
  2436  0E23  160A  118A  26E3  120A  158A  	fcall	_store
  2437                           
  2438                           ;PR28.c: 462: DisplayLEDs();
  2439  0E28  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2440                           
  2441                           ;PR28.c: 463: if(flag ==0){flag = 1;}
  2442  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0E2F  084F               	movf	_flag,w
  2445  0E30  1D03               	btfss	3,2
  2446  0E31  2E35               	goto	l3403
  2447  0E32                     l3401:	
  2448  0E32  01CF               	clrf	_flag
  2449  0E33  0ACF               	incf	_flag,f
  2450  0E34  2E36               	goto	l3405
  2451  0E35                     l3403:	
  2452                           
  2453                           ;PR28.c: 464: else
  2454                           ;PR28.c: 465: flag = 0;
  2455  0E35  01CF               	clrf	_flag
  2456  0E36                     l3405:	
  2457                           
  2458                           ;PR28.c: 466: }
  2459                           ;PR28.c: 467: }
  2460                           ;PR28.c: 468: if(Buttons.BTN8 ==1){
  2461  0E36  033A               	decf	_Buttons+8,w
  2462  0E37  1D03               	btfss	3,2
  2463  0E38  0008               	return
  2464                           
  2465                           ;PR28.c: 469: if (matrix[2][2] =='X' | matrix[2][2] == 'O')
  2466  0E39  3058               	movlw	88
  2467  0E3A  0643               	xorwf	_matrix+8,w
  2468  0E3B  1903               	btfsc	3,2
  2469  0E3C  2E41               	goto	l3411
  2470  0E3D  304F               	movlw	79
  2471  0E3E  0643               	xorwf	_matrix+8,w
  2472  0E3F  1D03               	btfss	3,2
  2473  0E40  2E49               	goto	l3415
  2474  0E41                     l3411:	
  2475                           
  2476                           ;PR28.c: 470: { if(flag==0){flag = 0;}
  2477  0E41  084F               	movf	_flag,w
  2478  0E42  1D03               	btfss	3,2
  2479  0E43  2E46               	goto	l338
  2480  0E44  01CF               	clrf	_flag
  2481  0E45  0008               	return
  2482  0E46                     l338:	
  2483                           
  2484                           ;PR28.c: 471: else
  2485                           ;PR28.c: 472: flag = 1;
  2486  0E46  01CF               	clrf	_flag
  2487  0E47  0ACF               	incf	_flag,f
  2488                           
  2489                           ;PR28.c: 473: }else {
  2490  0E48  0008               	return
  2491  0E49                     l3415:	
  2492                           
  2493                           ;PR28.c: 474: store();
  2494  0E49  160A  118A  26E3  120A  158A  	fcall	_store
  2495                           
  2496                           ;PR28.c: 475: DisplayLEDs();
  2497  0E4E  120A  118A  202A  120A  158A  	fcall	_DisplayLEDs
  2498                           
  2499                           ;PR28.c: 476: if(flag ==0){flag = 1;}
  2500  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0E55  084F               	movf	_flag,w
  2503  0E56  1D03               	btfss	3,2
  2504  0E57  2E5B               	goto	l3423
  2505  0E58  01CF               	clrf	_flag
  2506  0E59  0ACF               	incf	_flag,f
  2507  0E5A  0008               	return
  2508  0E5B                     l3423:	
  2509                           
  2510                           ;PR28.c: 477: else
  2511                           ;PR28.c: 478: flag = 0;
  2512  0E5B  01CF               	clrf	_flag
  2513  0E5C  0008               	return
  2514  0E5D                     __end_of_checkstatus:	
  2515                           
  2516                           	psect	text13
  2517  16E3                     __ptext13:	
  2518 ;; *************** function _store *****************
  2519 ;; Defined at:
  2520 ;;		line 331 in file "../../Source file/PR28.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;		None               void
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2534 ;;      Params:         0       0       0       0       0
  2535 ;;      Locals:         0       0       0       0       0
  2536 ;;      Temps:          0       1       0       0       0
  2537 ;;      Totals:         0       1       0       0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    3
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_checkstatus
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _store
  2550  16E3                     _store:	
  2551                           
  2552                           ;PR28.c: 333: if (flag ==0){
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in _store: [wreg+status,2+status,0]
  2556  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  2557  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  2558  16E5  084F               	movf	_flag,w
  2559  16E6  1D03               	btfss	3,2
  2560  16E7  2F28               	goto	l2739
  2561                           
  2562                           ;PR28.c: 334: if(Buttons.BTN0 == 1) { matrix[0][0] = 'X';}
  2563  16E8  0332               	decf	_Buttons,w
  2564  16E9  1D03               	btfss	3,2
  2565  16EA  2EEF               	goto	l2707
  2566  16EB  3058               	movlw	88
  2567  16EC  00D2               	movwf	??_store
  2568  16ED  0852               	movf	??_store,w
  2569  16EE  00BB               	movwf	_matrix
  2570  16EF                     l2707:	
  2571                           
  2572                           ;PR28.c: 335: if(Buttons.BTN1 == 1) { matrix[0][1] = 'X';}
  2573  16EF  0333               	decf	_Buttons+1,w
  2574  16F0  1D03               	btfss	3,2
  2575  16F1  2EF6               	goto	l2711
  2576  16F2  3058               	movlw	88
  2577  16F3  00D2               	movwf	??_store
  2578  16F4  0852               	movf	??_store,w
  2579  16F5  00BC               	movwf	_matrix+1
  2580  16F6                     l2711:	
  2581                           
  2582                           ;PR28.c: 336: if(Buttons.BTN2 == 1) { matrix[0][2] = 'X';}
  2583  16F6  0334               	decf	_Buttons+2,w
  2584  16F7  1D03               	btfss	3,2
  2585  16F8  2EFD               	goto	l2715
  2586  16F9  3058               	movlw	88
  2587  16FA  00D2               	movwf	??_store
  2588  16FB  0852               	movf	??_store,w
  2589  16FC  00BD               	movwf	_matrix+2
  2590  16FD                     l2715:	
  2591                           
  2592                           ;PR28.c: 337: if(Buttons.BTN3 == 1) { matrix[1][0] = 'X';}
  2593  16FD  0335               	decf	_Buttons+3,w
  2594  16FE  1D03               	btfss	3,2
  2595  16FF  2F04               	goto	l2719
  2596  1700  3058               	movlw	88
  2597  1701  00D2               	movwf	??_store
  2598  1702  0852               	movf	??_store,w
  2599  1703  00BE               	movwf	_matrix+3
  2600  1704                     l2719:	
  2601                           
  2602                           ;PR28.c: 338: if(Buttons.BTN4 == 1) { matrix[1][1] = 'X';}
  2603  1704  0336               	decf	_Buttons+4,w
  2604  1705  1D03               	btfss	3,2
  2605  1706  2F0B               	goto	l2723
  2606  1707  3058               	movlw	88
  2607  1708  00D2               	movwf	??_store
  2608  1709  0852               	movf	??_store,w
  2609  170A  00BF               	movwf	_matrix+4
  2610  170B                     l2723:	
  2611                           
  2612                           ;PR28.c: 339: if(Buttons.BTN5 == 1) { matrix[1][2] = 'X';}
  2613  170B  0337               	decf	_Buttons+5,w
  2614  170C  1D03               	btfss	3,2
  2615  170D  2F12               	goto	l2727
  2616  170E  3058               	movlw	88
  2617  170F  00D2               	movwf	??_store
  2618  1710  0852               	movf	??_store,w
  2619  1711  00C0               	movwf	_matrix+5
  2620  1712                     l2727:	
  2621                           
  2622                           ;PR28.c: 340: if(Buttons.BTN6 == 1) { matrix[2][0] = 'X';}
  2623  1712  0338               	decf	_Buttons+6,w
  2624  1713  1D03               	btfss	3,2
  2625  1714  2F19               	goto	l2731
  2626  1715  3058               	movlw	88
  2627  1716  00D2               	movwf	??_store
  2628  1717  0852               	movf	??_store,w
  2629  1718  00C1               	movwf	_matrix+6
  2630  1719                     l2731:	
  2631                           
  2632                           ;PR28.c: 341: if(Buttons.BTN7 == 1) { matrix[2][1] = 'X';}
  2633  1719  0339               	decf	_Buttons+7,w
  2634  171A  1D03               	btfss	3,2
  2635  171B  2F20               	goto	l2735
  2636  171C  3058               	movlw	88
  2637  171D  00D2               	movwf	??_store
  2638  171E  0852               	movf	??_store,w
  2639  171F  00C2               	movwf	_matrix+7
  2640  1720                     l2735:	
  2641                           
  2642                           ;PR28.c: 342: if(Buttons.BTN8 == 1) { matrix[2][2] = 'X';}
  2643  1720  033A               	decf	_Buttons+8,w
  2644  1721  1D03               	btfss	3,2
  2645  1722  0008               	return
  2646  1723  3058               	movlw	88
  2647  1724  00D2               	movwf	??_store
  2648  1725  0852               	movf	??_store,w
  2649  1726  00C3               	movwf	_matrix+8
  2650                           
  2651                           ;PR28.c: 343: }
  2652  1727  0008               	return
  2653  1728                     l2739:	
  2654                           
  2655                           ;PR28.c: 344: else if(flag == 1){
  2656  1728  034F               	decf	_flag,w
  2657  1729  1D03               	btfss	3,2
  2658  172A  0008               	return
  2659                           
  2660                           ;PR28.c: 345: if(Buttons.BTN0 == 1) { matrix[0][0] = 'O';}
  2661  172B  0332               	decf	_Buttons,w
  2662  172C  1D03               	btfss	3,2
  2663  172D  2F32               	goto	l2745
  2664  172E  304F               	movlw	79
  2665  172F  00D2               	movwf	??_store
  2666  1730  0852               	movf	??_store,w
  2667  1731  00BB               	movwf	_matrix
  2668  1732                     l2745:	
  2669                           
  2670                           ;PR28.c: 346: if(Buttons.BTN1 == 1) { matrix[0][1] = 'O';}
  2671  1732  0333               	decf	_Buttons+1,w
  2672  1733  1D03               	btfss	3,2
  2673  1734  2F39               	goto	l2749
  2674  1735  304F               	movlw	79
  2675  1736  00D2               	movwf	??_store
  2676  1737  0852               	movf	??_store,w
  2677  1738  00BC               	movwf	_matrix+1
  2678  1739                     l2749:	
  2679                           
  2680                           ;PR28.c: 347: if(Buttons.BTN2 == 1) { matrix[0][2] = 'O';}
  2681  1739  0334               	decf	_Buttons+2,w
  2682  173A  1D03               	btfss	3,2
  2683  173B  2F40               	goto	l2753
  2684  173C  304F               	movlw	79
  2685  173D  00D2               	movwf	??_store
  2686  173E  0852               	movf	??_store,w
  2687  173F  00BD               	movwf	_matrix+2
  2688  1740                     l2753:	
  2689                           
  2690                           ;PR28.c: 348: if(Buttons.BTN3 == 1) { matrix[1][0] = 'O';}
  2691  1740  0335               	decf	_Buttons+3,w
  2692  1741  1D03               	btfss	3,2
  2693  1742  2F47               	goto	l2757
  2694  1743  304F               	movlw	79
  2695  1744  00D2               	movwf	??_store
  2696  1745  0852               	movf	??_store,w
  2697  1746  00BE               	movwf	_matrix+3
  2698  1747                     l2757:	
  2699                           
  2700                           ;PR28.c: 349: if(Buttons.BTN4 == 1) { matrix[1][1] = 'O';}
  2701  1747  0336               	decf	_Buttons+4,w
  2702  1748  1D03               	btfss	3,2
  2703  1749  2F4E               	goto	l2761
  2704  174A  304F               	movlw	79
  2705  174B  00D2               	movwf	??_store
  2706  174C  0852               	movf	??_store,w
  2707  174D  00BF               	movwf	_matrix+4
  2708  174E                     l2761:	
  2709                           
  2710                           ;PR28.c: 350: if(Buttons.BTN5 == 1) { matrix[1][2] = 'O';}
  2711  174E  0337               	decf	_Buttons+5,w
  2712  174F  1D03               	btfss	3,2
  2713  1750  2F55               	goto	l2765
  2714  1751  304F               	movlw	79
  2715  1752  00D2               	movwf	??_store
  2716  1753  0852               	movf	??_store,w
  2717  1754  00C0               	movwf	_matrix+5
  2718  1755                     l2765:	
  2719                           
  2720                           ;PR28.c: 351: if(Buttons.BTN6 == 1) { matrix[2][0] = 'O';}
  2721  1755  0338               	decf	_Buttons+6,w
  2722  1756  1D03               	btfss	3,2
  2723  1757  2F5C               	goto	l2769
  2724  1758  304F               	movlw	79
  2725  1759  00D2               	movwf	??_store
  2726  175A  0852               	movf	??_store,w
  2727  175B  00C1               	movwf	_matrix+6
  2728  175C                     l2769:	
  2729                           
  2730                           ;PR28.c: 352: if(Buttons.BTN7 == 1) { matrix[2][1] = 'O';}
  2731  175C  0339               	decf	_Buttons+7,w
  2732  175D  1D03               	btfss	3,2
  2733  175E  2F63               	goto	l2773
  2734  175F  304F               	movlw	79
  2735  1760  00D2               	movwf	??_store
  2736  1761  0852               	movf	??_store,w
  2737  1762  00C2               	movwf	_matrix+7
  2738  1763                     l2773:	
  2739                           
  2740                           ;PR28.c: 353: if(Buttons.BTN8 == 1) { matrix[2][2] = 'O';}
  2741  1763  033A               	decf	_Buttons+8,w
  2742  1764  1D03               	btfss	3,2
  2743  1765  0008               	return
  2744  1766  304F               	movlw	79
  2745  1767  00D2               	movwf	??_store
  2746  1768  0852               	movf	??_store,w
  2747  1769  00C3               	movwf	_matrix+8
  2748  176A  0008               	return
  2749  176B                     __end_of_store:	
  2750                           
  2751                           	psect	text14
  2752  002A                     __ptext14:	
  2753 ;; *************** function _DisplayLEDs *****************
  2754 ;; Defined at:
  2755 ;;		line 591 in file "../../Source file/PR28.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  k               2    3[BANK0 ] int 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       2       0       0       0
  2771 ;;      Temps:          0       1       0       0       0
  2772 ;;      Totals:         0       3       0       0       0
  2773 ;;Total ram usage:        3 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    4
  2776 ;; This function calls:
  2777 ;;		_led_display1
  2778 ;;		_led_display2
  2779 ;;		_led_display3
  2780 ;; This function is called by:
  2781 ;;		_checkstatus
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function _DisplayLEDs
  2787  002A                     _DisplayLEDs:	
  2788                           
  2789                           ;PR28.c: 593: RC5 = 1; RC6 =1; RC7 =1;
  2790                           
  2791                           ;incstack = 0
  2792                           ; Regs used in _DisplayLEDs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2793  002A  1283               	bcf	3,5	;RP0=0, select bank0
  2794  002B  1303               	bcf	3,6	;RP1=0, select bank0
  2795  002C  1687               	bsf	7,5	;volatile
  2796  002D  1707               	bsf	7,6	;volatile
  2797  002E  1787               	bsf	7,7	;volatile
  2798                           
  2799                           ;PR28.c: 594: RA6 = RA7 = RA0 = 0;
  2800  002F  1005               	bcf	5,0	;volatile
  2801  0030  1385               	bcf	5,7	;volatile
  2802  0031  1305               	bcf	5,6	;volatile
  2803                           
  2804                           ;PR28.c: 597: for(int k = 0; k< 3 ; k++)
  2805  0032  01D5               	clrf	DisplayLEDs@k
  2806  0033  01D6               	clrf	DisplayLEDs@k+1
  2807  0034                     L53:	
  2808  0034  0856               	movf	DisplayLEDs@k+1,w
  2809  0035  3A80               	xorlw	128
  2810  0036  00FF               	movwf	127
  2811  0037  3080               	movlw	128
  2812  0038  027F               	subwf	127,w
  2813  0039  1D03               	skipz
  2814  003A  283D               	goto	u4075
  2815  003B  3003               	movlw	3
  2816  003C  0255               	subwf	DisplayLEDs@k,w
  2817  003D                     u4075:	
  2818  003D  1803               	btfsc	3,0
  2819  003E  0008               	return
  2820                           
  2821                           ;PR28.c: 598: {
  2822                           ;PR28.c: 599: led_display1(result1[0]);led_display2(result1[1]);led_display3(result1[2])
      +                          ;
  2823  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0041  0844               	movf	_result1,w
  2826  0042  160A  118A  2581  120A  118A  	fcall	_led_display1
  2827  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0049  0845               	movf	_result1+1,w
  2830  004A  160A  118A  25F7  120A  118A  	fcall	_led_display2
  2831  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0050  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0051  0846               	movf	_result1+2,w
  2834  0052  160A  118A  266D  120A  118A  	fcall	_led_display3
  2835                           
  2836                           ;PR28.c: 600: if(matrix[0][k] == 'O' & matrix[1][k] == 'O' & matrix[2][k] == 'O'){result
      +                          1[k] = 0b01001001;}
  2837  0057  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0058  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0059  0855               	movf	DisplayLEDs@k,w
  2840  005A  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2841  005B  0084               	movwf	4
  2842  005C  304F               	movlw	79
  2843  005D  1383               	bcf	3,7	;select IRP bank0
  2844  005E  0600               	xorwf	0,w
  2845  005F  1D03               	btfss	3,2
  2846  0060  2871               	goto	l2795
  2847  0061  0855               	movf	DisplayLEDs@k,w
  2848  0062  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2849  0063  0084               	movwf	4
  2850  0064  304F               	movlw	79
  2851  0065  0600               	xorwf	0,w
  2852  0066  1D03               	btfss	3,2
  2853  0067  2871               	goto	l2795
  2854  0068  0855               	movf	DisplayLEDs@k,w
  2855  0069  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  2856  006A  0084               	movwf	4
  2857  006B  304F               	movlw	79
  2858  006C  0600               	xorwf	0,w
  2859  006D  1D03               	btfss	3,2
  2860  006E  2871               	goto	l2795
  2861  006F  3049               	movlw	73
  2862  0070  2D29               	goto	L52
  2863  0071                     l2795:	
  2864                           
  2865                           ;PR28.c: 601: else if(matrix[0][k] == 'O' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01001000;}
  2866  0071  0855               	movf	DisplayLEDs@k,w
  2867  0072  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2868  0073  0084               	movwf	4
  2869  0074  304F               	movlw	79
  2870  0075  0600               	xorwf	0,w
  2871  0076  1D03               	btfss	3,2
  2872  0077  2886               	goto	l2803
  2873  0078  0855               	movf	DisplayLEDs@k,w
  2874  0079  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2875  007A  0084               	movwf	4
  2876  007B  304F               	movlw	79
  2877  007C  0600               	xorwf	0,w
  2878  007D  1D03               	btfss	3,2
  2879  007E  2886               	goto	l2803
  2880  007F  0855               	movf	DisplayLEDs@k,w
  2881  0080  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  2882  0081  0084               	movwf	4
  2883  0082  3020               	movlw	32
  2884  0083  0600               	xorwf	0,w
  2885  0084  1903               	btfsc	3,2
  2886  0085  291B               	goto	L66
  2887  0086                     l2803:	
  2888                           
  2889                           ;PR28.c: 602: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b01000001;}
  2890  0086  0855               	movf	DisplayLEDs@k,w
  2891  0087  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2892  0088  0084               	movwf	4
  2893  0089  304F               	movlw	79
  2894  008A  0600               	xorwf	0,w
  2895  008B  1D03               	btfss	3,2
  2896  008C  289B               	goto	l2811
  2897  008D  0855               	movf	DisplayLEDs@k,w
  2898  008E  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2899  008F  0084               	movwf	4
  2900  0090  3020               	movlw	32
  2901  0091  0600               	xorwf	0,w
  2902  0092  1D03               	btfss	3,2
  2903  0093  289B               	goto	l2811
  2904  0094  0855               	movf	DisplayLEDs@k,w
  2905  0095  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  2906  0096  0084               	movwf	4
  2907  0097  304F               	movlw	79
  2908  0098  0600               	xorwf	0,w
  2909  0099  1903               	btfsc	3,2
  2910  009A  29C7               	goto	L67
  2911  009B                     l2811:	
  2912                           
  2913                           ;PR28.c: 603: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01000000;}
  2914  009B  0855               	movf	DisplayLEDs@k,w
  2915  009C  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2916  009D  0084               	movwf	4
  2917  009E  304F               	movlw	79
  2918  009F  0600               	xorwf	0,w
  2919  00A0  1D03               	btfss	3,2
  2920  00A1  28B0               	goto	l2819
  2921  00A2  0855               	movf	DisplayLEDs@k,w
  2922  00A3  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2923  00A4  0084               	movwf	4
  2924  00A5  3020               	movlw	32
  2925  00A6  0600               	xorwf	0,w
  2926  00A7  1D03               	btfss	3,2
  2927  00A8  28B0               	goto	l2819
  2928  00A9  0855               	movf	DisplayLEDs@k,w
  2929  00AA  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  2930  00AB  0084               	movwf	4
  2931  00AC  3020               	movlw	32
  2932  00AD  0600               	xorwf	0,w
  2933  00AE  1903               	btfsc	3,2
  2934  00AF  2A77               	goto	L75
  2935  00B0                     l2819:	
  2936                           
  2937                           ;PR28.c: 604: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00001001;}
  2938  00B0  0855               	movf	DisplayLEDs@k,w
  2939  00B1  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2940  00B2  0084               	movwf	4
  2941  00B3  3020               	movlw	32
  2942  00B4  0600               	xorwf	0,w
  2943  00B5  1D03               	btfss	3,2
  2944  00B6  28C5               	goto	l2827
  2945  00B7  0855               	movf	DisplayLEDs@k,w
  2946  00B8  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2947  00B9  0084               	movwf	4
  2948  00BA  304F               	movlw	79
  2949  00BB  0600               	xorwf	0,w
  2950  00BC  1D03               	btfss	3,2
  2951  00BD  28C5               	goto	l2827
  2952  00BE  0855               	movf	DisplayLEDs@k,w
  2953  00BF  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  2954  00C0  0084               	movwf	4
  2955  00C1  304F               	movlw	79
  2956  00C2  0600               	xorwf	0,w
  2957  00C3  1903               	btfsc	3,2
  2958  00C4  2B23               	goto	L69
  2959  00C5                     l2827:	
  2960                           
  2961                           ;PR28.c: 605: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00001000;}
  2962  00C5  0855               	movf	DisplayLEDs@k,w
  2963  00C6  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2964  00C7  0084               	movwf	4
  2965  00C8  3020               	movlw	32
  2966  00C9  0600               	xorwf	0,w
  2967  00CA  1D03               	btfss	3,2
  2968  00CB  28DA               	goto	l2835
  2969  00CC  0855               	movf	DisplayLEDs@k,w
  2970  00CD  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2971  00CE  0084               	movwf	4
  2972  00CF  304F               	movlw	79
  2973  00D0  0600               	xorwf	0,w
  2974  00D1  1D03               	btfss	3,2
  2975  00D2  28DA               	goto	l2835
  2976  00D3  0855               	movf	DisplayLEDs@k,w
  2977  00D4  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  2978  00D5  0084               	movwf	4
  2979  00D6  3020               	movlw	32
  2980  00D7  0600               	xorwf	0,w
  2981  00D8  1903               	btfsc	3,2
  2982  00D9  2BD3               	goto	L60
  2983  00DA                     l2835:	
  2984                           
  2985                           ;PR28.c: 606: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00000001;}
  2986  00DA  0855               	movf	DisplayLEDs@k,w
  2987  00DB  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  2988  00DC  0084               	movwf	4
  2989  00DD  3020               	movlw	32
  2990  00DE  0600               	xorwf	0,w
  2991  00DF  1D03               	btfss	3,2
  2992  00E0  28EF               	goto	l2843
  2993  00E1  0855               	movf	DisplayLEDs@k,w
  2994  00E2  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  2995  00E3  0084               	movwf	4
  2996  00E4  3020               	movlw	32
  2997  00E5  0600               	xorwf	0,w
  2998  00E6  1D03               	btfss	3,2
  2999  00E7  28EF               	goto	l2843
  3000  00E8  0855               	movf	DisplayLEDs@k,w
  3001  00E9  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3002  00EA  0084               	movwf	4
  3003  00EB  304F               	movlw	79
  3004  00EC  0600               	xorwf	0,w
  3005  00ED  1903               	btfsc	3,2
  3006  00EE  2C83               	goto	l3177
  3007  00EF                     l2843:	
  3008                           
  3009                           ;PR28.c: 608: else if(matrix[0][k] == 'O' & matrix[1][k] == 'O' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b01001010;}
  3010  00EF  0855               	movf	DisplayLEDs@k,w
  3011  00F0  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3012  00F1  0084               	movwf	4
  3013  00F2  304F               	movlw	79
  3014  00F3  0600               	xorwf	0,w
  3015  00F4  1D03               	btfss	3,2
  3016  00F5  2906               	goto	l2851
  3017  00F6  0855               	movf	DisplayLEDs@k,w
  3018  00F7  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3019  00F8  0084               	movwf	4
  3020  00F9  304F               	movlw	79
  3021  00FA  0600               	xorwf	0,w
  3022  00FB  1D03               	btfss	3,2
  3023  00FC  2906               	goto	l2851
  3024  00FD  0855               	movf	DisplayLEDs@k,w
  3025  00FE  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3026  00FF  0084               	movwf	4
  3027  0100  3058               	movlw	88
  3028  0101  0600               	xorwf	0,w
  3029  0102  1D03               	btfss	3,2
  3030  0103  2906               	goto	l2851
  3031  0104  304A               	movlw	74
  3032  0105  2D29               	goto	L52
  3033  0106                     l2851:	
  3034                           
  3035                           ;PR28.c: 609: else if(matrix[0][k] == 'O' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01001000;}
  3036  0106  0855               	movf	DisplayLEDs@k,w
  3037  0107  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3038  0108  0084               	movwf	4
  3039  0109  304F               	movlw	79
  3040  010A  0600               	xorwf	0,w
  3041  010B  1D03               	btfss	3,2
  3042  010C  291D               	goto	l2859
  3043  010D  0855               	movf	DisplayLEDs@k,w
  3044  010E  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3045  010F  0084               	movwf	4
  3046  0110  304F               	movlw	79
  3047  0111  0600               	xorwf	0,w
  3048  0112  1D03               	btfss	3,2
  3049  0113  291D               	goto	l2859
  3050  0114  0855               	movf	DisplayLEDs@k,w
  3051  0115  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3052  0116  0084               	movwf	4
  3053  0117  3020               	movlw	32
  3054  0118  0600               	xorwf	0,w
  3055  0119  1D03               	btfss	3,2
  3056  011A  291D               	goto	l2859
  3057  011B                     L66:	
  3058  011B  3048               	movlw	72
  3059  011C  2D29               	goto	L52
  3060  011D                     l2859:	
  3061                           
  3062                           ;PR28.c: 610: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b01000010;}
  3063  011D  0855               	movf	DisplayLEDs@k,w
  3064  011E  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3065  011F  0084               	movwf	4
  3066  0120  304F               	movlw	79
  3067  0121  0600               	xorwf	0,w
  3068  0122  1D03               	btfss	3,2
  3069  0123  2932               	goto	l2867
  3070  0124  0855               	movf	DisplayLEDs@k,w
  3071  0125  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3072  0126  0084               	movwf	4
  3073  0127  3020               	movlw	32
  3074  0128  0600               	xorwf	0,w
  3075  0129  1D03               	btfss	3,2
  3076  012A  2932               	goto	l2867
  3077  012B  0855               	movf	DisplayLEDs@k,w
  3078  012C  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3079  012D  0084               	movwf	4
  3080  012E  3058               	movlw	88
  3081  012F  0600               	xorwf	0,w
  3082  0130  1903               	btfsc	3,2
  3083  0131  2A60               	goto	L71
  3084  0132                     l2867:	
  3085                           
  3086                           ;PR28.c: 611: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01000000;}
  3087  0132  0855               	movf	DisplayLEDs@k,w
  3088  0133  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3089  0134  0084               	movwf	4
  3090  0135  304F               	movlw	79
  3091  0136  0600               	xorwf	0,w
  3092  0137  1D03               	btfss	3,2
  3093  0138  2947               	goto	l2875
  3094  0139  0855               	movf	DisplayLEDs@k,w
  3095  013A  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3096  013B  0084               	movwf	4
  3097  013C  3020               	movlw	32
  3098  013D  0600               	xorwf	0,w
  3099  013E  1D03               	btfss	3,2
  3100  013F  2947               	goto	l2875
  3101  0140  0855               	movf	DisplayLEDs@k,w
  3102  0141  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3103  0142  0084               	movwf	4
  3104  0143  3020               	movlw	32
  3105  0144  0600               	xorwf	0,w
  3106  0145  1903               	btfsc	3,2
  3107  0146  2A77               	goto	L75
  3108  0147                     l2875:	
  3109                           
  3110                           ;PR28.c: 612: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00001010;}
  3111  0147  0855               	movf	DisplayLEDs@k,w
  3112  0148  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3113  0149  0084               	movwf	4
  3114  014A  3020               	movlw	32
  3115  014B  0600               	xorwf	0,w
  3116  014C  1D03               	btfss	3,2
  3117  014D  295C               	goto	l2883
  3118  014E  0855               	movf	DisplayLEDs@k,w
  3119  014F  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3120  0150  0084               	movwf	4
  3121  0151  304F               	movlw	79
  3122  0152  0600               	xorwf	0,w
  3123  0153  1D03               	btfss	3,2
  3124  0154  295C               	goto	l2883
  3125  0155  0855               	movf	DisplayLEDs@k,w
  3126  0156  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3127  0157  0084               	movwf	4
  3128  0158  3058               	movlw	88
  3129  0159  0600               	xorwf	0,w
  3130  015A  1903               	btfsc	3,2
  3131  015B  2BBC               	goto	L73
  3132  015C                     l2883:	
  3133                           
  3134                           ;PR28.c: 613: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00001000;}
  3135  015C  0855               	movf	DisplayLEDs@k,w
  3136  015D  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3137  015E  0084               	movwf	4
  3138  015F  3020               	movlw	32
  3139  0160  0600               	xorwf	0,w
  3140  0161  1D03               	btfss	3,2
  3141  0162  2971               	goto	l2891
  3142  0163  0855               	movf	DisplayLEDs@k,w
  3143  0164  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3144  0165  0084               	movwf	4
  3145  0166  304F               	movlw	79
  3146  0167  0600               	xorwf	0,w
  3147  0168  1D03               	btfss	3,2
  3148  0169  2971               	goto	l2891
  3149  016A  0855               	movf	DisplayLEDs@k,w
  3150  016B  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3151  016C  0084               	movwf	4
  3152  016D  3020               	movlw	32
  3153  016E  0600               	xorwf	0,w
  3154  016F  1903               	btfsc	3,2
  3155  0170  2BD3               	goto	L60
  3156  0171                     l2891:	
  3157                           
  3158                           ;PR28.c: 614: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00000010;}
  3159  0171  0855               	movf	DisplayLEDs@k,w
  3160  0172  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3161  0173  0084               	movwf	4
  3162  0174  3020               	movlw	32
  3163  0175  0600               	xorwf	0,w
  3164  0176  1D03               	btfss	3,2
  3165  0177  2986               	goto	l2899
  3166  0178  0855               	movf	DisplayLEDs@k,w
  3167  0179  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3168  017A  0084               	movwf	4
  3169  017B  3020               	movlw	32
  3170  017C  0600               	xorwf	0,w
  3171  017D  1D03               	btfss	3,2
  3172  017E  2986               	goto	l2899
  3173  017F  0855               	movf	DisplayLEDs@k,w
  3174  0180  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3175  0181  0084               	movwf	4
  3176  0182  3058               	movlw	88
  3177  0183  0600               	xorwf	0,w
  3178  0184  1903               	btfsc	3,2
  3179  0185  2D28               	goto	L56
  3180  0186                     l2899:	
  3181                           
  3182                           ;PR28.c: 616: else if(matrix[0][k] == 'O' & matrix[1][k] == 'X' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b01010001;}
  3183  0186  0855               	movf	DisplayLEDs@k,w
  3184  0187  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3185  0188  0084               	movwf	4
  3186  0189  304F               	movlw	79
  3187  018A  0600               	xorwf	0,w
  3188  018B  1D03               	btfss	3,2
  3189  018C  299D               	goto	l2907
  3190  018D  0855               	movf	DisplayLEDs@k,w
  3191  018E  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3192  018F  0084               	movwf	4
  3193  0190  3058               	movlw	88
  3194  0191  0600               	xorwf	0,w
  3195  0192  1D03               	btfss	3,2
  3196  0193  299D               	goto	l2907
  3197  0194  0855               	movf	DisplayLEDs@k,w
  3198  0195  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3199  0196  0084               	movwf	4
  3200  0197  304F               	movlw	79
  3201  0198  0600               	xorwf	0,w
  3202  0199  1D03               	btfss	3,2
  3203  019A  299D               	goto	l2907
  3204  019B  3051               	movlw	81
  3205  019C  2D29               	goto	L52
  3206  019D                     l2907:	
  3207                           
  3208                           ;PR28.c: 617: else if(matrix[0][k] == 'O' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01010000;}
  3209  019D  0855               	movf	DisplayLEDs@k,w
  3210  019E  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3211  019F  0084               	movwf	4
  3212  01A0  304F               	movlw	79
  3213  01A1  0600               	xorwf	0,w
  3214  01A2  1D03               	btfss	3,2
  3215  01A3  29B2               	goto	l2915
  3216  01A4  0855               	movf	DisplayLEDs@k,w
  3217  01A5  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3218  01A6  0084               	movwf	4
  3219  01A7  3058               	movlw	88
  3220  01A8  0600               	xorwf	0,w
  3221  01A9  1D03               	btfss	3,2
  3222  01AA  29B2               	goto	l2915
  3223  01AB  0855               	movf	DisplayLEDs@k,w
  3224  01AC  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3225  01AD  0084               	movwf	4
  3226  01AE  3020               	movlw	32
  3227  01AF  0600               	xorwf	0,w
  3228  01B0  1903               	btfsc	3,2
  3229  01B1  2A49               	goto	L74
  3230  01B2                     l2915:	
  3231                           
  3232                           ;PR28.c: 618: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b01000001;}
  3233  01B2  0855               	movf	DisplayLEDs@k,w
  3234  01B3  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3235  01B4  0084               	movwf	4
  3236  01B5  304F               	movlw	79
  3237  01B6  0600               	xorwf	0,w
  3238  01B7  1D03               	btfss	3,2
  3239  01B8  29C9               	goto	l2923
  3240  01B9  0855               	movf	DisplayLEDs@k,w
  3241  01BA  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3242  01BB  0084               	movwf	4
  3243  01BC  3020               	movlw	32
  3244  01BD  0600               	xorwf	0,w
  3245  01BE  1D03               	btfss	3,2
  3246  01BF  29C9               	goto	l2923
  3247  01C0  0855               	movf	DisplayLEDs@k,w
  3248  01C1  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3249  01C2  0084               	movwf	4
  3250  01C3  304F               	movlw	79
  3251  01C4  0600               	xorwf	0,w
  3252  01C5  1D03               	btfss	3,2
  3253  01C6  29C9               	goto	l2923
  3254  01C7                     L67:	
  3255  01C7  3041               	movlw	65
  3256  01C8  2D29               	goto	L52
  3257  01C9                     l2923:	
  3258                           
  3259                           ;PR28.c: 619: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01000000;}
  3260  01C9  0855               	movf	DisplayLEDs@k,w
  3261  01CA  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3262  01CB  0084               	movwf	4
  3263  01CC  304F               	movlw	79
  3264  01CD  0600               	xorwf	0,w
  3265  01CE  1D03               	btfss	3,2
  3266  01CF  29DE               	goto	l2931
  3267  01D0  0855               	movf	DisplayLEDs@k,w
  3268  01D1  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3269  01D2  0084               	movwf	4
  3270  01D3  3020               	movlw	32
  3271  01D4  0600               	xorwf	0,w
  3272  01D5  1D03               	btfss	3,2
  3273  01D6  29DE               	goto	l2931
  3274  01D7  0855               	movf	DisplayLEDs@k,w
  3275  01D8  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3276  01D9  0084               	movwf	4
  3277  01DA  3020               	movlw	32
  3278  01DB  0600               	xorwf	0,w
  3279  01DC  1903               	btfsc	3,2
  3280  01DD  2A77               	goto	L75
  3281  01DE                     l2931:	
  3282                           
  3283                           ;PR28.c: 620: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00010001;}
  3284  01DE  0855               	movf	DisplayLEDs@k,w
  3285  01DF  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3286  01E0  0084               	movwf	4
  3287  01E1  3020               	movlw	32
  3288  01E2  0600               	xorwf	0,w
  3289  01E3  1D03               	btfss	3,2
  3290  01E4  29F3               	goto	l2939
  3291  01E5  0855               	movf	DisplayLEDs@k,w
  3292  01E6  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3293  01E7  0084               	movwf	4
  3294  01E8  3058               	movlw	88
  3295  01E9  0600               	xorwf	0,w
  3296  01EA  1D03               	btfss	3,2
  3297  01EB  29F3               	goto	l2939
  3298  01EC  0855               	movf	DisplayLEDs@k,w
  3299  01ED  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3300  01EE  0084               	movwf	4
  3301  01EF  304F               	movlw	79
  3302  01F0  0600               	xorwf	0,w
  3303  01F1  1903               	btfsc	3,2
  3304  01F2  2C57               	goto	L76
  3305  01F3                     l2939:	
  3306                           
  3307                           ;PR28.c: 621: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00010000;}
  3308  01F3  0855               	movf	DisplayLEDs@k,w
  3309  01F4  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3310  01F5  0084               	movwf	4
  3311  01F6  3020               	movlw	32
  3312  01F7  0600               	xorwf	0,w
  3313  01F8  1D03               	btfss	3,2
  3314  01F9  2A08               	goto	l2947
  3315  01FA  0855               	movf	DisplayLEDs@k,w
  3316  01FB  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3317  01FC  0084               	movwf	4
  3318  01FD  3058               	movlw	88
  3319  01FE  0600               	xorwf	0,w
  3320  01FF  1D03               	btfss	3,2
  3321  0200  2A08               	goto	l2947
  3322  0201  0855               	movf	DisplayLEDs@k,w
  3323  0202  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3324  0203  0084               	movwf	4
  3325  0204  3020               	movlw	32
  3326  0205  0600               	xorwf	0,w
  3327  0206  1903               	btfsc	3,2
  3328  0207  2D11               	goto	L65
  3329  0208                     l2947:	
  3330                           
  3331                           ;PR28.c: 622: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00000001;}
  3332  0208  0855               	movf	DisplayLEDs@k,w
  3333  0209  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3334  020A  0084               	movwf	4
  3335  020B  3020               	movlw	32
  3336  020C  0600               	xorwf	0,w
  3337  020D  1D03               	btfss	3,2
  3338  020E  2A1D               	goto	l2955
  3339  020F  0855               	movf	DisplayLEDs@k,w
  3340  0210  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3341  0211  0084               	movwf	4
  3342  0212  3020               	movlw	32
  3343  0213  0600               	xorwf	0,w
  3344  0214  1D03               	btfss	3,2
  3345  0215  2A1D               	goto	l2955
  3346  0216  0855               	movf	DisplayLEDs@k,w
  3347  0217  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3348  0218  0084               	movwf	4
  3349  0219  304F               	movlw	79
  3350  021A  0600               	xorwf	0,w
  3351  021B  1903               	btfsc	3,2
  3352  021C  2C83               	goto	l3177
  3353  021D                     l2955:	
  3354                           
  3355                           ;PR28.c: 624: else if(matrix[0][k] == 'O' & matrix[1][k] == 'X' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b01010010;}
  3356  021D  0855               	movf	DisplayLEDs@k,w
  3357  021E  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3358  021F  0084               	movwf	4
  3359  0220  304F               	movlw	79
  3360  0221  0600               	xorwf	0,w
  3361  0222  1D03               	btfss	3,2
  3362  0223  2A34               	goto	l2963
  3363  0224  0855               	movf	DisplayLEDs@k,w
  3364  0225  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3365  0226  0084               	movwf	4
  3366  0227  3058               	movlw	88
  3367  0228  0600               	xorwf	0,w
  3368  0229  1D03               	btfss	3,2
  3369  022A  2A34               	goto	l2963
  3370  022B  0855               	movf	DisplayLEDs@k,w
  3371  022C  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3372  022D  0084               	movwf	4
  3373  022E  3058               	movlw	88
  3374  022F  0600               	xorwf	0,w
  3375  0230  1D03               	btfss	3,2
  3376  0231  2A34               	goto	l2963
  3377  0232  3052               	movlw	82
  3378  0233  2D29               	goto	L52
  3379  0234                     l2963:	
  3380                           
  3381                           ;PR28.c: 625: else if(matrix[0][k] == 'O' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01010000;}
  3382  0234  0855               	movf	DisplayLEDs@k,w
  3383  0235  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3384  0236  0084               	movwf	4
  3385  0237  304F               	movlw	79
  3386  0238  0600               	xorwf	0,w
  3387  0239  1D03               	btfss	3,2
  3388  023A  2A4B               	goto	l2971
  3389  023B  0855               	movf	DisplayLEDs@k,w
  3390  023C  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3391  023D  0084               	movwf	4
  3392  023E  3058               	movlw	88
  3393  023F  0600               	xorwf	0,w
  3394  0240  1D03               	btfss	3,2
  3395  0241  2A4B               	goto	l2971
  3396  0242  0855               	movf	DisplayLEDs@k,w
  3397  0243  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3398  0244  0084               	movwf	4
  3399  0245  3020               	movlw	32
  3400  0246  0600               	xorwf	0,w
  3401  0247  1D03               	btfss	3,2
  3402  0248  2A4B               	goto	l2971
  3403  0249                     L74:	
  3404  0249  3050               	movlw	80
  3405  024A  2D29               	goto	L52
  3406  024B                     l2971:	
  3407                           
  3408                           ;PR28.c: 626: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b01000010;}
  3409  024B  0855               	movf	DisplayLEDs@k,w
  3410  024C  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3411  024D  0084               	movwf	4
  3412  024E  304F               	movlw	79
  3413  024F  0600               	xorwf	0,w
  3414  0250  1D03               	btfss	3,2
  3415  0251  2A62               	goto	l2979
  3416  0252  0855               	movf	DisplayLEDs@k,w
  3417  0253  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3418  0254  0084               	movwf	4
  3419  0255  3020               	movlw	32
  3420  0256  0600               	xorwf	0,w
  3421  0257  1D03               	btfss	3,2
  3422  0258  2A62               	goto	l2979
  3423  0259  0855               	movf	DisplayLEDs@k,w
  3424  025A  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3425  025B  0084               	movwf	4
  3426  025C  3058               	movlw	88
  3427  025D  0600               	xorwf	0,w
  3428  025E  1D03               	btfss	3,2
  3429  025F  2A62               	goto	l2979
  3430  0260                     L71:	
  3431  0260  3042               	movlw	66
  3432  0261  2D29               	goto	L52
  3433  0262                     l2979:	
  3434                           
  3435                           ;PR28.c: 627: else if(matrix[0][k] == 'O' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b01000000;}
  3436  0262  0855               	movf	DisplayLEDs@k,w
  3437  0263  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3438  0264  0084               	movwf	4
  3439  0265  304F               	movlw	79
  3440  0266  0600               	xorwf	0,w
  3441  0267  1D03               	btfss	3,2
  3442  0268  2A79               	goto	l2987
  3443  0269  0855               	movf	DisplayLEDs@k,w
  3444  026A  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3445  026B  0084               	movwf	4
  3446  026C  3020               	movlw	32
  3447  026D  0600               	xorwf	0,w
  3448  026E  1D03               	btfss	3,2
  3449  026F  2A79               	goto	l2987
  3450  0270  0855               	movf	DisplayLEDs@k,w
  3451  0271  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3452  0272  0084               	movwf	4
  3453  0273  3020               	movlw	32
  3454  0274  0600               	xorwf	0,w
  3455  0275  1D03               	btfss	3,2
  3456  0276  2A79               	goto	l2987
  3457  0277                     L75:	
  3458  0277  3040               	movlw	64
  3459  0278  2D29               	goto	L52
  3460  0279                     l2987:	
  3461                           
  3462                           ;PR28.c: 628: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00010010;}
  3463  0279  0855               	movf	DisplayLEDs@k,w
  3464  027A  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3465  027B  0084               	movwf	4
  3466  027C  3020               	movlw	32
  3467  027D  0600               	xorwf	0,w
  3468  027E  1D03               	btfss	3,2
  3469  027F  2A8E               	goto	l2995
  3470  0280  0855               	movf	DisplayLEDs@k,w
  3471  0281  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3472  0282  0084               	movwf	4
  3473  0283  3058               	movlw	88
  3474  0284  0600               	xorwf	0,w
  3475  0285  1D03               	btfss	3,2
  3476  0286  2A8E               	goto	l2995
  3477  0287  0855               	movf	DisplayLEDs@k,w
  3478  0288  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3479  0289  0084               	movwf	4
  3480  028A  3058               	movlw	88
  3481  028B  0600               	xorwf	0,w
  3482  028C  1903               	btfsc	3,2
  3483  028D  2CFA               	goto	L54
  3484  028E                     l2995:	
  3485                           
  3486                           ;PR28.c: 629: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00010000;}
  3487  028E  0855               	movf	DisplayLEDs@k,w
  3488  028F  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3489  0290  0084               	movwf	4
  3490  0291  3020               	movlw	32
  3491  0292  0600               	xorwf	0,w
  3492  0293  1D03               	btfss	3,2
  3493  0294  2AA3               	goto	l3003
  3494  0295  0855               	movf	DisplayLEDs@k,w
  3495  0296  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3496  0297  0084               	movwf	4
  3497  0298  3058               	movlw	88
  3498  0299  0600               	xorwf	0,w
  3499  029A  1D03               	btfss	3,2
  3500  029B  2AA3               	goto	l3003
  3501  029C  0855               	movf	DisplayLEDs@k,w
  3502  029D  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3503  029E  0084               	movwf	4
  3504  029F  3020               	movlw	32
  3505  02A0  0600               	xorwf	0,w
  3506  02A1  1903               	btfsc	3,2
  3507  02A2  2D11               	goto	L65
  3508  02A3                     l3003:	
  3509                           
  3510                           ;PR28.c: 630: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00000010;}
  3511  02A3  0855               	movf	DisplayLEDs@k,w
  3512  02A4  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3513  02A5  0084               	movwf	4
  3514  02A6  3020               	movlw	32
  3515  02A7  0600               	xorwf	0,w
  3516  02A8  1D03               	btfss	3,2
  3517  02A9  2AB8               	goto	l3011
  3518  02AA  0855               	movf	DisplayLEDs@k,w
  3519  02AB  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3520  02AC  0084               	movwf	4
  3521  02AD  3020               	movlw	32
  3522  02AE  0600               	xorwf	0,w
  3523  02AF  1D03               	btfss	3,2
  3524  02B0  2AB8               	goto	l3011
  3525  02B1  0855               	movf	DisplayLEDs@k,w
  3526  02B2  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3527  02B3  0084               	movwf	4
  3528  02B4  3058               	movlw	88
  3529  02B5  0600               	xorwf	0,w
  3530  02B6  1903               	btfsc	3,2
  3531  02B7  2D28               	goto	L56
  3532  02B8                     l3011:	
  3533                           
  3534                           ;PR28.c: 632: else if(matrix[0][k] == 'X' & matrix[1][k] == 'O' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b10001001;}
  3535  02B8  0855               	movf	DisplayLEDs@k,w
  3536  02B9  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3537  02BA  0084               	movwf	4
  3538  02BB  3058               	movlw	88
  3539  02BC  0600               	xorwf	0,w
  3540  02BD  1D03               	btfss	3,2
  3541  02BE  2ACF               	goto	l3019
  3542  02BF  0855               	movf	DisplayLEDs@k,w
  3543  02C0  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3544  02C1  0084               	movwf	4
  3545  02C2  304F               	movlw	79
  3546  02C3  0600               	xorwf	0,w
  3547  02C4  1D03               	btfss	3,2
  3548  02C5  2ACF               	goto	l3019
  3549  02C6  0855               	movf	DisplayLEDs@k,w
  3550  02C7  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3551  02C8  0084               	movwf	4
  3552  02C9  304F               	movlw	79
  3553  02CA  0600               	xorwf	0,w
  3554  02CB  1D03               	btfss	3,2
  3555  02CC  2ACF               	goto	l3019
  3556  02CD  3089               	movlw	137
  3557  02CE  2D29               	goto	L52
  3558  02CF                     l3019:	
  3559                           
  3560                           ;PR28.c: 633: else if(matrix[0][k] == 'X' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10001000;}
  3561  02CF  0855               	movf	DisplayLEDs@k,w
  3562  02D0  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3563  02D1  0084               	movwf	4
  3564  02D2  3058               	movlw	88
  3565  02D3  0600               	xorwf	0,w
  3566  02D4  1D03               	btfss	3,2
  3567  02D5  2AE4               	goto	l3027
  3568  02D6  0855               	movf	DisplayLEDs@k,w
  3569  02D7  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3570  02D8  0084               	movwf	4
  3571  02D9  304F               	movlw	79
  3572  02DA  0600               	xorwf	0,w
  3573  02DB  1D03               	btfss	3,2
  3574  02DC  2AE4               	goto	l3027
  3575  02DD  0855               	movf	DisplayLEDs@k,w
  3576  02DE  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3577  02DF  0084               	movwf	4
  3578  02E0  3020               	movlw	32
  3579  02E1  0600               	xorwf	0,w
  3580  02E2  1903               	btfsc	3,2
  3581  02E3  2B7B               	goto	L57
  3582  02E4                     l3027:	
  3583                           
  3584                           ;PR28.c: 634: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b10000001;}
  3585  02E4  0855               	movf	DisplayLEDs@k,w
  3586  02E5  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3587  02E6  0084               	movwf	4
  3588  02E7  3058               	movlw	88
  3589  02E8  0600               	xorwf	0,w
  3590  02E9  1D03               	btfss	3,2
  3591  02EA  2AF9               	goto	l3035
  3592  02EB  0855               	movf	DisplayLEDs@k,w
  3593  02EC  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3594  02ED  0084               	movwf	4
  3595  02EE  3020               	movlw	32
  3596  02EF  0600               	xorwf	0,w
  3597  02F0  1D03               	btfss	3,2
  3598  02F1  2AF9               	goto	l3035
  3599  02F2  0855               	movf	DisplayLEDs@k,w
  3600  02F3  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3601  02F4  0084               	movwf	4
  3602  02F5  304F               	movlw	79
  3603  02F6  0600               	xorwf	0,w
  3604  02F7  1903               	btfsc	3,2
  3605  02F8  2C2B               	goto	L58
  3606  02F9                     l3035:	
  3607                           
  3608                           ;PR28.c: 635: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10000000;}
  3609  02F9  0855               	movf	DisplayLEDs@k,w
  3610  02FA  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3611  02FB  0084               	movwf	4
  3612  02FC  3058               	movlw	88
  3613  02FD  0600               	xorwf	0,w
  3614  02FE  1D03               	btfss	3,2
  3615  02FF  2B0E               	goto	l3043
  3616  0300  0855               	movf	DisplayLEDs@k,w
  3617  0301  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3618  0302  0084               	movwf	4
  3619  0303  3020               	movlw	32
  3620  0304  0600               	xorwf	0,w
  3621  0305  1D03               	btfss	3,2
  3622  0306  2B0E               	goto	l3043
  3623  0307  0855               	movf	DisplayLEDs@k,w
  3624  0308  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3625  0309  0084               	movwf	4
  3626  030A  3020               	movlw	32
  3627  030B  0600               	xorwf	0,w
  3628  030C  1903               	btfsc	3,2
  3629  030D  2CE3               	goto	L64
  3630  030E                     l3043:	
  3631                           
  3632                           ;PR28.c: 636: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00001001;}
  3633  030E  0855               	movf	DisplayLEDs@k,w
  3634  030F  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3635  0310  0084               	movwf	4
  3636  0311  3020               	movlw	32
  3637  0312  0600               	xorwf	0,w
  3638  0313  1D03               	btfss	3,2
  3639  0314  2B25               	goto	l3051
  3640  0315  0855               	movf	DisplayLEDs@k,w
  3641  0316  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3642  0317  0084               	movwf	4
  3643  0318  304F               	movlw	79
  3644  0319  0600               	xorwf	0,w
  3645  031A  1D03               	btfss	3,2
  3646  031B  2B25               	goto	l3051
  3647  031C  0855               	movf	DisplayLEDs@k,w
  3648  031D  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3649  031E  0084               	movwf	4
  3650  031F  304F               	movlw	79
  3651  0320  0600               	xorwf	0,w
  3652  0321  1D03               	btfss	3,2
  3653  0322  2B25               	goto	l3051
  3654  0323                     L69:	
  3655  0323  3009               	movlw	9
  3656  0324  2D29               	goto	L52
  3657  0325                     l3051:	
  3658                           
  3659                           ;PR28.c: 637: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00001000;}
  3660  0325  0855               	movf	DisplayLEDs@k,w
  3661  0326  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3662  0327  0084               	movwf	4
  3663  0328  3020               	movlw	32
  3664  0329  0600               	xorwf	0,w
  3665  032A  1D03               	btfss	3,2
  3666  032B  2B3A               	goto	l3059
  3667  032C  0855               	movf	DisplayLEDs@k,w
  3668  032D  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3669  032E  0084               	movwf	4
  3670  032F  304F               	movlw	79
  3671  0330  0600               	xorwf	0,w
  3672  0331  1D03               	btfss	3,2
  3673  0332  2B3A               	goto	l3059
  3674  0333  0855               	movf	DisplayLEDs@k,w
  3675  0334  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3676  0335  0084               	movwf	4
  3677  0336  3020               	movlw	32
  3678  0337  0600               	xorwf	0,w
  3679  0338  1903               	btfsc	3,2
  3680  0339  2BD3               	goto	L60
  3681  033A                     l3059:	
  3682                           
  3683                           ;PR28.c: 638: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00000001;}
  3684  033A  0855               	movf	DisplayLEDs@k,w
  3685  033B  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3686  033C  0084               	movwf	4
  3687  033D  3020               	movlw	32
  3688  033E  0600               	xorwf	0,w
  3689  033F  1D03               	btfss	3,2
  3690  0340  2B4F               	goto	l3067
  3691  0341  0855               	movf	DisplayLEDs@k,w
  3692  0342  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3693  0343  0084               	movwf	4
  3694  0344  3020               	movlw	32
  3695  0345  0600               	xorwf	0,w
  3696  0346  1D03               	btfss	3,2
  3697  0347  2B4F               	goto	l3067
  3698  0348  0855               	movf	DisplayLEDs@k,w
  3699  0349  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3700  034A  0084               	movwf	4
  3701  034B  304F               	movlw	79
  3702  034C  0600               	xorwf	0,w
  3703  034D  1903               	btfsc	3,2
  3704  034E  2C83               	goto	l3177
  3705  034F                     l3067:	
  3706                           
  3707                           ;PR28.c: 640: else if(matrix[0][k] == 'X' & matrix[1][k] == 'O' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b10001010;}
  3708  034F  0855               	movf	DisplayLEDs@k,w
  3709  0350  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3710  0351  0084               	movwf	4
  3711  0352  3058               	movlw	88
  3712  0353  0600               	xorwf	0,w
  3713  0354  1D03               	btfss	3,2
  3714  0355  2B66               	goto	l3075
  3715  0356  0855               	movf	DisplayLEDs@k,w
  3716  0357  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3717  0358  0084               	movwf	4
  3718  0359  304F               	movlw	79
  3719  035A  0600               	xorwf	0,w
  3720  035B  1D03               	btfss	3,2
  3721  035C  2B66               	goto	l3075
  3722  035D  0855               	movf	DisplayLEDs@k,w
  3723  035E  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3724  035F  0084               	movwf	4
  3725  0360  3058               	movlw	88
  3726  0361  0600               	xorwf	0,w
  3727  0362  1D03               	btfss	3,2
  3728  0363  2B66               	goto	l3075
  3729  0364  308A               	movlw	138
  3730  0365  2D29               	goto	L52
  3731  0366                     l3075:	
  3732                           
  3733                           ;PR28.c: 641: else if(matrix[0][k] == 'X' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10001000;}
  3734  0366  0855               	movf	DisplayLEDs@k,w
  3735  0367  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3736  0368  0084               	movwf	4
  3737  0369  3058               	movlw	88
  3738  036A  0600               	xorwf	0,w
  3739  036B  1D03               	btfss	3,2
  3740  036C  2B7D               	goto	l3083
  3741  036D  0855               	movf	DisplayLEDs@k,w
  3742  036E  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3743  036F  0084               	movwf	4
  3744  0370  304F               	movlw	79
  3745  0371  0600               	xorwf	0,w
  3746  0372  1D03               	btfss	3,2
  3747  0373  2B7D               	goto	l3083
  3748  0374  0855               	movf	DisplayLEDs@k,w
  3749  0375  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3750  0376  0084               	movwf	4
  3751  0377  3020               	movlw	32
  3752  0378  0600               	xorwf	0,w
  3753  0379  1D03               	btfss	3,2
  3754  037A  2B7D               	goto	l3083
  3755  037B                     L57:	
  3756  037B  3088               	movlw	136
  3757  037C  2D29               	goto	L52
  3758  037D                     l3083:	
  3759                           
  3760                           ;PR28.c: 642: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b10000010;}
  3761  037D  0855               	movf	DisplayLEDs@k,w
  3762  037E  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3763  037F  0084               	movwf	4
  3764  0380  3058               	movlw	88
  3765  0381  0600               	xorwf	0,w
  3766  0382  1D03               	btfss	3,2
  3767  0383  2B92               	goto	l3091
  3768  0384  0855               	movf	DisplayLEDs@k,w
  3769  0385  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3770  0386  0084               	movwf	4
  3771  0387  3020               	movlw	32
  3772  0388  0600               	xorwf	0,w
  3773  0389  1D03               	btfss	3,2
  3774  038A  2B92               	goto	l3091
  3775  038B  0855               	movf	DisplayLEDs@k,w
  3776  038C  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3777  038D  0084               	movwf	4
  3778  038E  3058               	movlw	88
  3779  038F  0600               	xorwf	0,w
  3780  0390  1903               	btfsc	3,2
  3781  0391  2CCC               	goto	L61
  3782  0392                     l3091:	
  3783                           
  3784                           ;PR28.c: 643: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10000000;}
  3785  0392  0855               	movf	DisplayLEDs@k,w
  3786  0393  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3787  0394  0084               	movwf	4
  3788  0395  3058               	movlw	88
  3789  0396  0600               	xorwf	0,w
  3790  0397  1D03               	btfss	3,2
  3791  0398  2BA7               	goto	l3099
  3792  0399  0855               	movf	DisplayLEDs@k,w
  3793  039A  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3794  039B  0084               	movwf	4
  3795  039C  3020               	movlw	32
  3796  039D  0600               	xorwf	0,w
  3797  039E  1D03               	btfss	3,2
  3798  039F  2BA7               	goto	l3099
  3799  03A0  0855               	movf	DisplayLEDs@k,w
  3800  03A1  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3801  03A2  0084               	movwf	4
  3802  03A3  3020               	movlw	32
  3803  03A4  0600               	xorwf	0,w
  3804  03A5  1903               	btfsc	3,2
  3805  03A6  2CE3               	goto	L64
  3806  03A7                     l3099:	
  3807                           
  3808                           ;PR28.c: 644: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00001010;}
  3809  03A7  0855               	movf	DisplayLEDs@k,w
  3810  03A8  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3811  03A9  0084               	movwf	4
  3812  03AA  3020               	movlw	32
  3813  03AB  0600               	xorwf	0,w
  3814  03AC  1D03               	btfss	3,2
  3815  03AD  2BBE               	goto	l3107
  3816  03AE  0855               	movf	DisplayLEDs@k,w
  3817  03AF  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3818  03B0  0084               	movwf	4
  3819  03B1  304F               	movlw	79
  3820  03B2  0600               	xorwf	0,w
  3821  03B3  1D03               	btfss	3,2
  3822  03B4  2BBE               	goto	l3107
  3823  03B5  0855               	movf	DisplayLEDs@k,w
  3824  03B6  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3825  03B7  0084               	movwf	4
  3826  03B8  3058               	movlw	88
  3827  03B9  0600               	xorwf	0,w
  3828  03BA  1D03               	btfss	3,2
  3829  03BB  2BBE               	goto	l3107
  3830  03BC                     L73:	
  3831  03BC  300A               	movlw	10
  3832  03BD  2D29               	goto	L52
  3833  03BE                     l3107:	
  3834                           
  3835                           ;PR28.c: 645: else if(matrix[0][k] == ' ' & matrix[1][k] == 'O' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00001000;}
  3836  03BE  0855               	movf	DisplayLEDs@k,w
  3837  03BF  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3838  03C0  0084               	movwf	4
  3839  03C1  3020               	movlw	32
  3840  03C2  0600               	xorwf	0,w
  3841  03C3  1D03               	btfss	3,2
  3842  03C4  2BD5               	goto	l3115
  3843  03C5  0855               	movf	DisplayLEDs@k,w
  3844  03C6  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3845  03C7  0084               	movwf	4
  3846  03C8  304F               	movlw	79
  3847  03C9  0600               	xorwf	0,w
  3848  03CA  1D03               	btfss	3,2
  3849  03CB  2BD5               	goto	l3115
  3850  03CC  0855               	movf	DisplayLEDs@k,w
  3851  03CD  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3852  03CE  0084               	movwf	4
  3853  03CF  3020               	movlw	32
  3854  03D0  0600               	xorwf	0,w
  3855  03D1  1D03               	btfss	3,2
  3856  03D2  2BD5               	goto	l3115
  3857  03D3                     L60:	
  3858  03D3  3008               	movlw	8
  3859  03D4  2D29               	goto	L52
  3860  03D5                     l3115:	
  3861                           
  3862                           ;PR28.c: 646: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00000010;}
  3863  03D5  0855               	movf	DisplayLEDs@k,w
  3864  03D6  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3865  03D7  0084               	movwf	4
  3866  03D8  3020               	movlw	32
  3867  03D9  0600               	xorwf	0,w
  3868  03DA  1D03               	btfss	3,2
  3869  03DB  2BEA               	goto	l3123
  3870  03DC  0855               	movf	DisplayLEDs@k,w
  3871  03DD  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3872  03DE  0084               	movwf	4
  3873  03DF  3020               	movlw	32
  3874  03E0  0600               	xorwf	0,w
  3875  03E1  1D03               	btfss	3,2
  3876  03E2  2BEA               	goto	l3123
  3877  03E3  0855               	movf	DisplayLEDs@k,w
  3878  03E4  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3879  03E5  0084               	movwf	4
  3880  03E6  3058               	movlw	88
  3881  03E7  0600               	xorwf	0,w
  3882  03E8  1903               	btfsc	3,2
  3883  03E9  2D28               	goto	L56
  3884  03EA                     l3123:	
  3885                           
  3886                           ;PR28.c: 648: else if(matrix[0][k] == 'X' & matrix[1][k] == 'X' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b10010001;}
  3887  03EA  0855               	movf	DisplayLEDs@k,w
  3888  03EB  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3889  03EC  0084               	movwf	4
  3890  03ED  3058               	movlw	88
  3891  03EE  0600               	xorwf	0,w
  3892  03EF  1D03               	btfss	3,2
  3893  03F0  2C01               	goto	l3131
  3894  03F1  0855               	movf	DisplayLEDs@k,w
  3895  03F2  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3896  03F3  0084               	movwf	4
  3897  03F4  3058               	movlw	88
  3898  03F5  0600               	xorwf	0,w
  3899  03F6  1D03               	btfss	3,2
  3900  03F7  2C01               	goto	l3131
  3901  03F8  0855               	movf	DisplayLEDs@k,w
  3902  03F9  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3903  03FA  0084               	movwf	4
  3904  03FB  304F               	movlw	79
  3905  03FC  0600               	xorwf	0,w
  3906  03FD  1D03               	btfss	3,2
  3907  03FE  2C01               	goto	l3131
  3908  03FF  3091               	movlw	145
  3909  0400  2D29               	goto	L52
  3910  0401                     l3131:	
  3911                           
  3912                           ;PR28.c: 649: else if(matrix[0][k] == 'X' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10010000;}
  3913  0401  0855               	movf	DisplayLEDs@k,w
  3914  0402  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3915  0403  0084               	movwf	4
  3916  0404  3058               	movlw	88
  3917  0405  0600               	xorwf	0,w
  3918  0406  1D03               	btfss	3,2
  3919  0407  2C16               	goto	l3139
  3920  0408  0855               	movf	DisplayLEDs@k,w
  3921  0409  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3922  040A  0084               	movwf	4
  3923  040B  3058               	movlw	88
  3924  040C  0600               	xorwf	0,w
  3925  040D  1D03               	btfss	3,2
  3926  040E  2C16               	goto	l3139
  3927  040F  0855               	movf	DisplayLEDs@k,w
  3928  0410  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3929  0411  0084               	movwf	4
  3930  0412  3020               	movlw	32
  3931  0413  0600               	xorwf	0,w
  3932  0414  1903               	btfsc	3,2
  3933  0415  2CB5               	goto	L63
  3934  0416                     l3139:	
  3935                           
  3936                           ;PR28.c: 650: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b10000001;}
  3937  0416  0855               	movf	DisplayLEDs@k,w
  3938  0417  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3939  0418  0084               	movwf	4
  3940  0419  3058               	movlw	88
  3941  041A  0600               	xorwf	0,w
  3942  041B  1D03               	btfss	3,2
  3943  041C  2C2D               	goto	l3147
  3944  041D  0855               	movf	DisplayLEDs@k,w
  3945  041E  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3946  041F  0084               	movwf	4
  3947  0420  3020               	movlw	32
  3948  0421  0600               	xorwf	0,w
  3949  0422  1D03               	btfss	3,2
  3950  0423  2C2D               	goto	l3147
  3951  0424  0855               	movf	DisplayLEDs@k,w
  3952  0425  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3953  0426  0084               	movwf	4
  3954  0427  304F               	movlw	79
  3955  0428  0600               	xorwf	0,w
  3956  0429  1D03               	btfss	3,2
  3957  042A  2C2D               	goto	l3147
  3958  042B                     L58:	
  3959  042B  3081               	movlw	129
  3960  042C  2D29               	goto	L52
  3961  042D                     l3147:	
  3962                           
  3963                           ;PR28.c: 651: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10000000;}
  3964  042D  0855               	movf	DisplayLEDs@k,w
  3965  042E  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3966  042F  0084               	movwf	4
  3967  0430  3058               	movlw	88
  3968  0431  0600               	xorwf	0,w
  3969  0432  1D03               	btfss	3,2
  3970  0433  2C42               	goto	l3155
  3971  0434  0855               	movf	DisplayLEDs@k,w
  3972  0435  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3973  0436  0084               	movwf	4
  3974  0437  3020               	movlw	32
  3975  0438  0600               	xorwf	0,w
  3976  0439  1D03               	btfss	3,2
  3977  043A  2C42               	goto	l3155
  3978  043B  0855               	movf	DisplayLEDs@k,w
  3979  043C  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  3980  043D  0084               	movwf	4
  3981  043E  3020               	movlw	32
  3982  043F  0600               	xorwf	0,w
  3983  0440  1903               	btfsc	3,2
  3984  0441  2CE3               	goto	L64
  3985  0442                     l3155:	
  3986                           
  3987                           ;PR28.c: 652: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00010001;}
  3988  0442  0855               	movf	DisplayLEDs@k,w
  3989  0443  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  3990  0444  0084               	movwf	4
  3991  0445  3020               	movlw	32
  3992  0446  0600               	xorwf	0,w
  3993  0447  1D03               	btfss	3,2
  3994  0448  2C59               	goto	l3163
  3995  0449  0855               	movf	DisplayLEDs@k,w
  3996  044A  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  3997  044B  0084               	movwf	4
  3998  044C  3058               	movlw	88
  3999  044D  0600               	xorwf	0,w
  4000  044E  1D03               	btfss	3,2
  4001  044F  2C59               	goto	l3163
  4002  0450  0855               	movf	DisplayLEDs@k,w
  4003  0451  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4004  0452  0084               	movwf	4
  4005  0453  304F               	movlw	79
  4006  0454  0600               	xorwf	0,w
  4007  0455  1D03               	btfss	3,2
  4008  0456  2C59               	goto	l3163
  4009  0457                     L76:	
  4010  0457  3011               	movlw	17
  4011  0458  2D29               	goto	L52
  4012  0459                     l3163:	
  4013                           
  4014                           ;PR28.c: 653: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00010000;}
  4015  0459  0855               	movf	DisplayLEDs@k,w
  4016  045A  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4017  045B  0084               	movwf	4
  4018  045C  3020               	movlw	32
  4019  045D  0600               	xorwf	0,w
  4020  045E  1D03               	btfss	3,2
  4021  045F  2C6E               	goto	l3171
  4022  0460  0855               	movf	DisplayLEDs@k,w
  4023  0461  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4024  0462  0084               	movwf	4
  4025  0463  3058               	movlw	88
  4026  0464  0600               	xorwf	0,w
  4027  0465  1D03               	btfss	3,2
  4028  0466  2C6E               	goto	l3171
  4029  0467  0855               	movf	DisplayLEDs@k,w
  4030  0468  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4031  0469  0084               	movwf	4
  4032  046A  3020               	movlw	32
  4033  046B  0600               	xorwf	0,w
  4034  046C  1903               	btfsc	3,2
  4035  046D  2D11               	goto	L65
  4036  046E                     l3171:	
  4037                           
  4038                           ;PR28.c: 654: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'O'){r
      +                          esult1[k] = 0b00000001;}
  4039  046E  0855               	movf	DisplayLEDs@k,w
  4040  046F  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4041  0470  0084               	movwf	4
  4042  0471  3020               	movlw	32
  4043  0472  0600               	xorwf	0,w
  4044  0473  1D03               	btfss	3,2
  4045  0474  2C89               	goto	l3179
  4046  0475  0855               	movf	DisplayLEDs@k,w
  4047  0476  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4048  0477  0084               	movwf	4
  4049  0478  3020               	movlw	32
  4050  0479  0600               	xorwf	0,w
  4051  047A  1D03               	btfss	3,2
  4052  047B  2C89               	goto	l3179
  4053  047C  0855               	movf	DisplayLEDs@k,w
  4054  047D  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4055  047E  0084               	movwf	4
  4056  047F  304F               	movlw	79
  4057  0480  0600               	xorwf	0,w
  4058  0481  1D03               	btfss	3,2
  4059  0482  2C89               	goto	l3179
  4060  0483                     l3177:	
  4061  0483  0855               	movf	DisplayLEDs@k,w
  4062  0484  3E44               	addlw	(low (_result1| 0))& (0+255)
  4063  0485  0084               	movwf	4
  4064  0486  0180               	clrf	0
  4065  0487  0A80               	incf	0,f
  4066  0488  2D2F               	goto	l3235
  4067  0489                     l3179:	
  4068                           
  4069                           ;PR28.c: 656: else if(matrix[0][k] == 'X' & matrix[1][k] == 'X' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b10010010;}
  4070  0489  0855               	movf	DisplayLEDs@k,w
  4071  048A  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4072  048B  0084               	movwf	4
  4073  048C  3058               	movlw	88
  4074  048D  0600               	xorwf	0,w
  4075  048E  1D03               	btfss	3,2
  4076  048F  2CA0               	goto	l3187
  4077  0490  0855               	movf	DisplayLEDs@k,w
  4078  0491  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4079  0492  0084               	movwf	4
  4080  0493  3058               	movlw	88
  4081  0494  0600               	xorwf	0,w
  4082  0495  1D03               	btfss	3,2
  4083  0496  2CA0               	goto	l3187
  4084  0497  0855               	movf	DisplayLEDs@k,w
  4085  0498  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4086  0499  0084               	movwf	4
  4087  049A  3058               	movlw	88
  4088  049B  0600               	xorwf	0,w
  4089  049C  1D03               	btfss	3,2
  4090  049D  2CA0               	goto	l3187
  4091  049E  3092               	movlw	146
  4092  049F  2D29               	goto	L52
  4093  04A0                     l3187:	
  4094                           
  4095                           ;PR28.c: 657: else if(matrix[0][k] == 'X' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10010000;}
  4096  04A0  0855               	movf	DisplayLEDs@k,w
  4097  04A1  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4098  04A2  0084               	movwf	4
  4099  04A3  3058               	movlw	88
  4100  04A4  0600               	xorwf	0,w
  4101  04A5  1D03               	btfss	3,2
  4102  04A6  2CB7               	goto	l3195
  4103  04A7  0855               	movf	DisplayLEDs@k,w
  4104  04A8  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4105  04A9  0084               	movwf	4
  4106  04AA  3058               	movlw	88
  4107  04AB  0600               	xorwf	0,w
  4108  04AC  1D03               	btfss	3,2
  4109  04AD  2CB7               	goto	l3195
  4110  04AE  0855               	movf	DisplayLEDs@k,w
  4111  04AF  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4112  04B0  0084               	movwf	4
  4113  04B1  3020               	movlw	32
  4114  04B2  0600               	xorwf	0,w
  4115  04B3  1D03               	btfss	3,2
  4116  04B4  2CB7               	goto	l3195
  4117  04B5                     L63:	
  4118  04B5  3090               	movlw	144
  4119  04B6  2D29               	goto	L52
  4120  04B7                     l3195:	
  4121                           
  4122                           ;PR28.c: 658: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b10000010;}
  4123  04B7  0855               	movf	DisplayLEDs@k,w
  4124  04B8  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4125  04B9  0084               	movwf	4
  4126  04BA  3058               	movlw	88
  4127  04BB  0600               	xorwf	0,w
  4128  04BC  1D03               	btfss	3,2
  4129  04BD  2CCE               	goto	l3203
  4130  04BE  0855               	movf	DisplayLEDs@k,w
  4131  04BF  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4132  04C0  0084               	movwf	4
  4133  04C1  3020               	movlw	32
  4134  04C2  0600               	xorwf	0,w
  4135  04C3  1D03               	btfss	3,2
  4136  04C4  2CCE               	goto	l3203
  4137  04C5  0855               	movf	DisplayLEDs@k,w
  4138  04C6  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4139  04C7  0084               	movwf	4
  4140  04C8  3058               	movlw	88
  4141  04C9  0600               	xorwf	0,w
  4142  04CA  1D03               	btfss	3,2
  4143  04CB  2CCE               	goto	l3203
  4144  04CC                     L61:	
  4145  04CC  3082               	movlw	130
  4146  04CD  2D29               	goto	L52
  4147  04CE                     l3203:	
  4148                           
  4149                           ;PR28.c: 659: else if(matrix[0][k] == 'X' & matrix[1][k] == ' ' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b10000000;}
  4150  04CE  0855               	movf	DisplayLEDs@k,w
  4151  04CF  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4152  04D0  0084               	movwf	4
  4153  04D1  3058               	movlw	88
  4154  04D2  0600               	xorwf	0,w
  4155  04D3  1D03               	btfss	3,2
  4156  04D4  2CE5               	goto	l3211
  4157  04D5  0855               	movf	DisplayLEDs@k,w
  4158  04D6  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4159  04D7  0084               	movwf	4
  4160  04D8  3020               	movlw	32
  4161  04D9  0600               	xorwf	0,w
  4162  04DA  1D03               	btfss	3,2
  4163  04DB  2CE5               	goto	l3211
  4164  04DC  0855               	movf	DisplayLEDs@k,w
  4165  04DD  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4166  04DE  0084               	movwf	4
  4167  04DF  3020               	movlw	32
  4168  04E0  0600               	xorwf	0,w
  4169  04E1  1D03               	btfss	3,2
  4170  04E2  2CE5               	goto	l3211
  4171  04E3                     L64:	
  4172  04E3  3080               	movlw	128
  4173  04E4  2D29               	goto	L52
  4174  04E5                     l3211:	
  4175                           
  4176                           ;PR28.c: 660: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00010010;}
  4177  04E5  0855               	movf	DisplayLEDs@k,w
  4178  04E6  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4179  04E7  0084               	movwf	4
  4180  04E8  3020               	movlw	32
  4181  04E9  0600               	xorwf	0,w
  4182  04EA  1D03               	btfss	3,2
  4183  04EB  2CFC               	goto	l3219
  4184  04EC  0855               	movf	DisplayLEDs@k,w
  4185  04ED  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4186  04EE  0084               	movwf	4
  4187  04EF  3058               	movlw	88
  4188  04F0  0600               	xorwf	0,w
  4189  04F1  1D03               	btfss	3,2
  4190  04F2  2CFC               	goto	l3219
  4191  04F3  0855               	movf	DisplayLEDs@k,w
  4192  04F4  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4193  04F5  0084               	movwf	4
  4194  04F6  3058               	movlw	88
  4195  04F7  0600               	xorwf	0,w
  4196  04F8  1D03               	btfss	3,2
  4197  04F9  2CFC               	goto	l3219
  4198  04FA                     L54:	
  4199  04FA  3012               	movlw	18
  4200  04FB  2D29               	goto	L52
  4201  04FC                     l3219:	
  4202                           
  4203                           ;PR28.c: 661: else if(matrix[0][k] == ' ' & matrix[1][k] == 'X' & matrix[2][k] == ' '){r
      +                          esult1[k] = 0b00010000;}
  4204  04FC  0855               	movf	DisplayLEDs@k,w
  4205  04FD  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4206  04FE  0084               	movwf	4
  4207  04FF  3020               	movlw	32
  4208  0500  0600               	xorwf	0,w
  4209  0501  1D03               	btfss	3,2
  4210  0502  2D13               	goto	l3227
  4211  0503  0855               	movf	DisplayLEDs@k,w
  4212  0504  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4213  0505  0084               	movwf	4
  4214  0506  3058               	movlw	88
  4215  0507  0600               	xorwf	0,w
  4216  0508  1D03               	btfss	3,2
  4217  0509  2D13               	goto	l3227
  4218  050A  0855               	movf	DisplayLEDs@k,w
  4219  050B  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4220  050C  0084               	movwf	4
  4221  050D  3020               	movlw	32
  4222  050E  0600               	xorwf	0,w
  4223  050F  1D03               	btfss	3,2
  4224  0510  2D13               	goto	l3227
  4225  0511                     L65:	
  4226  0511  3010               	movlw	16
  4227  0512  2D29               	goto	L52
  4228  0513                     l3227:	
  4229                           
  4230                           ;PR28.c: 662: else if(matrix[0][k] == ' ' & matrix[1][k] == ' ' & matrix[2][k] == 'X'){r
      +                          esult1[k] = 0b00000010;}
  4231  0513  0855               	movf	DisplayLEDs@k,w
  4232  0514  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  4233  0515  0084               	movwf	4
  4234  0516  3020               	movlw	32
  4235  0517  0600               	xorwf	0,w
  4236  0518  1D03               	btfss	3,2
  4237  0519  2D2F               	goto	l3235
  4238  051A  0855               	movf	DisplayLEDs@k,w
  4239  051B  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  4240  051C  0084               	movwf	4
  4241  051D  3020               	movlw	32
  4242  051E  0600               	xorwf	0,w
  4243  051F  1D03               	btfss	3,2
  4244  0520  2D2F               	goto	l3235
  4245  0521  0855               	movf	DisplayLEDs@k,w
  4246  0522  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  4247  0523  0084               	movwf	4
  4248  0524  3058               	movlw	88
  4249  0525  0600               	xorwf	0,w
  4250  0526  1D03               	btfss	3,2
  4251  0527  2D2F               	goto	l3235
  4252  0528                     L56:	
  4253  0528  3002               	movlw	2
  4254  0529                     L52:	
  4255  0529  00D4               	movwf	??_DisplayLEDs
  4256  052A  0855               	movf	DisplayLEDs@k,w
  4257  052B  3E44               	addlw	(low (_result1| 0))& (0+255)
  4258  052C  0084               	movwf	4
  4259  052D  0854               	movf	??_DisplayLEDs,w
  4260  052E  0080               	movwf	0
  4261  052F                     l3235:	
  4262                           
  4263                           ;PR28.c: 664: led_display1(result1[0]);led_display2(result1[1]);led_display3(result1[2])
      +                          ;
  4264  052F  0844               	movf	_result1,w
  4265  0530  160A  118A  2581  120A  118A  	fcall	_led_display1
  4266  0535  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0536  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0537  0845               	movf	_result1+1,w
  4269  0538  160A  118A  25F7  120A  118A  	fcall	_led_display2
  4270  053D  1283               	bcf	3,5	;RP0=0, select bank0
  4271  053E  1303               	bcf	3,6	;RP1=0, select bank0
  4272  053F  0846               	movf	_result1+2,w
  4273  0540  160A  118A  266D  120A  118A  	fcall	_led_display3
  4274  0545  3001               	movlw	1
  4275  0546  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0547  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0548  07D5               	addwf	DisplayLEDs@k,f
  4278  0549  1803               	skipnc
  4279  054A  0AD6               	incf	DisplayLEDs@k+1,f
  4280  054B  3000               	movlw	0
  4281  054C  07D6               	addwf	DisplayLEDs@k+1,f
  4282  054D  2834               	goto	L53
  4283  054E                     __end_of_DisplayLEDs:	
  4284                           
  4285                           	psect	text15
  4286  08FE                     __ptext15:	
  4287 ;; *************** function _PIEZO_S *****************
  4288 ;; Defined at:
  4289 ;;		line 1129 in file "../../Source file/PR28.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;		None               void
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0, pclath, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    4
  4310 ;; This function calls:
  4311 ;;		_RestartTimer1
  4312 ;;		_delay
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _PIEZO_S
  4320  08FE                     _PIEZO_S:	
  4321                           
  4322                           ;PR28.c: 1131: GIE=0;
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _PIEZO_S: [wreg+status,2+status,0+pclath+cstack]
  4326  08FE  138B               	bcf	11,7	;volatile
  4327                           
  4328                           ;PR28.c: 1132: TMR2ON = 0;
  4329  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0900  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0901  1112               	bcf	18,2	;volatile
  4332                           
  4333                           ;PR28.c: 1133: TMR1ON = 0;
  4334  0902  1010               	bcf	16,0	;volatile
  4335                           
  4336                           ;PR28.c: 1135: CCP1CON = 0b00001100;
  4337  0903  300C               	movlw	12
  4338  0904  0097               	movwf	23	;volatile
  4339                           
  4340                           ;PR28.c: 1136: T2CON = 0b00000111;
  4341  0905  3007               	movlw	7
  4342  0906  0092               	movwf	18	;volatile
  4343                           
  4344                           ;PR28.c: 1138: PR2 = 0xEE;
  4345  0907  30EE               	movlw	238
  4346  0908  1683               	bsf	3,5	;RP0=1, select bank1
  4347  0909  1303               	bcf	3,6	;RP1=0, select bank1
  4348  090A  0092               	movwf	18	;volatile
  4349                           
  4350                           ;PR28.c: 1139: CCPR1L = 50;
  4351  090B  3032               	movlw	50
  4352  090C  1283               	bcf	3,5	;RP0=0, select bank0
  4353  090D  1303               	bcf	3,6	;RP1=0, select bank0
  4354  090E  0095               	movwf	21	;volatile
  4355                           
  4356                           ;PR28.c: 1140: delay(2000);
  4357  090F  3000               	movlw	0
  4358  0910  00D5               	movwf	delay@data+3
  4359  0911  3000               	movlw	0
  4360  0912  00D4               	movwf	delay@data+2
  4361  0913  3007               	movlw	7
  4362  0914  00D3               	movwf	delay@data+1
  4363  0915  30D0               	movlw	208
  4364  0916  00D2               	movwf	delay@data
  4365  0917  120A  158A  20D9  120A  158A  	fcall	_delay
  4366                           
  4367                           ;PR28.c: 1141: PR2 = 0xD3;
  4368  091C  30D3               	movlw	211
  4369  091D  1683               	bsf	3,5	;RP0=1, select bank1
  4370  091E  1303               	bcf	3,6	;RP1=0, select bank1
  4371  091F  0092               	movwf	18	;volatile
  4372                           
  4373                           ;PR28.c: 1142: CCPR1L = 50;
  4374  0920  3032               	movlw	50
  4375  0921  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0922  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0923  0095               	movwf	21	;volatile
  4378                           
  4379                           ;PR28.c: 1143: delay(2000);
  4380  0924  3000               	movlw	0
  4381  0925  00D5               	movwf	delay@data+3
  4382  0926  3000               	movlw	0
  4383  0927  00D4               	movwf	delay@data+2
  4384  0928  3007               	movlw	7
  4385  0929  00D3               	movwf	delay@data+1
  4386  092A  30D0               	movlw	208
  4387  092B  00D2               	movwf	delay@data
  4388  092C  120A  158A  20D9  120A  158A  	fcall	_delay
  4389                           
  4390                           ;PR28.c: 1144: PR2 = 0xBD;
  4391  0931  30BD               	movlw	189
  4392  0932  1683               	bsf	3,5	;RP0=1, select bank1
  4393  0933  1303               	bcf	3,6	;RP1=0, select bank1
  4394  0934  0092               	movwf	18	;volatile
  4395                           
  4396                           ;PR28.c: 1145: CCPR1L = 100;
  4397  0935  3064               	movlw	100
  4398  0936  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0937  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0938  0095               	movwf	21	;volatile
  4401                           
  4402                           ;PR28.c: 1146: delay(2000);
  4403  0939  3000               	movlw	0
  4404  093A  00D5               	movwf	delay@data+3
  4405  093B  3000               	movlw	0
  4406  093C  00D4               	movwf	delay@data+2
  4407  093D  3007               	movlw	7
  4408  093E  00D3               	movwf	delay@data+1
  4409  093F  30D0               	movlw	208
  4410  0940  00D2               	movwf	delay@data
  4411  0941  120A  158A  20D9  120A  158A  	fcall	_delay
  4412                           
  4413                           ;PR28.c: 1147: PR2 = 0xB2;
  4414  0946  30B2               	movlw	178
  4415  0947  1683               	bsf	3,5	;RP0=1, select bank1
  4416  0948  1303               	bcf	3,6	;RP1=0, select bank1
  4417  0949  0092               	movwf	18	;volatile
  4418                           
  4419                           ;PR28.c: 1148: CCPR1L = 100;
  4420  094A  3064               	movlw	100
  4421  094B  1283               	bcf	3,5	;RP0=0, select bank0
  4422  094C  1303               	bcf	3,6	;RP1=0, select bank0
  4423  094D  0095               	movwf	21	;volatile
  4424                           
  4425                           ;PR28.c: 1149: delay(2000);
  4426  094E  3000               	movlw	0
  4427  094F  00D5               	movwf	delay@data+3
  4428  0950  3000               	movlw	0
  4429  0951  00D4               	movwf	delay@data+2
  4430  0952  3007               	movlw	7
  4431  0953  00D3               	movwf	delay@data+1
  4432  0954  30D0               	movlw	208
  4433  0955  00D2               	movwf	delay@data
  4434  0956  120A  158A  20D9  120A  158A  	fcall	_delay
  4435                           
  4436                           ;PR28.c: 1150: PR2 = 0x9E;
  4437  095B  309E               	movlw	158
  4438  095C  1683               	bsf	3,5	;RP0=1, select bank1
  4439  095D  1303               	bcf	3,6	;RP1=0, select bank1
  4440  095E  0092               	movwf	18	;volatile
  4441                           
  4442                           ;PR28.c: 1151: CCPR1L = 50;
  4443  095F  3032               	movlw	50
  4444  0960  1283               	bcf	3,5	;RP0=0, select bank0
  4445  0961  1303               	bcf	3,6	;RP1=0, select bank0
  4446  0962  0095               	movwf	21	;volatile
  4447                           
  4448                           ;PR28.c: 1152: delay(2000);
  4449  0963  3000               	movlw	0
  4450  0964  00D5               	movwf	delay@data+3
  4451  0965  3000               	movlw	0
  4452  0966  00D4               	movwf	delay@data+2
  4453  0967  3007               	movlw	7
  4454  0968  00D3               	movwf	delay@data+1
  4455  0969  30D0               	movlw	208
  4456  096A  00D2               	movwf	delay@data
  4457  096B  120A  158A  20D9  120A  158A  	fcall	_delay
  4458                           
  4459                           ;PR28.c: 1153: PR2 = 0x8D;
  4460  0970  308D               	movlw	141
  4461  0971  1683               	bsf	3,5	;RP0=1, select bank1
  4462  0972  1303               	bcf	3,6	;RP1=0, select bank1
  4463  0973  0092               	movwf	18	;volatile
  4464                           
  4465                           ;PR28.c: 1154: CCPR1L = 50;
  4466  0974  3032               	movlw	50
  4467  0975  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0976  1303               	bcf	3,6	;RP1=0, select bank0
  4469  0977  0095               	movwf	21	;volatile
  4470                           
  4471                           ;PR28.c: 1155: delay(2000);
  4472  0978  3000               	movlw	0
  4473  0979  00D5               	movwf	delay@data+3
  4474  097A  3000               	movlw	0
  4475  097B  00D4               	movwf	delay@data+2
  4476  097C  3007               	movlw	7
  4477  097D  00D3               	movwf	delay@data+1
  4478  097E  30D0               	movlw	208
  4479  097F  00D2               	movwf	delay@data
  4480  0980  120A  158A  20D9  120A  158A  	fcall	_delay
  4481                           
  4482                           ;PR28.c: 1156: PR2 = 0x7D;
  4483  0985  307D               	movlw	125
  4484  0986  1683               	bsf	3,5	;RP0=1, select bank1
  4485  0987  1303               	bcf	3,6	;RP1=0, select bank1
  4486  0988  0092               	movwf	18	;volatile
  4487                           
  4488                           ;PR28.c: 1157: CCPR1L = 50;
  4489  0989  3032               	movlw	50
  4490  098A  1283               	bcf	3,5	;RP0=0, select bank0
  4491  098B  1303               	bcf	3,6	;RP1=0, select bank0
  4492  098C  0095               	movwf	21	;volatile
  4493                           
  4494                           ;PR28.c: 1158: delay(2000);
  4495  098D  3000               	movlw	0
  4496  098E  00D5               	movwf	delay@data+3
  4497  098F  3000               	movlw	0
  4498  0990  00D4               	movwf	delay@data+2
  4499  0991  3007               	movlw	7
  4500  0992  00D3               	movwf	delay@data+1
  4501  0993  30D0               	movlw	208
  4502  0994  00D2               	movwf	delay@data
  4503  0995  120A  158A  20D9  120A  158A  	fcall	_delay
  4504                           
  4505                           ;PR28.c: 1159: PR2 = 0x76;
  4506  099A  3076               	movlw	118
  4507  099B  1683               	bsf	3,5	;RP0=1, select bank1
  4508  099C  1303               	bcf	3,6	;RP1=0, select bank1
  4509  099D  0092               	movwf	18	;volatile
  4510                           
  4511                           ;PR28.c: 1160: CCPR1L = 50;
  4512  099E  3032               	movlw	50
  4513  099F  1283               	bcf	3,5	;RP0=0, select bank0
  4514  09A0  1303               	bcf	3,6	;RP1=0, select bank0
  4515  09A1  0095               	movwf	21	;volatile
  4516                           
  4517                           ;PR28.c: 1161: delay(4000);
  4518  09A2  3000               	movlw	0
  4519  09A3  00D5               	movwf	delay@data+3
  4520  09A4  3000               	movlw	0
  4521  09A5  00D4               	movwf	delay@data+2
  4522  09A6  300F               	movlw	15
  4523  09A7  00D3               	movwf	delay@data+1
  4524  09A8  30A0               	movlw	160
  4525  09A9  00D2               	movwf	delay@data
  4526  09AA  120A  158A  20D9  120A  158A  	fcall	_delay
  4527                           
  4528                           ;PR28.c: 1164: CCP1CON = 0x00;
  4529  09AF  1283               	bcf	3,5	;RP0=0, select bank0
  4530  09B0  1303               	bcf	3,6	;RP1=0, select bank0
  4531  09B1  0197               	clrf	23	;volatile
  4532                           
  4533                           ;PR28.c: 1165: T2CON=0b01110110;
  4534  09B2  3076               	movlw	118
  4535  09B3  0092               	movwf	18	;volatile
  4536                           
  4537                           ;PR28.c: 1166: PR2 = 0xB4;
  4538  09B4  30B4               	movlw	180
  4539  09B5  1683               	bsf	3,5	;RP0=1, select bank1
  4540  09B6  1303               	bcf	3,6	;RP1=0, select bank1
  4541  09B7  0092               	movwf	18	;volatile
  4542                           
  4543                           ;PR28.c: 1167: CCPR1L = 0;
  4544  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  4545  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  4546  09BA  0195               	clrf	21	;volatile
  4547                           
  4548                           ;PR28.c: 1169: TMR2IF = 0;
  4549  09BB  108C               	bcf	12,1	;volatile
  4550                           
  4551                           ;PR28.c: 1170: TMR2IE = 1;
  4552  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  4553  09BD  1303               	bcf	3,6	;RP1=0, select bank1
  4554  09BE  148C               	bsf	12,1	;volatile
  4555                           
  4556                           ;PR28.c: 1171: T1CON = 0b11000101;
  4557  09BF  30C5               	movlw	197
  4558  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  4559  09C1  1303               	bcf	3,6	;RP1=0, select bank0
  4560  09C2  0090               	movwf	16	;volatile
  4561                           
  4562                           ;PR28.c: 1172: T1GCON = 0b11100010;
  4563  09C3  30E2               	movlw	226
  4564  09C4  1683               	bsf	3,5	;RP0=1, select bank1
  4565  09C5  1303               	bcf	3,6	;RP1=0, select bank1
  4566  09C6  008F               	movwf	15	;volatile
  4567                           
  4568                           ;PR28.c: 1173: TMR1GIF = 0;
  4569  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  4570  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  4571  09C9  138C               	bcf	12,7	;volatile
  4572                           
  4573                           ;PR28.c: 1174: TMR1GIE = 1;
  4574  09CA  1683               	bsf	3,5	;RP0=1, select bank1
  4575  09CB  1303               	bcf	3,6	;RP1=0, select bank1
  4576  09CC  178C               	bsf	12,7	;volatile
  4577                           
  4578                           ;PR28.c: 1176: RestartTimer1();
  4579  09CD  160A  118A  2368   	fcall	_RestartTimer1
  4580                           
  4581                           ;PR28.c: 1177: GIE = 1;
  4582  09D0  178B               	bsf	11,7	;volatile
  4583  09D1  0008               	return
  4584  09D2                     __end_of_PIEZO_S:	
  4585                           
  4586                           	psect	text16
  4587  054E                     __ptext16:	
  4588 ;; *************** function _PIEZO_D *****************
  4589 ;; Defined at:
  4590 ;;		line 1011 in file "../../Source file/PR28.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;		None               void
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4604 ;;      Params:         0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0
  4607 ;;      Totals:         0       0       0       0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    4
  4611 ;; This function calls:
  4612 ;;		_RestartTimer1
  4613 ;;		_delay
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _PIEZO_D
  4621  054E                     _PIEZO_D:	
  4622                           
  4623                           ;PR28.c: 1013: GIE=0;
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _PIEZO_D: [wreg+status,2+status,0+pclath+cstack]
  4627  054E  138B               	bcf	11,7	;volatile
  4628                           
  4629                           ;PR28.c: 1014: TMR2ON = 0;
  4630  054F  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0550  1303               	bcf	3,6	;RP1=0, select bank0
  4632  0551  1112               	bcf	18,2	;volatile
  4633                           
  4634                           ;PR28.c: 1015: TMR1ON = 0;
  4635  0552  1010               	bcf	16,0	;volatile
  4636                           
  4637                           ;PR28.c: 1016: CCP1CON = 0b00001100;
  4638  0553  300C               	movlw	12
  4639  0554  0097               	movwf	23	;volatile
  4640                           
  4641                           ;PR28.c: 1017: T2CON = 0b00000111;
  4642  0555  3007               	movlw	7
  4643  0556  0092               	movwf	18	;volatile
  4644                           
  4645                           ;PR28.c: 1018: PR2 = 0xBC;
  4646  0557  30BC               	movlw	188
  4647  0558  1683               	bsf	3,5	;RP0=1, select bank1
  4648  0559  1303               	bcf	3,6	;RP1=0, select bank1
  4649  055A  0092               	movwf	18	;volatile
  4650                           
  4651                           ;PR28.c: 1019: CCPR1L = 50;
  4652  055B  3032               	movlw	50
  4653  055C  1283               	bcf	3,5	;RP0=0, select bank0
  4654  055D  1303               	bcf	3,6	;RP1=0, select bank0
  4655  055E  0095               	movwf	21	;volatile
  4656                           
  4657                           ;PR28.c: 1020: delay(4000);
  4658  055F  3000               	movlw	0
  4659  0560  00D5               	movwf	delay@data+3
  4660  0561  3000               	movlw	0
  4661  0562  00D4               	movwf	delay@data+2
  4662  0563  300F               	movlw	15
  4663  0564  00D3               	movwf	delay@data+1
  4664  0565  30A0               	movlw	160
  4665  0566  00D2               	movwf	delay@data
  4666  0567  120A  158A  20D9  120A  118A  	fcall	_delay
  4667                           
  4668                           ;PR28.c: 1021: PR2 = 0xBC;
  4669  056C  30BC               	movlw	188
  4670  056D  1683               	bsf	3,5	;RP0=1, select bank1
  4671  056E  1303               	bcf	3,6	;RP1=0, select bank1
  4672  056F  0092               	movwf	18	;volatile
  4673                           
  4674                           ;PR28.c: 1022: CCPR1L = 50;
  4675  0570  3032               	movlw	50
  4676  0571  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0572  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0573  0095               	movwf	21	;volatile
  4679                           
  4680                           ;PR28.c: 1023: delay(4000);
  4681  0574  3000               	movlw	0
  4682  0575  00D5               	movwf	delay@data+3
  4683  0576  3000               	movlw	0
  4684  0577  00D4               	movwf	delay@data+2
  4685  0578  300F               	movlw	15
  4686  0579  00D3               	movwf	delay@data+1
  4687  057A  30A0               	movlw	160
  4688  057B  00D2               	movwf	delay@data
  4689  057C  120A  158A  20D9  120A  118A  	fcall	_delay
  4690                           
  4691                           ;PR28.c: 1024: PR2 = 0xB2;
  4692  0581  30B2               	movlw	178
  4693  0582  1683               	bsf	3,5	;RP0=1, select bank1
  4694  0583  1303               	bcf	3,6	;RP1=0, select bank1
  4695  0584  0092               	movwf	18	;volatile
  4696                           
  4697                           ;PR28.c: 1025: CCPR1L = 50;
  4698  0585  3032               	movlw	50
  4699  0586  1283               	bcf	3,5	;RP0=0, select bank0
  4700  0587  1303               	bcf	3,6	;RP1=0, select bank0
  4701  0588  0095               	movwf	21	;volatile
  4702                           
  4703                           ;PR28.c: 1026: delay(4000);
  4704  0589  3000               	movlw	0
  4705  058A  00D5               	movwf	delay@data+3
  4706  058B  3000               	movlw	0
  4707  058C  00D4               	movwf	delay@data+2
  4708  058D  300F               	movlw	15
  4709  058E  00D3               	movwf	delay@data+1
  4710  058F  30A0               	movlw	160
  4711  0590  00D2               	movwf	delay@data
  4712  0591  120A  158A  20D9  120A  118A  	fcall	_delay
  4713                           
  4714                           ;PR28.c: 1027: PR2 = 0x9E;
  4715  0596  309E               	movlw	158
  4716  0597  1683               	bsf	3,5	;RP0=1, select bank1
  4717  0598  1303               	bcf	3,6	;RP1=0, select bank1
  4718  0599  0092               	movwf	18	;volatile
  4719                           
  4720                           ;PR28.c: 1028: CCPR1L = 100;
  4721  059A  3064               	movlw	100
  4722  059B  1283               	bcf	3,5	;RP0=0, select bank0
  4723  059C  1303               	bcf	3,6	;RP1=0, select bank0
  4724  059D  0095               	movwf	21	;volatile
  4725                           
  4726                           ;PR28.c: 1029: delay(4000);
  4727  059E  3000               	movlw	0
  4728  059F  00D5               	movwf	delay@data+3
  4729  05A0  3000               	movlw	0
  4730  05A1  00D4               	movwf	delay@data+2
  4731  05A2  300F               	movlw	15
  4732  05A3  00D3               	movwf	delay@data+1
  4733  05A4  30A0               	movlw	160
  4734  05A5  00D2               	movwf	delay@data
  4735  05A6  120A  158A  20D9  120A  118A  	fcall	_delay
  4736                           
  4737                           ;PR28.c: 1030: PR2 = 0x9E;
  4738  05AB  309E               	movlw	158
  4739  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  4740  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  4741  05AE  0092               	movwf	18	;volatile
  4742                           
  4743                           ;PR28.c: 1031: CCPR1L = 100;
  4744  05AF  3064               	movlw	100
  4745  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  4746  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  4747  05B2  0095               	movwf	21	;volatile
  4748                           
  4749                           ;PR28.c: 1032: delay(4000);
  4750  05B3  3000               	movlw	0
  4751  05B4  00D5               	movwf	delay@data+3
  4752  05B5  3000               	movlw	0
  4753  05B6  00D4               	movwf	delay@data+2
  4754  05B7  300F               	movlw	15
  4755  05B8  00D3               	movwf	delay@data+1
  4756  05B9  30A0               	movlw	160
  4757  05BA  00D2               	movwf	delay@data
  4758  05BB  120A  158A  20D9  120A  118A  	fcall	_delay
  4759                           
  4760                           ;PR28.c: 1033: PR2 = 0xB2;
  4761  05C0  30B2               	movlw	178
  4762  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  4763  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  4764  05C3  0092               	movwf	18	;volatile
  4765                           
  4766                           ;PR28.c: 1034: CCPR1L = 50;
  4767  05C4  3032               	movlw	50
  4768  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  4769  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  4770  05C7  0095               	movwf	21	;volatile
  4771                           
  4772                           ;PR28.c: 1035: delay(4000);
  4773  05C8  3000               	movlw	0
  4774  05C9  00D5               	movwf	delay@data+3
  4775  05CA  3000               	movlw	0
  4776  05CB  00D4               	movwf	delay@data+2
  4777  05CC  300F               	movlw	15
  4778  05CD  00D3               	movwf	delay@data+1
  4779  05CE  30A0               	movlw	160
  4780  05CF  00D2               	movwf	delay@data
  4781  05D0  120A  158A  20D9  120A  118A  	fcall	_delay
  4782                           
  4783                           ;PR28.c: 1036: PR2 = 0xBC;
  4784  05D5  30BC               	movlw	188
  4785  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  4786  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  4787  05D8  0092               	movwf	18	;volatile
  4788                           
  4789                           ;PR28.c: 1037: CCPR1L = 50;
  4790  05D9  3032               	movlw	50
  4791  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  4792  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  4793  05DC  0095               	movwf	21	;volatile
  4794                           
  4795                           ;PR28.c: 1038: delay(4000);
  4796  05DD  3000               	movlw	0
  4797  05DE  00D5               	movwf	delay@data+3
  4798  05DF  3000               	movlw	0
  4799  05E0  00D4               	movwf	delay@data+2
  4800  05E1  300F               	movlw	15
  4801  05E2  00D3               	movwf	delay@data+1
  4802  05E3  30A0               	movlw	160
  4803  05E4  00D2               	movwf	delay@data
  4804  05E5  120A  158A  20D9  120A  118A  	fcall	_delay
  4805                           
  4806                           ;PR28.c: 1039: PR2 = 0xD3;
  4807  05EA  30D3               	movlw	211
  4808  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  4809  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  4810  05ED  0092               	movwf	18	;volatile
  4811                           
  4812                           ;PR28.c: 1040: CCPR1L = 50;
  4813  05EE  3032               	movlw	50
  4814  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  4815  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  4816  05F1  0095               	movwf	21	;volatile
  4817                           
  4818                           ;PR28.c: 1041: delay(4000);
  4819  05F2  3000               	movlw	0
  4820  05F3  00D5               	movwf	delay@data+3
  4821  05F4  3000               	movlw	0
  4822  05F5  00D4               	movwf	delay@data+2
  4823  05F6  300F               	movlw	15
  4824  05F7  00D3               	movwf	delay@data+1
  4825  05F8  30A0               	movlw	160
  4826  05F9  00D2               	movwf	delay@data
  4827  05FA  120A  158A  20D9  120A  118A  	fcall	_delay
  4828                           
  4829                           ;PR28.c: 1042: PR2 = 0xEE;
  4830  05FF  30EE               	movlw	238
  4831  0600  1683               	bsf	3,5	;RP0=1, select bank1
  4832  0601  1303               	bcf	3,6	;RP1=0, select bank1
  4833  0602  0092               	movwf	18	;volatile
  4834                           
  4835                           ;PR28.c: 1043: CCPR1L = 50;
  4836  0603  3032               	movlw	50
  4837  0604  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0605  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0606  0095               	movwf	21	;volatile
  4840                           
  4841                           ;PR28.c: 1044: delay(4000);
  4842  0607  3000               	movlw	0
  4843  0608  00D5               	movwf	delay@data+3
  4844  0609  3000               	movlw	0
  4845  060A  00D4               	movwf	delay@data+2
  4846  060B  300F               	movlw	15
  4847  060C  00D3               	movwf	delay@data+1
  4848  060D  30A0               	movlw	160
  4849  060E  00D2               	movwf	delay@data
  4850  060F  120A  158A  20D9  120A  118A  	fcall	_delay
  4851                           
  4852                           ;PR28.c: 1045: PR2 = 0xEE;
  4853  0614  30EE               	movlw	238
  4854  0615  1683               	bsf	3,5	;RP0=1, select bank1
  4855  0616  1303               	bcf	3,6	;RP1=0, select bank1
  4856  0617  0092               	movwf	18	;volatile
  4857                           
  4858                           ;PR28.c: 1046: CCPR1L = 50;
  4859  0618  3032               	movlw	50
  4860  0619  1283               	bcf	3,5	;RP0=0, select bank0
  4861  061A  1303               	bcf	3,6	;RP1=0, select bank0
  4862  061B  0095               	movwf	21	;volatile
  4863                           
  4864                           ;PR28.c: 1047: delay(4000);
  4865  061C  3000               	movlw	0
  4866  061D  00D5               	movwf	delay@data+3
  4867  061E  3000               	movlw	0
  4868  061F  00D4               	movwf	delay@data+2
  4869  0620  300F               	movlw	15
  4870  0621  00D3               	movwf	delay@data+1
  4871  0622  30A0               	movlw	160
  4872  0623  00D2               	movwf	delay@data
  4873  0624  120A  158A  20D9  120A  118A  	fcall	_delay
  4874                           
  4875                           ;PR28.c: 1048: PR2 = 0xD3;
  4876  0629  30D3               	movlw	211
  4877  062A  1683               	bsf	3,5	;RP0=1, select bank1
  4878  062B  1303               	bcf	3,6	;RP1=0, select bank1
  4879  062C  0092               	movwf	18	;volatile
  4880                           
  4881                           ;PR28.c: 1049: CCPR1L = 50;
  4882  062D  3032               	movlw	50
  4883  062E  1283               	bcf	3,5	;RP0=0, select bank0
  4884  062F  1303               	bcf	3,6	;RP1=0, select bank0
  4885  0630  0095               	movwf	21	;volatile
  4886                           
  4887                           ;PR28.c: 1050: delay(4000);
  4888  0631  3000               	movlw	0
  4889  0632  00D5               	movwf	delay@data+3
  4890  0633  3000               	movlw	0
  4891  0634  00D4               	movwf	delay@data+2
  4892  0635  300F               	movlw	15
  4893  0636  00D3               	movwf	delay@data+1
  4894  0637  30A0               	movlw	160
  4895  0638  00D2               	movwf	delay@data
  4896  0639  120A  158A  20D9  120A  118A  	fcall	_delay
  4897                           
  4898                           ;PR28.c: 1051: PR2 = 0xBC;
  4899  063E  30BC               	movlw	188
  4900  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4901  0640  1303               	bcf	3,6	;RP1=0, select bank1
  4902  0641  0092               	movwf	18	;volatile
  4903                           
  4904                           ;PR28.c: 1052: CCPR1L = 50;
  4905  0642  3032               	movlw	50
  4906  0643  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0644  1303               	bcf	3,6	;RP1=0, select bank0
  4908  0645  0095               	movwf	21	;volatile
  4909                           
  4910                           ;PR28.c: 1053: delay(4000);
  4911  0646  3000               	movlw	0
  4912  0647  00D5               	movwf	delay@data+3
  4913  0648  3000               	movlw	0
  4914  0649  00D4               	movwf	delay@data+2
  4915  064A  300F               	movlw	15
  4916  064B  00D3               	movwf	delay@data+1
  4917  064C  30A0               	movlw	160
  4918  064D  00D2               	movwf	delay@data
  4919  064E  120A  158A  20D9  120A  118A  	fcall	_delay
  4920                           
  4921                           ;PR28.c: 1054: PR2 = 0xBC;
  4922  0653  30BC               	movlw	188
  4923  0654  1683               	bsf	3,5	;RP0=1, select bank1
  4924  0655  1303               	bcf	3,6	;RP1=0, select bank1
  4925  0656  0092               	movwf	18	;volatile
  4926                           
  4927                           ;PR28.c: 1055: CCPR1L = 50;
  4928  0657  3032               	movlw	50
  4929  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4930  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4931  065A  0095               	movwf	21	;volatile
  4932                           
  4933                           ;PR28.c: 1056: delay(4000);
  4934  065B  3000               	movlw	0
  4935  065C  00D5               	movwf	delay@data+3
  4936  065D  3000               	movlw	0
  4937  065E  00D4               	movwf	delay@data+2
  4938  065F  300F               	movlw	15
  4939  0660  00D3               	movwf	delay@data+1
  4940  0661  30A0               	movlw	160
  4941  0662  00D2               	movwf	delay@data
  4942  0663  120A  158A  20D9  120A  118A  	fcall	_delay
  4943                           
  4944                           ;PR28.c: 1057: PR2 = 0xD3;
  4945  0668  30D3               	movlw	211
  4946  0669  1683               	bsf	3,5	;RP0=1, select bank1
  4947  066A  1303               	bcf	3,6	;RP1=0, select bank1
  4948  066B  0092               	movwf	18	;volatile
  4949                           
  4950                           ;PR28.c: 1058: CCPR1L = 50;
  4951  066C  3032               	movlw	50
  4952  066D  1283               	bcf	3,5	;RP0=0, select bank0
  4953  066E  1303               	bcf	3,6	;RP1=0, select bank0
  4954  066F  0095               	movwf	21	;volatile
  4955                           
  4956                           ;PR28.c: 1059: delay(2000);
  4957  0670  3000               	movlw	0
  4958  0671  00D5               	movwf	delay@data+3
  4959  0672  3000               	movlw	0
  4960  0673  00D4               	movwf	delay@data+2
  4961  0674  3007               	movlw	7
  4962  0675  00D3               	movwf	delay@data+1
  4963  0676  30D0               	movlw	208
  4964  0677  00D2               	movwf	delay@data
  4965  0678  120A  158A  20D9  120A  118A  	fcall	_delay
  4966                           
  4967                           ;PR28.c: 1060: PR2 = 0xD3;
  4968  067D  30D3               	movlw	211
  4969  067E  1683               	bsf	3,5	;RP0=1, select bank1
  4970  067F  1303               	bcf	3,6	;RP1=0, select bank1
  4971  0680  0092               	movwf	18	;volatile
  4972                           
  4973                           ;PR28.c: 1061: CCPR1L = 50;
  4974  0681  3032               	movlw	50
  4975  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4976  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4977  0684  0095               	movwf	21	;volatile
  4978                           
  4979                           ;PR28.c: 1062: delay(8000);
  4980  0685  3000               	movlw	0
  4981  0686  00D5               	movwf	delay@data+3
  4982  0687  3000               	movlw	0
  4983  0688  00D4               	movwf	delay@data+2
  4984  0689  301F               	movlw	31
  4985  068A  00D3               	movwf	delay@data+1
  4986  068B  3040               	movlw	64
  4987  068C  00D2               	movwf	delay@data
  4988  068D  120A  158A  20D9  120A  118A  	fcall	_delay
  4989                           
  4990                           ;PR28.c: 1063: PR2 = 0xBC;
  4991  0692  30BC               	movlw	188
  4992  0693  1683               	bsf	3,5	;RP0=1, select bank1
  4993  0694  1303               	bcf	3,6	;RP1=0, select bank1
  4994  0695  0092               	movwf	18	;volatile
  4995                           
  4996                           ;PR28.c: 1064: CCPR1L = 50;
  4997  0696  3032               	movlw	50
  4998  0697  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0698  1303               	bcf	3,6	;RP1=0, select bank0
  5000  0699  0095               	movwf	21	;volatile
  5001                           
  5002                           ;PR28.c: 1065: delay(4000);
  5003  069A  3000               	movlw	0
  5004  069B  00D5               	movwf	delay@data+3
  5005  069C  3000               	movlw	0
  5006  069D  00D4               	movwf	delay@data+2
  5007  069E  300F               	movlw	15
  5008  069F  00D3               	movwf	delay@data+1
  5009  06A0  30A0               	movlw	160
  5010  06A1  00D2               	movwf	delay@data
  5011  06A2  120A  158A  20D9  120A  118A  	fcall	_delay
  5012                           
  5013                           ;PR28.c: 1066: PR2 = 0xBC;
  5014  06A7  30BC               	movlw	188
  5015  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  5016  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  5017  06AA  0092               	movwf	18	;volatile
  5018                           
  5019                           ;PR28.c: 1067: CCPR1L = 50;
  5020  06AB  3032               	movlw	50
  5021  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  5022  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  5023  06AE  0095               	movwf	21	;volatile
  5024                           
  5025                           ;PR28.c: 1068: delay(4000);
  5026  06AF  3000               	movlw	0
  5027  06B0  00D5               	movwf	delay@data+3
  5028  06B1  3000               	movlw	0
  5029  06B2  00D4               	movwf	delay@data+2
  5030  06B3  300F               	movlw	15
  5031  06B4  00D3               	movwf	delay@data+1
  5032  06B5  30A0               	movlw	160
  5033  06B6  00D2               	movwf	delay@data
  5034  06B7  120A  158A  20D9  120A  118A  	fcall	_delay
  5035                           
  5036                           ;PR28.c: 1069: PR2 = 0xB2;
  5037  06BC  30B2               	movlw	178
  5038  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  5039  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  5040  06BF  0092               	movwf	18	;volatile
  5041                           
  5042                           ;PR28.c: 1070: CCPR1L = 50;
  5043  06C0  3032               	movlw	50
  5044  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  5045  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  5046  06C3  0095               	movwf	21	;volatile
  5047                           
  5048                           ;PR28.c: 1071: delay(4000);
  5049  06C4  3000               	movlw	0
  5050  06C5  00D5               	movwf	delay@data+3
  5051  06C6  3000               	movlw	0
  5052  06C7  00D4               	movwf	delay@data+2
  5053  06C8  300F               	movlw	15
  5054  06C9  00D3               	movwf	delay@data+1
  5055  06CA  30A0               	movlw	160
  5056  06CB  00D2               	movwf	delay@data
  5057  06CC  120A  158A  20D9  120A  118A  	fcall	_delay
  5058                           
  5059                           ;PR28.c: 1072: PR2 = 0x9E;
  5060  06D1  309E               	movlw	158
  5061  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  5062  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  5063  06D4  0092               	movwf	18	;volatile
  5064                           
  5065                           ;PR28.c: 1073: CCPR1L = 50;
  5066  06D5  3032               	movlw	50
  5067  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  5068  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  5069  06D8  0095               	movwf	21	;volatile
  5070                           
  5071                           ;PR28.c: 1074: delay(4000);
  5072  06D9  3000               	movlw	0
  5073  06DA  00D5               	movwf	delay@data+3
  5074  06DB  3000               	movlw	0
  5075  06DC  00D4               	movwf	delay@data+2
  5076  06DD  300F               	movlw	15
  5077  06DE  00D3               	movwf	delay@data+1
  5078  06DF  30A0               	movlw	160
  5079  06E0  00D2               	movwf	delay@data
  5080  06E1  120A  158A  20D9  120A  118A  	fcall	_delay
  5081                           
  5082                           ;PR28.c: 1075: PR2 = 0x9E;
  5083  06E6  309E               	movlw	158
  5084  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  5085  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  5086  06E9  0092               	movwf	18	;volatile
  5087                           
  5088                           ;PR28.c: 1076: CCPR1L = 50;
  5089  06EA  3032               	movlw	50
  5090  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  5091  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  5092  06ED  0095               	movwf	21	;volatile
  5093                           
  5094                           ;PR28.c: 1077: delay(4000);
  5095  06EE  3000               	movlw	0
  5096  06EF  00D5               	movwf	delay@data+3
  5097  06F0  3000               	movlw	0
  5098  06F1  00D4               	movwf	delay@data+2
  5099  06F2  300F               	movlw	15
  5100  06F3  00D3               	movwf	delay@data+1
  5101  06F4  30A0               	movlw	160
  5102  06F5  00D2               	movwf	delay@data
  5103  06F6  120A  158A  20D9  120A  118A  	fcall	_delay
  5104                           
  5105                           ;PR28.c: 1078: PR2 = 0xB2;
  5106  06FB  30B2               	movlw	178
  5107  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  5108  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  5109  06FE  0092               	movwf	18	;volatile
  5110                           
  5111                           ;PR28.c: 1079: CCPR1L = 50;
  5112  06FF  3032               	movlw	50
  5113  0700  1283               	bcf	3,5	;RP0=0, select bank0
  5114  0701  1303               	bcf	3,6	;RP1=0, select bank0
  5115  0702  0095               	movwf	21	;volatile
  5116                           
  5117                           ;PR28.c: 1080: delay(4000);
  5118  0703  3000               	movlw	0
  5119  0704  00D5               	movwf	delay@data+3
  5120  0705  3000               	movlw	0
  5121  0706  00D4               	movwf	delay@data+2
  5122  0707  300F               	movlw	15
  5123  0708  00D3               	movwf	delay@data+1
  5124  0709  30A0               	movlw	160
  5125  070A  00D2               	movwf	delay@data
  5126  070B  120A  158A  20D9  120A  118A  	fcall	_delay
  5127                           
  5128                           ;PR28.c: 1081: PR2 = 0xBC;
  5129  0710  30BC               	movlw	188
  5130  0711  1683               	bsf	3,5	;RP0=1, select bank1
  5131  0712  1303               	bcf	3,6	;RP1=0, select bank1
  5132  0713  0092               	movwf	18	;volatile
  5133                           
  5134                           ;PR28.c: 1082: CCPR1L = 50;
  5135  0714  3032               	movlw	50
  5136  0715  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0716  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0717  0095               	movwf	21	;volatile
  5139                           
  5140                           ;PR28.c: 1083: delay(4000);
  5141  0718  3000               	movlw	0
  5142  0719  00D5               	movwf	delay@data+3
  5143  071A  3000               	movlw	0
  5144  071B  00D4               	movwf	delay@data+2
  5145  071C  300F               	movlw	15
  5146  071D  00D3               	movwf	delay@data+1
  5147  071E  30A0               	movlw	160
  5148  071F  00D2               	movwf	delay@data
  5149  0720  120A  158A  20D9  120A  118A  	fcall	_delay
  5150                           
  5151                           ;PR28.c: 1084: PR2 = 0xD3;
  5152  0725  30D3               	movlw	211
  5153  0726  1683               	bsf	3,5	;RP0=1, select bank1
  5154  0727  1303               	bcf	3,6	;RP1=0, select bank1
  5155  0728  0092               	movwf	18	;volatile
  5156                           
  5157                           ;PR28.c: 1085: CCPR1L = 50;
  5158  0729  3032               	movlw	50
  5159  072A  1283               	bcf	3,5	;RP0=0, select bank0
  5160  072B  1303               	bcf	3,6	;RP1=0, select bank0
  5161  072C  0095               	movwf	21	;volatile
  5162                           
  5163                           ;PR28.c: 1086: delay(4000);
  5164  072D  3000               	movlw	0
  5165  072E  00D5               	movwf	delay@data+3
  5166  072F  3000               	movlw	0
  5167  0730  00D4               	movwf	delay@data+2
  5168  0731  300F               	movlw	15
  5169  0732  00D3               	movwf	delay@data+1
  5170  0733  30A0               	movlw	160
  5171  0734  00D2               	movwf	delay@data
  5172  0735  120A  158A  20D9  120A  118A  	fcall	_delay
  5173                           
  5174                           ;PR28.c: 1087: PR2 = 0xEE;
  5175  073A  30EE               	movlw	238
  5176  073B  1683               	bsf	3,5	;RP0=1, select bank1
  5177  073C  1303               	bcf	3,6	;RP1=0, select bank1
  5178  073D  0092               	movwf	18	;volatile
  5179                           
  5180                           ;PR28.c: 1088: CCPR1L = 50;
  5181  073E  3032               	movlw	50
  5182  073F  1283               	bcf	3,5	;RP0=0, select bank0
  5183  0740  1303               	bcf	3,6	;RP1=0, select bank0
  5184  0741  0095               	movwf	21	;volatile
  5185                           
  5186                           ;PR28.c: 1089: delay(4000);
  5187  0742  3000               	movlw	0
  5188  0743  00D5               	movwf	delay@data+3
  5189  0744  3000               	movlw	0
  5190  0745  00D4               	movwf	delay@data+2
  5191  0746  300F               	movlw	15
  5192  0747  00D3               	movwf	delay@data+1
  5193  0748  30A0               	movlw	160
  5194  0749  00D2               	movwf	delay@data
  5195  074A  120A  158A  20D9  120A  118A  	fcall	_delay
  5196                           
  5197                           ;PR28.c: 1090: PR2 = 0xEE;
  5198  074F  30EE               	movlw	238
  5199  0750  1683               	bsf	3,5	;RP0=1, select bank1
  5200  0751  1303               	bcf	3,6	;RP1=0, select bank1
  5201  0752  0092               	movwf	18	;volatile
  5202                           
  5203                           ;PR28.c: 1091: CCPR1L = 50;
  5204  0753  3032               	movlw	50
  5205  0754  1283               	bcf	3,5	;RP0=0, select bank0
  5206  0755  1303               	bcf	3,6	;RP1=0, select bank0
  5207  0756  0095               	movwf	21	;volatile
  5208                           
  5209                           ;PR28.c: 1092: delay(4000);
  5210  0757  3000               	movlw	0
  5211  0758  00D5               	movwf	delay@data+3
  5212  0759  3000               	movlw	0
  5213  075A  00D4               	movwf	delay@data+2
  5214  075B  300F               	movlw	15
  5215  075C  00D3               	movwf	delay@data+1
  5216  075D  30A0               	movlw	160
  5217  075E  00D2               	movwf	delay@data
  5218  075F  120A  158A  20D9  120A  118A  	fcall	_delay
  5219                           
  5220                           ;PR28.c: 1093: PR2 = 0xD3;
  5221  0764  30D3               	movlw	211
  5222  0765  1683               	bsf	3,5	;RP0=1, select bank1
  5223  0766  1303               	bcf	3,6	;RP1=0, select bank1
  5224  0767  0092               	movwf	18	;volatile
  5225                           
  5226                           ;PR28.c: 1094: CCPR1L = 50;
  5227  0768  3032               	movlw	50
  5228  0769  1283               	bcf	3,5	;RP0=0, select bank0
  5229  076A  1303               	bcf	3,6	;RP1=0, select bank0
  5230  076B  0095               	movwf	21	;volatile
  5231                           
  5232                           ;PR28.c: 1095: delay(4000);
  5233  076C  3000               	movlw	0
  5234  076D  00D5               	movwf	delay@data+3
  5235  076E  3000               	movlw	0
  5236  076F  00D4               	movwf	delay@data+2
  5237  0770  300F               	movlw	15
  5238  0771  00D3               	movwf	delay@data+1
  5239  0772  30A0               	movlw	160
  5240  0773  00D2               	movwf	delay@data
  5241  0774  120A  158A  20D9  120A  118A  	fcall	_delay
  5242                           
  5243                           ;PR28.c: 1096: PR2 = 0xBC;
  5244  0779  30BC               	movlw	188
  5245  077A  1683               	bsf	3,5	;RP0=1, select bank1
  5246  077B  1303               	bcf	3,6	;RP1=0, select bank1
  5247  077C  0092               	movwf	18	;volatile
  5248                           
  5249                           ;PR28.c: 1097: CCPR1L = 50;
  5250  077D  3032               	movlw	50
  5251  077E  1283               	bcf	3,5	;RP0=0, select bank0
  5252  077F  1303               	bcf	3,6	;RP1=0, select bank0
  5253  0780  0095               	movwf	21	;volatile
  5254                           
  5255                           ;PR28.c: 1098: delay(4000);
  5256  0781  3000               	movlw	0
  5257  0782  00D5               	movwf	delay@data+3
  5258  0783  3000               	movlw	0
  5259  0784  00D4               	movwf	delay@data+2
  5260  0785  300F               	movlw	15
  5261  0786  00D3               	movwf	delay@data+1
  5262  0787  30A0               	movlw	160
  5263  0788  00D2               	movwf	delay@data
  5264  0789  120A  158A  20D9  120A  118A  	fcall	_delay
  5265                           
  5266                           ;PR28.c: 1099: PR2 = 0xD3;
  5267  078E  30D3               	movlw	211
  5268  078F  1683               	bsf	3,5	;RP0=1, select bank1
  5269  0790  1303               	bcf	3,6	;RP1=0, select bank1
  5270  0791  0092               	movwf	18	;volatile
  5271                           
  5272                           ;PR28.c: 1100: CCPR1L = 50;
  5273  0792  3032               	movlw	50
  5274  0793  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0794  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0795  0095               	movwf	21	;volatile
  5277                           
  5278                           ;PR28.c: 1101: delay(4000);
  5279  0796  3000               	movlw	0
  5280  0797  00D5               	movwf	delay@data+3
  5281  0798  3000               	movlw	0
  5282  0799  00D4               	movwf	delay@data+2
  5283  079A  300F               	movlw	15
  5284  079B  00D3               	movwf	delay@data+1
  5285  079C  30A0               	movlw	160
  5286  079D  00D2               	movwf	delay@data
  5287  079E  120A  158A  20D9  120A  118A  	fcall	_delay
  5288                           
  5289                           ;PR28.c: 1102: PR2 = 0xEE;
  5290  07A3  30EE               	movlw	238
  5291  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  5292  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  5293  07A6  0092               	movwf	18	;volatile
  5294                           
  5295                           ;PR28.c: 1103: CCPR1L = 50;
  5296  07A7  3032               	movlw	50
  5297  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  5298  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  5299  07AA  0095               	movwf	21	;volatile
  5300                           
  5301                           ;PR28.c: 1104: delay(2000);
  5302  07AB  3000               	movlw	0
  5303  07AC  00D5               	movwf	delay@data+3
  5304  07AD  3000               	movlw	0
  5305  07AE  00D4               	movwf	delay@data+2
  5306  07AF  3007               	movlw	7
  5307  07B0  00D3               	movwf	delay@data+1
  5308  07B1  30D0               	movlw	208
  5309  07B2  00D2               	movwf	delay@data
  5310  07B3  120A  158A  20D9  120A  118A  	fcall	_delay
  5311                           
  5312                           ;PR28.c: 1105: PR2 = 0xEE;
  5313  07B8  30EE               	movlw	238
  5314  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  5315  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  5316  07BB  0092               	movwf	18	;volatile
  5317                           
  5318                           ;PR28.c: 1106: CCPR1L = 50;
  5319  07BC  3032               	movlw	50
  5320  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  5321  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  5322  07BF  0095               	movwf	21	;volatile
  5323                           
  5324                           ;PR28.c: 1107: delay(8000);
  5325  07C0  3000               	movlw	0
  5326  07C1  00D5               	movwf	delay@data+3
  5327  07C2  3000               	movlw	0
  5328  07C3  00D4               	movwf	delay@data+2
  5329  07C4  301F               	movlw	31
  5330  07C5  00D3               	movwf	delay@data+1
  5331  07C6  3040               	movlw	64
  5332  07C7  00D2               	movwf	delay@data
  5333  07C8  120A  158A  20D9  120A  118A  	fcall	_delay
  5334                           
  5335                           ;PR28.c: 1109: CCP1CON = 0x00;
  5336  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  5337  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  5338  07CF  0197               	clrf	23	;volatile
  5339                           
  5340                           ;PR28.c: 1110: T2CON=0b01110110;
  5341  07D0  3076               	movlw	118
  5342  07D1  0092               	movwf	18	;volatile
  5343                           
  5344                           ;PR28.c: 1111: PR2 = 0xB4;
  5345  07D2  30B4               	movlw	180
  5346  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  5347  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  5348  07D5  0092               	movwf	18	;volatile
  5349                           
  5350                           ;PR28.c: 1112: CCPR1L = 0;
  5351  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  5352  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  5353  07D8  0195               	clrf	21	;volatile
  5354                           
  5355                           ;PR28.c: 1114: TMR2IF = 0;
  5356  07D9  108C               	bcf	12,1	;volatile
  5357                           
  5358                           ;PR28.c: 1115: TMR2IE = 1;
  5359  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  5360  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  5361  07DC  148C               	bsf	12,1	;volatile
  5362                           
  5363                           ;PR28.c: 1116: T1CON = 0b11000101;
  5364  07DD  30C5               	movlw	197
  5365  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  5366  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  5367  07E0  0090               	movwf	16	;volatile
  5368                           
  5369                           ;PR28.c: 1117: T1GCON = 0b11100010;
  5370  07E1  30E2               	movlw	226
  5371  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  5372  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  5373  07E4  008F               	movwf	15	;volatile
  5374                           
  5375                           ;PR28.c: 1118: TMR1GIF = 0;
  5376  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5377  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5378  07E7  138C               	bcf	12,7	;volatile
  5379                           
  5380                           ;PR28.c: 1119: TMR1GIE = 1;
  5381  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  5382  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  5383  07EA  178C               	bsf	12,7	;volatile
  5384                           
  5385                           ;PR28.c: 1121: RestartTimer1();
  5386  07EB  160A  118A  2368   	fcall	_RestartTimer1
  5387                           
  5388                           ;PR28.c: 1122: GIE = 1;
  5389  07EE  178B               	bsf	11,7	;volatile
  5390  07EF  0008               	return
  5391  07F0                     __end_of_PIEZO_D:	
  5392                           
  5393                           	psect	text17
  5394  0BFD                     __ptext17:	
  5395 ;; *************** function _PIEZO *****************
  5396 ;; Defined at:
  5397 ;;		line 946 in file "../../Source file/PR28.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;		None               void
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       0       0       0       0
  5412 ;;      Locals:         0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0
  5414 ;;      Totals:         0       0       0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    4
  5418 ;; This function calls:
  5419 ;;		_RestartTimer1
  5420 ;;		_delay
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _PIEZO
  5428  0BFD                     _PIEZO:	
  5429                           
  5430                           ;PR28.c: 948: GIE=0;
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _PIEZO: [wreg+status,2+status,0+pclath+cstack]
  5434  0BFD  138B               	bcf	11,7	;volatile
  5435                           
  5436                           ;PR28.c: 949: TMR2ON = 0;
  5437  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  5439  0C00  1112               	bcf	18,2	;volatile
  5440                           
  5441                           ;PR28.c: 950: TMR1ON = 0;
  5442  0C01  1010               	bcf	16,0	;volatile
  5443                           
  5444                           ;PR28.c: 952: CCP1CON = 0b00001100;
  5445  0C02  300C               	movlw	12
  5446  0C03  0097               	movwf	23	;volatile
  5447                           
  5448                           ;PR28.c: 953: T2CON = 0b00000111;
  5449  0C04  3007               	movlw	7
  5450  0C05  0092               	movwf	18	;volatile
  5451                           
  5452                           ;PR28.c: 954: PR2 = 0x76;
  5453  0C06  3076               	movlw	118
  5454  0C07  1683               	bsf	3,5	;RP0=1, select bank1
  5455  0C08  1303               	bcf	3,6	;RP1=0, select bank1
  5456  0C09  0092               	movwf	18	;volatile
  5457                           
  5458                           ;PR28.c: 955: CCPR1L = 50;
  5459  0C0A  3032               	movlw	50
  5460  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0C0D  0095               	movwf	21	;volatile
  5463                           
  5464                           ;PR28.c: 956: delay(4000);
  5465  0C0E  3000               	movlw	0
  5466  0C0F  00D5               	movwf	delay@data+3
  5467  0C10  3000               	movlw	0
  5468  0C11  00D4               	movwf	delay@data+2
  5469  0C12  300F               	movlw	15
  5470  0C13  00D3               	movwf	delay@data+1
  5471  0C14  30A0               	movlw	160
  5472  0C15  00D2               	movwf	delay@data
  5473  0C16  120A  158A  20D9  120A  158A  	fcall	_delay
  5474                           
  5475                           ;PR28.c: 957: PR2 = 0x7D;
  5476  0C1B  307D               	movlw	125
  5477  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  5478  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  5479  0C1E  0092               	movwf	18	;volatile
  5480                           
  5481                           ;PR28.c: 958: CCPR1L = 50;
  5482  0C1F  3032               	movlw	50
  5483  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0C22  0095               	movwf	21	;volatile
  5486                           
  5487                           ;PR28.c: 959: delay(4000);
  5488  0C23  3000               	movlw	0
  5489  0C24  00D5               	movwf	delay@data+3
  5490  0C25  3000               	movlw	0
  5491  0C26  00D4               	movwf	delay@data+2
  5492  0C27  300F               	movlw	15
  5493  0C28  00D3               	movwf	delay@data+1
  5494  0C29  30A0               	movlw	160
  5495  0C2A  00D2               	movwf	delay@data
  5496  0C2B  120A  158A  20D9  120A  158A  	fcall	_delay
  5497                           
  5498                           ;PR28.c: 960: PR2 = 0x9E;
  5499  0C30  309E               	movlw	158
  5500  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  5501  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  5502  0C33  0092               	movwf	18	;volatile
  5503                           
  5504                           ;PR28.c: 961: CCPR1L = 50;
  5505  0C34  3032               	movlw	50
  5506  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0C37  0095               	movwf	21	;volatile
  5509                           
  5510                           ;PR28.c: 962: delay(4000);
  5511  0C38  3000               	movlw	0
  5512  0C39  00D5               	movwf	delay@data+3
  5513  0C3A  3000               	movlw	0
  5514  0C3B  00D4               	movwf	delay@data+2
  5515  0C3C  300F               	movlw	15
  5516  0C3D  00D3               	movwf	delay@data+1
  5517  0C3E  30A0               	movlw	160
  5518  0C3F  00D2               	movwf	delay@data
  5519  0C40  120A  158A  20D9  120A  158A  	fcall	_delay
  5520                           
  5521                           ;PR28.c: 963: PR2 = 0x76;
  5522  0C45  3076               	movlw	118
  5523  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  5524  0C47  1303               	bcf	3,6	;RP1=0, select bank1
  5525  0C48  0092               	movwf	18	;volatile
  5526                           
  5527                           ;PR28.c: 964: CCPR1L = 100;
  5528  0C49  3064               	movlw	100
  5529  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  5530  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  5531  0C4C  0095               	movwf	21	;volatile
  5532                           
  5533                           ;PR28.c: 965: delay(8000);
  5534  0C4D  3000               	movlw	0
  5535  0C4E  00D5               	movwf	delay@data+3
  5536  0C4F  3000               	movlw	0
  5537  0C50  00D4               	movwf	delay@data+2
  5538  0C51  301F               	movlw	31
  5539  0C52  00D3               	movwf	delay@data+1
  5540  0C53  3040               	movlw	64
  5541  0C54  00D2               	movwf	delay@data
  5542  0C55  120A  158A  20D9  120A  158A  	fcall	_delay
  5543                           
  5544                           ;PR28.c: 966: PR2 = 0x7D;
  5545  0C5A  307D               	movlw	125
  5546  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  5547  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  5548  0C5D  0092               	movwf	18	;volatile
  5549                           
  5550                           ;PR28.c: 967: CCPR1L = 100;
  5551  0C5E  3064               	movlw	100
  5552  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  5553  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  5554  0C61  0095               	movwf	21	;volatile
  5555                           
  5556                           ;PR28.c: 968: delay(8000);
  5557  0C62  3000               	movlw	0
  5558  0C63  00D5               	movwf	delay@data+3
  5559  0C64  3000               	movlw	0
  5560  0C65  00D4               	movwf	delay@data+2
  5561  0C66  301F               	movlw	31
  5562  0C67  00D3               	movwf	delay@data+1
  5563  0C68  3040               	movlw	64
  5564  0C69  00D2               	movwf	delay@data
  5565  0C6A  120A  158A  20D9  120A  158A  	fcall	_delay
  5566                           
  5567                           ;PR28.c: 969: PR2 = 0xBD;
  5568  0C6F  30BD               	movlw	189
  5569  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  5570  0C71  1303               	bcf	3,6	;RP1=0, select bank1
  5571  0C72  0092               	movwf	18	;volatile
  5572                           
  5573                           ;PR28.c: 970: CCPR1L = 50;
  5574  0C73  3032               	movlw	50
  5575  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  5576  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  5577  0C76  0095               	movwf	21	;volatile
  5578                           
  5579                           ;PR28.c: 971: delay(4000);
  5580  0C77  3000               	movlw	0
  5581  0C78  00D5               	movwf	delay@data+3
  5582  0C79  3000               	movlw	0
  5583  0C7A  00D4               	movwf	delay@data+2
  5584  0C7B  300F               	movlw	15
  5585  0C7C  00D3               	movwf	delay@data+1
  5586  0C7D  30A0               	movlw	160
  5587  0C7E  00D2               	movwf	delay@data
  5588  0C7F  120A  158A  20D9  120A  158A  	fcall	_delay
  5589                           
  5590                           ;PR28.c: 972: PR2 = 0x00;
  5591  0C84  1683               	bsf	3,5	;RP0=1, select bank1
  5592  0C85  1303               	bcf	3,6	;RP1=0, select bank1
  5593  0C86  0192               	clrf	18	;volatile
  5594                           
  5595                           ;PR28.c: 973: CCPR1L = 50;
  5596  0C87  3032               	movlw	50
  5597  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0C8A  0095               	movwf	21	;volatile
  5600                           
  5601                           ;PR28.c: 974: delay(2000);
  5602  0C8B  3000               	movlw	0
  5603  0C8C  00D5               	movwf	delay@data+3
  5604  0C8D  3000               	movlw	0
  5605  0C8E  00D4               	movwf	delay@data+2
  5606  0C8F  3007               	movlw	7
  5607  0C90  00D3               	movwf	delay@data+1
  5608  0C91  30D0               	movlw	208
  5609  0C92  00D2               	movwf	delay@data
  5610  0C93  120A  158A  20D9  120A  158A  	fcall	_delay
  5611                           
  5612                           ;PR28.c: 975: PR2 = 0x76;
  5613  0C98  3076               	movlw	118
  5614  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  5615  0C9A  1303               	bcf	3,6	;RP1=0, select bank1
  5616  0C9B  0092               	movwf	18	;volatile
  5617                           
  5618                           ;PR28.c: 976: CCPR1L = 50;
  5619  0C9C  3032               	movlw	50
  5620  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0C9F  0095               	movwf	21	;volatile
  5623                           
  5624                           ;PR28.c: 977: delay(4000);
  5625  0CA0  3000               	movlw	0
  5626  0CA1  00D5               	movwf	delay@data+3
  5627  0CA2  3000               	movlw	0
  5628  0CA3  00D4               	movwf	delay@data+2
  5629  0CA4  300F               	movlw	15
  5630  0CA5  00D3               	movwf	delay@data+1
  5631  0CA6  30A0               	movlw	160
  5632  0CA7  00D2               	movwf	delay@data
  5633  0CA8  120A  158A  20D9  120A  158A  	fcall	_delay
  5634                           
  5635                           ;PR28.c: 978: PR2 = 0xEE;
  5636  0CAD  30EE               	movlw	238
  5637  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  5638  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  5639  0CB0  0092               	movwf	18	;volatile
  5640                           
  5641                           ;PR28.c: 979: CCPR1L = 50;
  5642  0CB1  3032               	movlw	50
  5643  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  5644  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  5645  0CB4  0095               	movwf	21	;volatile
  5646                           
  5647                           ;PR28.c: 980: delay(4000);
  5648  0CB5  3000               	movlw	0
  5649  0CB6  00D5               	movwf	delay@data+3
  5650  0CB7  3000               	movlw	0
  5651  0CB8  00D4               	movwf	delay@data+2
  5652  0CB9  300F               	movlw	15
  5653  0CBA  00D3               	movwf	delay@data+1
  5654  0CBB  30A0               	movlw	160
  5655  0CBC  00D2               	movwf	delay@data
  5656  0CBD  120A  158A  20D9  120A  158A  	fcall	_delay
  5657                           
  5658                           ;PR28.c: 981: PR2 = 0x9E;
  5659  0CC2  309E               	movlw	158
  5660  0CC3  1683               	bsf	3,5	;RP0=1, select bank1
  5661  0CC4  1303               	bcf	3,6	;RP1=0, select bank1
  5662  0CC5  0092               	movwf	18	;volatile
  5663                           
  5664                           ;PR28.c: 982: CCPR1L = 50;
  5665  0CC6  3032               	movlw	50
  5666  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0CC9  0095               	movwf	21	;volatile
  5669                           
  5670                           ;PR28.c: 983: delay(4000);
  5671  0CCA  3000               	movlw	0
  5672  0CCB  00D5               	movwf	delay@data+3
  5673  0CCC  3000               	movlw	0
  5674  0CCD  00D4               	movwf	delay@data+2
  5675  0CCE  300F               	movlw	15
  5676  0CCF  00D3               	movwf	delay@data+1
  5677  0CD0  30A0               	movlw	160
  5678  0CD1  00D2               	movwf	delay@data
  5679  0CD2  120A  158A  20D9  120A  158A  	fcall	_delay
  5680                           
  5681                           ;PR28.c: 984: PR2 = 0x8D;
  5682  0CD7  308D               	movlw	141
  5683  0CD8  1683               	bsf	3,5	;RP0=1, select bank1
  5684  0CD9  1303               	bcf	3,6	;RP1=0, select bank1
  5685  0CDA  0092               	movwf	18	;volatile
  5686                           
  5687                           ;PR28.c: 985: CCPR1L = 50;
  5688  0CDB  3032               	movlw	50
  5689  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  5690  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  5691  0CDE  0095               	movwf	21	;volatile
  5692                           
  5693                           ;PR28.c: 986: delay(8000);
  5694  0CDF  3000               	movlw	0
  5695  0CE0  00D5               	movwf	delay@data+3
  5696  0CE1  3000               	movlw	0
  5697  0CE2  00D4               	movwf	delay@data+2
  5698  0CE3  301F               	movlw	31
  5699  0CE4  00D3               	movwf	delay@data+1
  5700  0CE5  3040               	movlw	64
  5701  0CE6  00D2               	movwf	delay@data
  5702  0CE7  120A  158A  20D9  120A  158A  	fcall	_delay
  5703                           
  5704                           ;PR28.c: 987: PR2 = 0x76;
  5705  0CEC  3076               	movlw	118
  5706  0CED  1683               	bsf	3,5	;RP0=1, select bank1
  5707  0CEE  1303               	bcf	3,6	;RP1=0, select bank1
  5708  0CEF  0092               	movwf	18	;volatile
  5709                           
  5710                           ;PR28.c: 988: CCPR1L = 50;
  5711  0CF0  3032               	movlw	50
  5712  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  5713  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  5714  0CF3  0095               	movwf	21	;volatile
  5715                           
  5716                           ;PR28.c: 989: delay(8000);
  5717  0CF4  3000               	movlw	0
  5718  0CF5  00D5               	movwf	delay@data+3
  5719  0CF6  3000               	movlw	0
  5720  0CF7  00D4               	movwf	delay@data+2
  5721  0CF8  301F               	movlw	31
  5722  0CF9  00D3               	movwf	delay@data+1
  5723  0CFA  3040               	movlw	64
  5724  0CFB  00D2               	movwf	delay@data
  5725  0CFC  120A  158A  20D9  120A  158A  	fcall	_delay
  5726                           
  5727                           ;PR28.c: 991: CCP1CON = 0x00;
  5728  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  5729  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  5730  0D03  0197               	clrf	23	;volatile
  5731                           
  5732                           ;PR28.c: 992: T2CON=0b01110110;
  5733  0D04  3076               	movlw	118
  5734  0D05  0092               	movwf	18	;volatile
  5735                           
  5736                           ;PR28.c: 993: PR2 = 0xB4;
  5737  0D06  30B4               	movlw	180
  5738  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  5739  0D08  1303               	bcf	3,6	;RP1=0, select bank1
  5740  0D09  0092               	movwf	18	;volatile
  5741                           
  5742                           ;PR28.c: 994: CCPR1L = 0;
  5743  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  5744  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  5745  0D0C  0195               	clrf	21	;volatile
  5746                           
  5747                           ;PR28.c: 996: TMR2IF = 0;
  5748  0D0D  108C               	bcf	12,1	;volatile
  5749                           
  5750                           ;PR28.c: 997: TMR2IE = 1;
  5751  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  5752  0D0F  1303               	bcf	3,6	;RP1=0, select bank1
  5753  0D10  148C               	bsf	12,1	;volatile
  5754                           
  5755                           ;PR28.c: 998: T1CON = 0b11000101;
  5756  0D11  30C5               	movlw	197
  5757  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  5758  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  5759  0D14  0090               	movwf	16	;volatile
  5760                           
  5761                           ;PR28.c: 999: T1GCON = 0b11100010;
  5762  0D15  30E2               	movlw	226
  5763  0D16  1683               	bsf	3,5	;RP0=1, select bank1
  5764  0D17  1303               	bcf	3,6	;RP1=0, select bank1
  5765  0D18  008F               	movwf	15	;volatile
  5766                           
  5767                           ;PR28.c: 1000: TMR1GIF = 0;
  5768  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  5769  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  5770  0D1B  138C               	bcf	12,7	;volatile
  5771                           
  5772                           ;PR28.c: 1001: TMR1GIE = 1;
  5773  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  5774  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  5775  0D1E  178C               	bsf	12,7	;volatile
  5776                           
  5777                           ;PR28.c: 1003: RestartTimer1();
  5778  0D1F  160A  118A  2368   	fcall	_RestartTimer1
  5779                           
  5780                           ;PR28.c: 1004: GIE = 1;
  5781  0D22  178B               	bsf	11,7	;volatile
  5782  0D23  0008               	return
  5783  0D24                     __end_of_PIEZO:	
  5784                           
  5785                           	psect	text18
  5786  08D9                     __ptext18:	
  5787 ;; *************** function _delay *****************
  5788 ;; Defined at:
  5789 ;;		line 822 in file "../../Source file/PR28.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  data            4    0[BANK0 ] unsigned long 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;		None               void
  5796 ;; Registers used:
  5797 ;;		wreg
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         0       4       0       0       0
  5804 ;;      Locals:         0       0       0       0       0
  5805 ;;      Temps:          0       4       0       0       0
  5806 ;;      Totals:         0       8       0       0       0
  5807 ;;Total ram usage:        8 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    3
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_main
  5814 ;;		_send_config
  5815 ;;		_send_char
  5816 ;;		_e_pulse
  5817 ;;		_lcd_shift
  5818 ;;		_lcd_clr
  5819 ;;		_draw
  5820 ;;		_PIEZO
  5821 ;;		_PIEZO_D
  5822 ;;		_PIEZO_S
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _delay
  5828  08D9                     _delay:	
  5829                           
  5830                           ;PR28.c: 824: for( ;data>0;data-=1);
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _delay: [wreg]
  5834  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  5835  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  5836  08DB                     L77:	
  5837  08DB  0855               	movf	delay@data+3,w
  5838  08DC  0454               	iorwf	delay@data+2,w
  5839  08DD  0453               	iorwf	delay@data+1,w
  5840  08DE  0452               	iorwf	delay@data,w
  5841  08DF  1903               	btfsc	3,2
  5842  08E0  0008               	return
  5843  08E1  3001               	movlw	1
  5844  08E2  00D6               	movwf	??_delay
  5845  08E3  3000               	movlw	0
  5846  08E4  00D7               	movwf	??_delay+1
  5847  08E5  3000               	movlw	0
  5848  08E6  00D8               	movwf	??_delay+2
  5849  08E7  3000               	movlw	0
  5850  08E8  00D9               	movwf	??_delay+3
  5851  08E9  0856               	movf	??_delay,w
  5852  08EA  02D2               	subwf	delay@data,f
  5853  08EB  0857               	movf	??_delay+1,w
  5854  08EC  1C03               	skipc
  5855  08ED  0F57               	incfsz	??_delay+1,w
  5856  08EE  28F0               	goto	u3855
  5857  08EF  28F1               	goto	u3856
  5858  08F0                     u3855:	
  5859  08F0  02D3               	subwf	delay@data+1,f
  5860  08F1                     u3856:	
  5861  08F1  0858               	movf	??_delay+2,w
  5862  08F2  1C03               	skipc
  5863  08F3  0F58               	incfsz	??_delay+2,w
  5864  08F4  28F6               	goto	u3857
  5865  08F5  28F7               	goto	u3858
  5866  08F6                     u3857:	
  5867  08F6  02D4               	subwf	delay@data+2,f
  5868  08F7                     u3858:	
  5869  08F7  0859               	movf	??_delay+3,w
  5870  08F8  1C03               	skipc
  5871  08F9  0F59               	incfsz	??_delay+3,w
  5872  08FA  28FC               	goto	u3859
  5873  08FB  28DB               	goto	L77
  5874  08FC                     u3859:	
  5875  08FC  02D5               	subwf	delay@data+3,f
  5876  08FD  28DB               	goto	L77
  5877  08FE                     __end_of_delay:	
  5878                           
  5879                           	psect	text19
  5880  1368                     __ptext19:	
  5881 ;; *************** function _RestartTimer1 *****************
  5882 ;; Defined at:
  5883 ;;		line 544 in file "../../Source file/PR28.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;		None               void
  5890 ;; Registers used:
  5891 ;;		status,2
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0
  5900 ;;      Totals:         0       0       0       0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    3
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_PIEZO
  5908 ;;		_PIEZO_D
  5909 ;;		_PIEZO_S
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _RestartTimer1
  5915  1368                     _RestartTimer1:	
  5916                           
  5917                           ;PR28.c: 546: TMR1L = 0;
  5918                           
  5919                           ;incstack = 0
  5920                           ; Regs used in _RestartTimer1: [status,2]
  5921  1368  1283               	bcf	3,5	;RP0=0, select bank0
  5922  1369  1303               	bcf	3,6	;RP1=0, select bank0
  5923  136A  018E               	clrf	14	;volatile
  5924                           
  5925                           ;PR28.c: 547: TMR1H = 0;
  5926  136B  018F               	clrf	15	;volatile
  5927                           
  5928                           ;PR28.c: 548: TMR2 = 0;
  5929  136C  0191               	clrf	17	;volatile
  5930                           
  5931                           ;PR28.c: 549: TMR2IF = 0;
  5932  136D  108C               	bcf	12,1	;volatile
  5933                           
  5934                           ;PR28.c: 550: TMR1ON = 1;
  5935  136E  1410               	bsf	16,0	;volatile
  5936                           
  5937                           ;PR28.c: 551: TMR2ON = 1;
  5938  136F  1512               	bsf	18,2	;volatile
  5939  1370  0008               	return
  5940  1371                     __end_of_RestartTimer1:	
  5941                           
  5942                           	psect	text20
  5943  148B                     __ptext20:	
  5944 ;; *************** function _Init *****************
  5945 ;; Defined at:
  5946 ;;		line 177 in file "../../Source file/PR28.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;		None               void
  5953 ;; Registers used:
  5954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5960 ;;      Params:         0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0
  5962 ;;      Temps:          0       1       0       0       0
  5963 ;;      Totals:         0       1       0       0       0
  5964 ;;Total ram usage:        1 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    5
  5967 ;; This function calls:
  5968 ;;		_CapInit
  5969 ;;		_led_off
  5970 ;;		_winlose
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _Init
  5978  148B                     _Init:	
  5979                           
  5980                           ;PR28.c: 193: TRISA = 0b00010000;
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in _Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5984  148B  3010               	movlw	16
  5985  148C  1683               	bsf	3,5	;RP0=1, select bank1
  5986  148D  1303               	bcf	3,6	;RP1=0, select bank1
  5987  148E  0085               	movwf	5	;volatile
  5988                           
  5989                           ;PR28.c: 194: TRISB = 0b00000000;
  5990  148F  0186               	clrf	6	;volatile
  5991                           
  5992                           ;PR28.c: 195: TRISC = 0b00000000;
  5993  1490  0187               	clrf	7	;volatile
  5994                           
  5995                           ;PR28.c: 196: TRISD = 0b11111111;
  5996  1491  30FF               	movlw	255
  5997  1492  0088               	movwf	8	;volatile
  5998                           
  5999                           ;PR28.c: 197: TRISE = 0b00000000;
  6000  1493  0189               	clrf	9	;volatile
  6001                           
  6002                           ;PR28.c: 198: PORTB = 0;
  6003  1494  1283               	bcf	3,5	;RP0=0, select bank0
  6004  1495  1303               	bcf	3,6	;RP1=0, select bank0
  6005  1496  0186               	clrf	6	;volatile
  6006                           
  6007                           ;PR28.c: 199: PORTE = 0;
  6008  1497  0189               	clrf	9	;volatile
  6009                           
  6010                           ;PR28.c: 201: led_off();
  6011  1498  160A  118A  242B  160A  118A  	fcall	_led_off
  6012                           
  6013                           ;PR28.c: 203: ANSELA = 0x10;
  6014  149D  3010               	movlw	16
  6015  149E  1683               	bsf	3,5	;RP0=1, select bank3
  6016  149F  1703               	bsf	3,6	;RP1=1, select bank3
  6017  14A0  0085               	movwf	5	;volatile
  6018                           
  6019                           ;PR28.c: 204: ANSELB = 0x00;
  6020  14A1  0186               	clrf	6	;volatile
  6021                           
  6022                           ;PR28.c: 205: ANSELE = 0x00;
  6023  14A2  0189               	clrf	9	;volatile
  6024                           
  6025                           ;PR28.c: 206: ANSELD = 0b11111111;
  6026  14A3  30FF               	movlw	255
  6027  14A4  0088               	movwf	8	;volatile
  6028                           
  6029                           ;PR28.c: 208: result = 0;
  6030  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  6031  14A6  1303               	bcf	3,6	;RP1=0, select bank0
  6032  14A7  01D1               	clrf	_result
  6033                           
  6034                           ;PR28.c: 209: flag = 0;
  6035  14A8  01CF               	clrf	_flag
  6036                           
  6037                           ;PR28.c: 210: index =0;
  6038  14A9  01D0               	clrf	_index
  6039                           
  6040                           ;PR28.c: 211: OSCCON = 0x10;
  6041  14AA  3010               	movlw	16
  6042  14AB  1683               	bsf	3,5	;RP0=1, select bank1
  6043  14AC  1303               	bcf	3,6	;RP1=0, select bank1
  6044  14AD  0090               	movwf	16	;volatile
  6045                           
  6046                           ;PR28.c: 220: GIE = 1;
  6047  14AE  178B               	bsf	11,7	;volatile
  6048                           
  6049                           ;PR28.c: 221: CPSCON0 = 0b10001101;
  6050  14AF  308D               	movlw	141
  6051  14B0  1283               	bcf	3,5	;RP0=0, select bank2
  6052  14B1  1703               	bsf	3,6	;RP1=1, select bank2
  6053  14B2  0088               	movwf	8	;volatile
  6054                           
  6055                           ;PR28.c: 222: CPSCON1 = 0b00001000;
  6056  14B3  3008               	movlw	8
  6057  14B4  0089               	movwf	9	;volatile
  6058                           
  6059                           ;PR28.c: 223: CapInit();
  6060  14B5  160A  118A  276B  160A  118A  	fcall	_CapInit
  6061                           
  6062                           ;PR28.c: 224: data = winlose();
  6063  14BA  120A  158A  22DD   	fcall	_winlose
  6064  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  6065  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  6066  14BF  00E2               	movwf	??_Init
  6067  14C0  0862               	movf	??_Init,w
  6068  14C1  00CE               	movwf	_data
  6069                           
  6070                           ;PR28.c: 225: PEIE = 1;
  6071  14C2  170B               	bsf	11,6	;volatile
  6072  14C3  0008               	return
  6073  14C4                     __end_of_Init:	
  6074                           
  6075                           	psect	text21
  6076  0ADD                     __ptext21:	
  6077 ;; *************** function _winlose *****************
  6078 ;; Defined at:
  6079 ;;		line 1184 in file "../../Source file/PR28.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  j               2   12[BANK0 ] int 
  6084 ;;  i               2   10[BANK0 ] int 
  6085 ;;  i               2   14[BANK0 ] int 
  6086 ;;  status          2    7[BANK0 ] int 
  6087 ;;  j               2    0        int 
  6088 ;;  i               2    0        int 
  6089 ;;  flag_w          1    9[BANK0 ] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      unsigned char 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6099 ;;      Params:         0       0       0       0       0
  6100 ;;      Locals:         0       9       0       0       0
  6101 ;;      Temps:          0       3       0       0       0
  6102 ;;      Totals:         0      12       0       0       0
  6103 ;;Total ram usage:       12 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    4
  6106 ;; This function calls:
  6107 ;;		___bmul
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;;		_Init
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           
  6115                           ;psect for function _winlose
  6116  0ADD                     _winlose:	
  6117                           
  6118                           ;PR28.c: 1186: int status;
  6119                           ;PR28.c: 1187: int i,j;
  6120                           ;PR28.c: 1188: status =0;
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in _winlose: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6124  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  6125  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  6126  0ADF  01D9               	clrf	winlose@status
  6127  0AE0  01DA               	clrf	winlose@status+1
  6128                           
  6129                           ;PR28.c: 1189: char flag_w;
  6130                           ;PR28.c: 1190: for(int i=0; i<3; i++)
  6131  0AE1  01E0               	clrf	winlose@i_279
  6132  0AE2  01E1               	clrf	winlose@i_279+1
  6133  0AE3  0861               	movf	winlose@i_279+1,w
  6134  0AE4  3A80               	xorlw	128
  6135  0AE5  00FF               	movwf	127
  6136  0AE6  3080               	movlw	128
  6137  0AE7  027F               	subwf	127,w
  6138  0AE8  1D03               	skipz
  6139  0AE9  2AEC               	goto	u6245
  6140  0AEA  3003               	movlw	3
  6141  0AEB  0260               	subwf	winlose@i_279,w
  6142  0AEC                     u6245:	
  6143  0AEC  1803               	btfsc	3,0
  6144  0AED  2B8B               	goto	l3495
  6145  0AEE                     l3459:	
  6146                           
  6147                           ;PR28.c: 1191: {
  6148                           ;PR28.c: 1193: if((matrix[i][0]== matrix[i][1]) & (matrix[i][0] == matrix[i][2])){
  6149  0AEE  3003               	movlw	3
  6150  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  6151  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  6152  0AF1  00D6               	movwf	??_winlose
  6153  0AF2  0856               	movf	??_winlose,w
  6154  0AF3  00D2               	movwf	___bmul@multiplicand
  6155  0AF4  0860               	movf	winlose@i_279,w
  6156  0AF5  160A  118A  237C  120A  158A  	fcall	___bmul
  6157  0AFA  3E01               	addlw	1
  6158  0AFB  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6159  0AFC  0084               	movwf	4
  6160  0AFD  1383               	bcf	3,7	;select IRP bank0
  6161  0AFE  0800               	movf	0,w
  6162  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  6163  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  6164  0B01  00D7               	movwf	??_winlose+1
  6165  0B02  3003               	movlw	3
  6166  0B03  00D8               	movwf	??_winlose+2
  6167  0B04  0858               	movf	??_winlose+2,w
  6168  0B05  00D2               	movwf	___bmul@multiplicand
  6169  0B06  0860               	movf	winlose@i_279,w
  6170  0B07  160A  118A  237C  120A  158A  	fcall	___bmul
  6171  0B0C  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6172  0B0D  0084               	movwf	4
  6173  0B0E  1383               	bcf	3,7	;select IRP bank0
  6174  0B0F  0800               	movf	0,w
  6175  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  6176  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  6177  0B12  0657               	xorwf	??_winlose+1,w
  6178  0B13  1D03               	skipz
  6179  0B14  2B47               	goto	l3467
  6180  0B15  3003               	movlw	3
  6181  0B16  00D6               	movwf	??_winlose
  6182  0B17  0856               	movf	??_winlose,w
  6183  0B18  00D2               	movwf	___bmul@multiplicand
  6184  0B19  0860               	movf	winlose@i_279,w
  6185  0B1A  160A  118A  237C  120A  158A  	fcall	___bmul
  6186  0B1F  3E02               	addlw	2
  6187  0B20  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6188  0B21  0084               	movwf	4
  6189  0B22  1383               	bcf	3,7	;select IRP bank0
  6190  0B23  0800               	movf	0,w
  6191  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0B26  00D7               	movwf	??_winlose+1
  6194  0B27  3003               	movlw	3
  6195  0B28  00D8               	movwf	??_winlose+2
  6196  0B29  0858               	movf	??_winlose+2,w
  6197  0B2A  00D2               	movwf	___bmul@multiplicand
  6198  0B2B  0860               	movf	winlose@i_279,w
  6199  0B2C  160A  118A  237C  120A  158A  	fcall	___bmul
  6200  0B31  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6201  0B32  0084               	movwf	4
  6202  0B33  1383               	bcf	3,7	;select IRP bank0
  6203  0B34  0800               	movf	0,w
  6204  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  6206  0B37  0657               	xorwf	??_winlose+1,w
  6207  0B38  1D03               	skipz
  6208  0B39  2B47               	goto	l3467
  6209                           
  6210                           ;PR28.c: 1194: return matrix[i][0];
  6211  0B3A  3003               	movlw	3
  6212  0B3B  00D6               	movwf	??_winlose
  6213  0B3C  0856               	movf	??_winlose,w
  6214  0B3D  00D2               	movwf	___bmul@multiplicand
  6215  0B3E  0860               	movf	winlose@i_279,w
  6216  0B3F  160A  118A  237C   	fcall	___bmul
  6217  0B42  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6218  0B43  0084               	movwf	4
  6219  0B44  1383               	bcf	3,7	;select IRP bank0
  6220  0B45  0800               	movf	0,w
  6221  0B46  0008               	return
  6222  0B47                     l3467:	
  6223                           
  6224                           ;PR28.c: 1195: }
  6225                           ;PR28.c: 1197: if(matrix[0][i] == matrix[1][i] & matrix[0][i] == matrix[2][i]){
  6226  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  6227  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  6228  0B49  0860               	movf	winlose@i_279,w
  6229  0B4A  3E3E               	addlw	(low ((_matrix| 0+3)))& (0+255)
  6230  0B4B  0084               	movwf	4
  6231  0B4C  0800               	movf	0,w
  6232  0B4D  00D6               	movwf	??_winlose
  6233  0B4E  0860               	movf	winlose@i_279,w
  6234  0B4F  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6235  0B50  0084               	movwf	4
  6236  0B51  0800               	movf	0,w
  6237  0B52  0656               	xorwf	??_winlose,w
  6238  0B53  1D03               	skipz
  6239  0B54  2B66               	goto	l3475
  6240  0B55  0860               	movf	winlose@i_279,w
  6241  0B56  3E41               	addlw	(low ((_matrix| 0+6)))& (0+255)
  6242  0B57  0084               	movwf	4
  6243  0B58  0800               	movf	0,w
  6244  0B59  00D6               	movwf	??_winlose
  6245  0B5A  0860               	movf	winlose@i_279,w
  6246  0B5B  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6247  0B5C  0084               	movwf	4
  6248  0B5D  0800               	movf	0,w
  6249  0B5E  0656               	xorwf	??_winlose,w
  6250  0B5F  1D03               	skipz
  6251  0B60  2B66               	goto	l3475
  6252                           
  6253                           ;PR28.c: 1198: return matrix[0][i];
  6254  0B61  0860               	movf	winlose@i_279,w
  6255  0B62  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6256  0B63  0084               	movwf	4
  6257  0B64  0800               	movf	0,w
  6258  0B65  0008               	return
  6259  0B66                     l3475:	
  6260                           
  6261                           ;PR28.c: 1199: }
  6262                           ;PR28.c: 1201: if(matrix[0][0] == matrix[1][1] & matrix[0][0] == matrix[2][2]){
  6263  0B66  083F               	movf	_matrix+4,w
  6264  0B67  063B               	xorwf	_matrix,w
  6265  0B68  1D03               	skipz
  6266  0B69  2B70               	goto	l3483
  6267  0B6A  0843               	movf	_matrix+8,w
  6268  0B6B  063B               	xorwf	_matrix,w
  6269  0B6C  1D03               	skipz
  6270  0B6D  2B70               	goto	l3483
  6271                           
  6272                           ;PR28.c: 1202: return matrix[0][0];
  6273  0B6E  083B               	movf	_matrix,w
  6274  0B6F  0008               	return
  6275  0B70                     l3483:	
  6276                           
  6277                           ;PR28.c: 1203: }
  6278                           ;PR28.c: 1204: if(matrix[0][2] == matrix[1][1] & matrix[0][2] == matrix[2][0]){
  6279  0B70  083D               	movf	_matrix+2,w
  6280  0B71  063F               	xorwf	_matrix+4,w
  6281  0B72  1D03               	skipz
  6282  0B73  2B7A               	goto	l3491
  6283  0B74  083D               	movf	_matrix+2,w
  6284  0B75  0641               	xorwf	_matrix+6,w
  6285  0B76  1D03               	skipz
  6286  0B77  2B7A               	goto	l3491
  6287                           
  6288                           ;PR28.c: 1205: return matrix[0][2];
  6289  0B78  083D               	movf	_matrix+2,w
  6290  0B79  0008               	return
  6291  0B7A                     l3491:	
  6292  0B7A  3001               	movlw	1
  6293  0B7B  07E0               	addwf	winlose@i_279,f
  6294  0B7C  1803               	skipnc
  6295  0B7D  0AE1               	incf	winlose@i_279+1,f
  6296  0B7E  3000               	movlw	0
  6297  0B7F  07E1               	addwf	winlose@i_279+1,f
  6298  0B80  0861               	movf	winlose@i_279+1,w
  6299  0B81  3A80               	xorlw	128
  6300  0B82  00FF               	movwf	127
  6301  0B83  3080               	movlw	128
  6302  0B84  027F               	subwf	127,w
  6303  0B85  1D03               	skipz
  6304  0B86  2B89               	goto	u6335
  6305  0B87  3003               	movlw	3
  6306  0B88  0260               	subwf	winlose@i_279,w
  6307  0B89                     u6335:	
  6308  0B89  1C03               	skipc
  6309  0B8A  2AEE               	goto	l3459
  6310  0B8B                     l3495:	
  6311                           
  6312                           ;PR28.c: 1206: }
  6313                           ;PR28.c: 1209: }
  6314                           ;PR28.c: 1210: for(int i=0; i<3; i++){
  6315  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  6316  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  6317  0B8D  01DC               	clrf	winlose@i_280
  6318  0B8E  01DD               	clrf	winlose@i_280+1
  6319  0B8F  085D               	movf	winlose@i_280+1,w
  6320  0B90  3A80               	xorlw	128
  6321  0B91  00FF               	movwf	127
  6322  0B92  3080               	movlw	128
  6323  0B93  027F               	subwf	127,w
  6324  0B94  1D03               	skipz
  6325  0B95  2B98               	goto	u6345
  6326  0B96  3003               	movlw	3
  6327  0B97  025C               	subwf	winlose@i_280,w
  6328  0B98                     u6345:	
  6329  0B98  1803               	btfsc	3,0
  6330  0B99  2BEB               	goto	l3519
  6331  0B9A                     l3501:	
  6332                           
  6333                           ;PR28.c: 1211: for(int j=0; j<3; j++){
  6334  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  6336  0B9C  01DE               	clrf	winlose@j_281
  6337  0B9D  01DF               	clrf	winlose@j_281+1
  6338  0B9E  085F               	movf	winlose@j_281+1,w
  6339  0B9F  3A80               	xorlw	128
  6340  0BA0  00FF               	movwf	127
  6341  0BA1  3080               	movlw	128
  6342  0BA2  027F               	subwf	127,w
  6343  0BA3  1D03               	skipz
  6344  0BA4  2BA7               	goto	u6355
  6345  0BA5  3003               	movlw	3
  6346  0BA6  025E               	subwf	winlose@j_281,w
  6347  0BA7                     u6355:	
  6348  0BA7  1803               	btfsc	3,0
  6349  0BA8  2BD8               	goto	l3515
  6350  0BA9                     l3507:	
  6351                           
  6352                           ;PR28.c: 1212: if(matrix[i][j] == ' '){
  6353  0BA9  3003               	movlw	3
  6354  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  6356  0BAC  00D6               	movwf	??_winlose
  6357  0BAD  0856               	movf	??_winlose,w
  6358  0BAE  00D2               	movwf	___bmul@multiplicand
  6359  0BAF  085C               	movf	winlose@i_280,w
  6360  0BB0  160A  118A  237C  120A  158A  	fcall	___bmul
  6361  0BB5  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  6362  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  6364  0BB8  075E               	addwf	winlose@j_281,w
  6365  0BB9  00D7               	movwf	??_winlose+1
  6366  0BBA  0857               	movf	??_winlose+1,w
  6367  0BBB  0084               	movwf	4
  6368  0BBC  3020               	movlw	32
  6369  0BBD  1383               	bcf	3,7	;select IRP bank0
  6370  0BBE  0600               	xorwf	0,w
  6371  0BBF  1D03               	btfss	3,2
  6372  0BC0  2BC7               	goto	l3511
  6373                           
  6374                           ;PR28.c: 1213: status++;
  6375  0BC1  3001               	movlw	1
  6376  0BC2  07D9               	addwf	winlose@status,f
  6377  0BC3  1803               	skipnc
  6378  0BC4  0ADA               	incf	winlose@status+1,f
  6379  0BC5  3000               	movlw	0
  6380  0BC6  07DA               	addwf	winlose@status+1,f
  6381  0BC7                     l3511:	
  6382                           ;PR28.c: 1214: }else{
  6383                           
  6384  0BC7  3001               	movlw	1
  6385  0BC8  07DE               	addwf	winlose@j_281,f
  6386  0BC9  1803               	skipnc
  6387  0BCA  0ADF               	incf	winlose@j_281+1,f
  6388  0BCB  3000               	movlw	0
  6389  0BCC  07DF               	addwf	winlose@j_281+1,f
  6390  0BCD  085F               	movf	winlose@j_281+1,w
  6391  0BCE  3A80               	xorlw	128
  6392  0BCF  00FF               	movwf	127
  6393  0BD0  3080               	movlw	128
  6394  0BD1  027F               	subwf	127,w
  6395  0BD2  1D03               	skipz
  6396  0BD3  2BD6               	goto	u6375
  6397  0BD4  3003               	movlw	3
  6398  0BD5  025E               	subwf	winlose@j_281,w
  6399  0BD6                     u6375:	
  6400  0BD6  1C03               	skipc
  6401  0BD7  2BA9               	goto	l3507
  6402  0BD8                     l3515:	
  6403  0BD8  3001               	movlw	1
  6404  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0BDB  07DC               	addwf	winlose@i_280,f
  6407  0BDC  1803               	skipnc
  6408  0BDD  0ADD               	incf	winlose@i_280+1,f
  6409  0BDE  3000               	movlw	0
  6410  0BDF  07DD               	addwf	winlose@i_280+1,f
  6411  0BE0  085D               	movf	winlose@i_280+1,w
  6412  0BE1  3A80               	xorlw	128
  6413  0BE2  00FF               	movwf	127
  6414  0BE3  3080               	movlw	128
  6415  0BE4  027F               	subwf	127,w
  6416  0BE5  1D03               	skipz
  6417  0BE6  2BE9               	goto	u6385
  6418  0BE7  3003               	movlw	3
  6419  0BE8  025C               	subwf	winlose@i_280,w
  6420  0BE9                     u6385:	
  6421  0BE9  1C03               	skipc
  6422  0BEA  2B9A               	goto	l3501
  6423  0BEB                     l3519:	
  6424                           
  6425                           ;PR28.c: 1216: }
  6426                           ;PR28.c: 1217: }
  6427                           ;PR28.c: 1218: }
  6428                           ;PR28.c: 1219: if(status == 0){
  6429  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0BED  0859               	movf	winlose@status,w
  6432  0BEE  045A               	iorwf	winlose@status+1,w
  6433  0BEF  1D03               	btfss	3,2
  6434  0BF0  2BF7               	goto	l3527
  6435                           
  6436                           ;PR28.c: 1220: flag_w = 'd';
  6437  0BF1  3064               	movlw	100
  6438  0BF2  00D6               	movwf	??_winlose
  6439  0BF3  0856               	movf	??_winlose,w
  6440  0BF4  00DB               	movwf	winlose@flag_w
  6441                           
  6442                           ;PR28.c: 1221: return flag_w;
  6443  0BF5  085B               	movf	winlose@flag_w,w
  6444                           
  6445                           ;PR28.c: 1222: }else{
  6446  0BF6  0008               	return
  6447  0BF7                     l3527:	
  6448                           
  6449                           ;PR28.c: 1223: flag_w = ' ';
  6450  0BF7  3020               	movlw	32
  6451  0BF8  00D6               	movwf	??_winlose
  6452  0BF9  0856               	movf	??_winlose,w
  6453  0BFA  00DB               	movwf	winlose@flag_w
  6454                           
  6455                           ;PR28.c: 1224: return flag_w;
  6456  0BFB  085B               	movf	winlose@flag_w,w
  6457  0BFC  0008               	return
  6458  0BFD                     __end_of_winlose:	
  6459                           
  6460                           	psect	text22
  6461  142B                     __ptext22:	
  6462 ;; *************** function _led_off *****************
  6463 ;; Defined at:
  6464 ;;		line 932 in file "../../Source file/PR28.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;		None               void
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, pclath, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6478 ;;      Params:         0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    4
  6485 ;; This function calls:
  6486 ;;		_led_display1
  6487 ;;		_led_display2
  6488 ;;		_led_display3
  6489 ;; This function is called by:
  6490 ;;		_Init
  6491 ;;		_draw
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           
  6496                           ;psect for function _led_off
  6497  142B                     _led_off:	
  6498                           
  6499                           ;PR28.c: 934: result = 0b00000000;
  6500                           
  6501                           ;incstack = 0
  6502                           ; Regs used in _led_off: [wreg+status,2+status,0+pclath+cstack]
  6503  142B  1283               	bcf	3,5	;RP0=0, select bank0
  6504  142C  1303               	bcf	3,6	;RP1=0, select bank0
  6505  142D  01D1               	clrf	_result
  6506                           
  6507                           ;PR28.c: 935: RA6 = RA7 = RA0 = 0;
  6508  142E  1005               	bcf	5,0	;volatile
  6509  142F  1385               	bcf	5,7	;volatile
  6510  1430  1305               	bcf	5,6	;volatile
  6511                           
  6512                           ;PR28.c: 936: RC5 = RC6 = RC7 = 0;
  6513  1431  1387               	bcf	7,7	;volatile
  6514  1432  1307               	bcf	7,6	;volatile
  6515  1433  1287               	bcf	7,5	;volatile
  6516                           
  6517                           ;PR28.c: 937: led_display1(result);
  6518  1434  0851               	movf	_result,w
  6519  1435  160A  118A  2581  160A  118A  	fcall	_led_display1
  6520                           
  6521                           ;PR28.c: 938: led_display2(result);
  6522  143A  1283               	bcf	3,5	;RP0=0, select bank0
  6523  143B  1303               	bcf	3,6	;RP1=0, select bank0
  6524  143C  0851               	movf	_result,w
  6525  143D  160A  118A  25F7  160A  118A  	fcall	_led_display2
  6526                           
  6527                           ;PR28.c: 939: led_display3(result);
  6528  1442  1283               	bcf	3,5	;RP0=0, select bank0
  6529  1443  1303               	bcf	3,6	;RP1=0, select bank0
  6530  1444  0851               	movf	_result,w
  6531  1445  160A  118A  266D   	fcall	_led_display3
  6532  1448  0008               	return
  6533  1449                     __end_of_led_off:	
  6534                           
  6535                           	psect	text23
  6536  166D                     __ptext23:	
  6537 ;; *************** function _led_display3 *****************
  6538 ;; Defined at:
  6539 ;;		line 772 in file "../../Source file/PR28.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  value3          1    wreg     unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  value3          1    1[BANK0 ] unsigned char 
  6544 ;; Return value:  Size  Location     Type
  6545 ;;		None               void
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6553 ;;      Params:         0       0       0       0       0
  6554 ;;      Locals:         0       1       0       0       0
  6555 ;;      Temps:          0       1       0       0       0
  6556 ;;      Totals:         0       2       0       0       0
  6557 ;;Total ram usage:        2 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    3
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_DisplayLEDs
  6564 ;;		_draw
  6565 ;;		_led_off
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function _led_display3
  6571  166D                     _led_display3:	
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _led_display3: [wreg+status,2+status,0]
  6575                           ;led_display3@value3 stored from wreg
  6576  166D  1283               	bcf	3,5	;RP0=0, select bank0
  6577  166E  1303               	bcf	3,6	;RP1=0, select bank0
  6578  166F  00D3               	movwf	led_display3@value3
  6579                           
  6580                           ;PR28.c: 774: if((value3&0b00000001)==1) RA1=1;
  6581  1670  1C53               	btfss	led_display3@value3,0
  6582  1671  2E74               	goto	l546
  6583  1672  1485               	bsf	5,1	;volatile
  6584  1673  2E75               	goto	l547
  6585  1674                     l546:	
  6586                           
  6587                           ;PR28.c: 775: else RA1=0;
  6588  1674  1085               	bcf	5,1	;volatile
  6589  1675                     l547:	
  6590                           
  6591                           ;PR28.c: 776: RA3=1;
  6592  1675  1585               	bsf	5,3	;volatile
  6593                           
  6594                           ;PR28.c: 777: RA3=0;
  6595  1676  1185               	bcf	5,3	;volatile
  6596                           
  6597                           ;PR28.c: 779: if(((value3&0b00000010)>>1)==1) RA1=1;
  6598  1677  0853               	movf	led_display3@value3,w
  6599  1678  00D2               	movwf	??_led_display3
  6600  1679  3001               	movlw	1
  6601  167A                     u3705:	
  6602  167A  1003               	clrc
  6603  167B  0CD2               	rrf	??_led_display3,f
  6604  167C  3EFF               	addlw	-1
  6605  167D  1D03               	skipz
  6606  167E  2E7A               	goto	u3705
  6607  167F  1C52               	btfss	??_led_display3,0
  6608  1680  2E83               	goto	l548
  6609  1681  1485               	bsf	5,1	;volatile
  6610  1682  2E84               	goto	l549
  6611  1683                     l548:	
  6612                           
  6613                           ;PR28.c: 780: else RA1=0;
  6614  1683  1085               	bcf	5,1	;volatile
  6615  1684                     l549:	
  6616                           
  6617                           ;PR28.c: 781: RA3=1;
  6618  1684  1585               	bsf	5,3	;volatile
  6619                           
  6620                           ;PR28.c: 782: RA3=0;
  6621  1685  1185               	bcf	5,3	;volatile
  6622                           
  6623                           ;PR28.c: 784: if(((value3&0b00000100)>>2)==1) RA1=1;
  6624  1686  0853               	movf	led_display3@value3,w
  6625  1687  00D2               	movwf	??_led_display3
  6626  1688  3002               	movlw	2
  6627  1689                     u3725:	
  6628  1689  1003               	clrc
  6629  168A  0CD2               	rrf	??_led_display3,f
  6630  168B  3EFF               	addlw	-1
  6631  168C  1D03               	skipz
  6632  168D  2E89               	goto	u3725
  6633  168E  1C52               	btfss	??_led_display3,0
  6634  168F  2E92               	goto	l550
  6635  1690  1485               	bsf	5,1	;volatile
  6636  1691  2E93               	goto	l551
  6637  1692                     l550:	
  6638                           
  6639                           ;PR28.c: 785: else RA1=0;
  6640  1692  1085               	bcf	5,1	;volatile
  6641  1693                     l551:	
  6642                           
  6643                           ;PR28.c: 786: RA3=1;
  6644  1693  1585               	bsf	5,3	;volatile
  6645                           
  6646                           ;PR28.c: 787: RA3=0;
  6647  1694  1185               	bcf	5,3	;volatile
  6648                           
  6649                           ;PR28.c: 789: if(((value3&0b00001000)>>3)==1) RA1=1;
  6650  1695  0853               	movf	led_display3@value3,w
  6651  1696  00D2               	movwf	??_led_display3
  6652  1697  3003               	movlw	3
  6653  1698                     u3745:	
  6654  1698  1003               	clrc
  6655  1699  0CD2               	rrf	??_led_display3,f
  6656  169A  3EFF               	addlw	-1
  6657  169B  1D03               	skipz
  6658  169C  2E98               	goto	u3745
  6659  169D  1C52               	btfss	??_led_display3,0
  6660  169E  2EA1               	goto	l552
  6661  169F  1485               	bsf	5,1	;volatile
  6662  16A0  2EA2               	goto	l553
  6663  16A1                     l552:	
  6664                           
  6665                           ;PR28.c: 790: else RA1=0;
  6666  16A1  1085               	bcf	5,1	;volatile
  6667  16A2                     l553:	
  6668                           
  6669                           ;PR28.c: 791: RA3=1;
  6670  16A2  1585               	bsf	5,3	;volatile
  6671                           
  6672                           ;PR28.c: 792: RA3=0;
  6673  16A3  1185               	bcf	5,3	;volatile
  6674                           
  6675                           ;PR28.c: 794: if(((value3&0b00010000)>>4)==1) RA1=1;
  6676  16A4  0853               	movf	led_display3@value3,w
  6677  16A5  00D2               	movwf	??_led_display3
  6678  16A6  3004               	movlw	4
  6679  16A7                     u3765:	
  6680  16A7  1003               	clrc
  6681  16A8  0CD2               	rrf	??_led_display3,f
  6682  16A9  3EFF               	addlw	-1
  6683  16AA  1D03               	skipz
  6684  16AB  2EA7               	goto	u3765
  6685  16AC  1C52               	btfss	??_led_display3,0
  6686  16AD  2EB0               	goto	l554
  6687  16AE  1485               	bsf	5,1	;volatile
  6688  16AF  2EB1               	goto	l555
  6689  16B0                     l554:	
  6690                           
  6691                           ;PR28.c: 795: else RA1=0;
  6692  16B0  1085               	bcf	5,1	;volatile
  6693  16B1                     l555:	
  6694                           
  6695                           ;PR28.c: 796: RA3=1;
  6696  16B1  1585               	bsf	5,3	;volatile
  6697                           
  6698                           ;PR28.c: 797: RA3=0;
  6699  16B2  1185               	bcf	5,3	;volatile
  6700                           
  6701                           ;PR28.c: 799: if(((value3&0b00100000)>>5)==1) RA1=1;
  6702  16B3  0853               	movf	led_display3@value3,w
  6703  16B4  00D2               	movwf	??_led_display3
  6704  16B5  3005               	movlw	5
  6705  16B6                     u3785:	
  6706  16B6  1003               	clrc
  6707  16B7  0CD2               	rrf	??_led_display3,f
  6708  16B8  3EFF               	addlw	-1
  6709  16B9  1D03               	skipz
  6710  16BA  2EB6               	goto	u3785
  6711  16BB  1C52               	btfss	??_led_display3,0
  6712  16BC  2EBF               	goto	l556
  6713  16BD  1485               	bsf	5,1	;volatile
  6714  16BE  2EC0               	goto	l557
  6715  16BF                     l556:	
  6716                           
  6717                           ;PR28.c: 800: else RA1=0;
  6718  16BF  1085               	bcf	5,1	;volatile
  6719  16C0                     l557:	
  6720                           
  6721                           ;PR28.c: 801: RA3=1;
  6722  16C0  1585               	bsf	5,3	;volatile
  6723                           
  6724                           ;PR28.c: 802: RA3=0;
  6725  16C1  1185               	bcf	5,3	;volatile
  6726                           
  6727                           ;PR28.c: 804: if(((value3&0b01000000)>>6)==1) RA1=1;
  6728  16C2  0853               	movf	led_display3@value3,w
  6729  16C3  00D2               	movwf	??_led_display3
  6730  16C4  3006               	movlw	6
  6731  16C5                     u3805:	
  6732  16C5  1003               	clrc
  6733  16C6  0CD2               	rrf	??_led_display3,f
  6734  16C7  3EFF               	addlw	-1
  6735  16C8  1D03               	skipz
  6736  16C9  2EC5               	goto	u3805
  6737  16CA  1C52               	btfss	??_led_display3,0
  6738  16CB  2ECE               	goto	l558
  6739  16CC  1485               	bsf	5,1	;volatile
  6740  16CD  2ECF               	goto	l559
  6741  16CE                     l558:	
  6742                           
  6743                           ;PR28.c: 805: else RA1=0;
  6744  16CE  1085               	bcf	5,1	;volatile
  6745  16CF                     l559:	
  6746                           
  6747                           ;PR28.c: 806: RA3=1;
  6748  16CF  1585               	bsf	5,3	;volatile
  6749                           
  6750                           ;PR28.c: 807: RA3=0;
  6751  16D0  1185               	bcf	5,3	;volatile
  6752                           
  6753                           ;PR28.c: 809: if(((value3&0b10000000)>>7)==1) RA1=1;
  6754  16D1  0853               	movf	led_display3@value3,w
  6755  16D2  00D2               	movwf	??_led_display3
  6756  16D3  3007               	movlw	7
  6757  16D4                     u3825:	
  6758  16D4  1003               	clrc
  6759  16D5  0CD2               	rrf	??_led_display3,f
  6760  16D6  3EFF               	addlw	-1
  6761  16D7  1D03               	skipz
  6762  16D8  2ED4               	goto	u3825
  6763  16D9  1C52               	btfss	??_led_display3,0
  6764  16DA  2EDD               	goto	l560
  6765  16DB  1485               	bsf	5,1	;volatile
  6766  16DC  2EDE               	goto	l561
  6767  16DD                     l560:	
  6768                           
  6769                           ;PR28.c: 810: else RA1=0;
  6770  16DD  1085               	bcf	5,1	;volatile
  6771  16DE                     l561:	
  6772                           
  6773                           ;PR28.c: 811: RA3=1;
  6774  16DE  1585               	bsf	5,3	;volatile
  6775                           
  6776                           ;PR28.c: 812: RA3=0;
  6777  16DF  1185               	bcf	5,3	;volatile
  6778                           
  6779                           ;PR28.c: 814: RA2=1;
  6780  16E0  1505               	bsf	5,2	;volatile
  6781                           
  6782                           ;PR28.c: 815: RA2=0;
  6783  16E1  1105               	bcf	5,2	;volatile
  6784  16E2  0008               	return
  6785  16E3                     __end_of_led_display3:	
  6786                           
  6787                           	psect	text24
  6788  15F7                     __ptext24:	
  6789 ;; *************** function _led_display2 *****************
  6790 ;; Defined at:
  6791 ;;		line 722 in file "../../Source file/PR28.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  value2          1    wreg     unsigned char 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  value2          1    1[BANK0 ] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;		None               void
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6805 ;;      Params:         0       0       0       0       0
  6806 ;;      Locals:         0       1       0       0       0
  6807 ;;      Temps:          0       1       0       0       0
  6808 ;;      Totals:         0       2       0       0       0
  6809 ;;Total ram usage:        2 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    3
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_DisplayLEDs
  6816 ;;		_draw
  6817 ;;		_led_off
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           
  6822                           ;psect for function _led_display2
  6823  15F7                     _led_display2:	
  6824                           
  6825                           ;incstack = 0
  6826                           ; Regs used in _led_display2: [wreg+status,2+status,0]
  6827                           ;led_display2@value2 stored from wreg
  6828  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  6829  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  6830  15F9  00D3               	movwf	led_display2@value2
  6831                           
  6832                           ;PR28.c: 724: if((value2&0b00000001)==1) RA5=1;
  6833  15FA  1C53               	btfss	led_display2@value2,0
  6834  15FB  2DFE               	goto	l527
  6835  15FC  1685               	bsf	5,5	;volatile
  6836  15FD  2DFF               	goto	l528
  6837  15FE                     l527:	
  6838                           
  6839                           ;PR28.c: 725: else RA5=0;
  6840  15FE  1285               	bcf	5,5	;volatile
  6841  15FF                     l528:	
  6842                           
  6843                           ;PR28.c: 726: RC0=1;
  6844  15FF  1407               	bsf	7,0	;volatile
  6845                           
  6846                           ;PR28.c: 727: RC0=0;
  6847  1600  1007               	bcf	7,0	;volatile
  6848                           
  6849                           ;PR28.c: 729: if(((value2&0b00000010)>>1)==1) RA5=1;
  6850  1601  0853               	movf	led_display2@value2,w
  6851  1602  00D2               	movwf	??_led_display2
  6852  1603  3001               	movlw	1
  6853  1604                     u3555:	
  6854  1604  1003               	clrc
  6855  1605  0CD2               	rrf	??_led_display2,f
  6856  1606  3EFF               	addlw	-1
  6857  1607  1D03               	skipz
  6858  1608  2E04               	goto	u3555
  6859  1609  1C52               	btfss	??_led_display2,0
  6860  160A  2E0D               	goto	l529
  6861  160B  1685               	bsf	5,5	;volatile
  6862  160C  2E0E               	goto	l530
  6863  160D                     l529:	
  6864                           
  6865                           ;PR28.c: 730: else RA5=0;
  6866  160D  1285               	bcf	5,5	;volatile
  6867  160E                     l530:	
  6868                           
  6869                           ;PR28.c: 731: RC0=1;
  6870  160E  1407               	bsf	7,0	;volatile
  6871                           
  6872                           ;PR28.c: 732: RC0=0;
  6873  160F  1007               	bcf	7,0	;volatile
  6874                           
  6875                           ;PR28.c: 734: if(((value2&0b00000100)>>2)==1) RA5=1;
  6876  1610  0853               	movf	led_display2@value2,w
  6877  1611  00D2               	movwf	??_led_display2
  6878  1612  3002               	movlw	2
  6879  1613                     u3575:	
  6880  1613  1003               	clrc
  6881  1614  0CD2               	rrf	??_led_display2,f
  6882  1615  3EFF               	addlw	-1
  6883  1616  1D03               	skipz
  6884  1617  2E13               	goto	u3575
  6885  1618  1C52               	btfss	??_led_display2,0
  6886  1619  2E1C               	goto	l531
  6887  161A  1685               	bsf	5,5	;volatile
  6888  161B  2E1D               	goto	l532
  6889  161C                     l531:	
  6890                           
  6891                           ;PR28.c: 735: else RA5=0;
  6892  161C  1285               	bcf	5,5	;volatile
  6893  161D                     l532:	
  6894                           
  6895                           ;PR28.c: 736: RC0=1;
  6896  161D  1407               	bsf	7,0	;volatile
  6897                           
  6898                           ;PR28.c: 737: RC0=0;
  6899  161E  1007               	bcf	7,0	;volatile
  6900                           
  6901                           ;PR28.c: 739: if(((value2&0b00001000)>>3)==1) RA5=1;
  6902  161F  0853               	movf	led_display2@value2,w
  6903  1620  00D2               	movwf	??_led_display2
  6904  1621  3003               	movlw	3
  6905  1622                     u3595:	
  6906  1622  1003               	clrc
  6907  1623  0CD2               	rrf	??_led_display2,f
  6908  1624  3EFF               	addlw	-1
  6909  1625  1D03               	skipz
  6910  1626  2E22               	goto	u3595
  6911  1627  1C52               	btfss	??_led_display2,0
  6912  1628  2E2B               	goto	l533
  6913  1629  1685               	bsf	5,5	;volatile
  6914  162A  2E2C               	goto	l534
  6915  162B                     l533:	
  6916                           
  6917                           ;PR28.c: 740: else RA5=0;
  6918  162B  1285               	bcf	5,5	;volatile
  6919  162C                     l534:	
  6920                           
  6921                           ;PR28.c: 741: RC0=1;
  6922  162C  1407               	bsf	7,0	;volatile
  6923                           
  6924                           ;PR28.c: 742: RC0=0;
  6925  162D  1007               	bcf	7,0	;volatile
  6926                           
  6927                           ;PR28.c: 744: if(((value2&0b00010000)>>4)==1) RA5=1;
  6928  162E  0853               	movf	led_display2@value2,w
  6929  162F  00D2               	movwf	??_led_display2
  6930  1630  3004               	movlw	4
  6931  1631                     u3615:	
  6932  1631  1003               	clrc
  6933  1632  0CD2               	rrf	??_led_display2,f
  6934  1633  3EFF               	addlw	-1
  6935  1634  1D03               	skipz
  6936  1635  2E31               	goto	u3615
  6937  1636  1C52               	btfss	??_led_display2,0
  6938  1637  2E3A               	goto	l535
  6939  1638  1685               	bsf	5,5	;volatile
  6940  1639  2E3B               	goto	l536
  6941  163A                     l535:	
  6942                           
  6943                           ;PR28.c: 745: else RA5=0;
  6944  163A  1285               	bcf	5,5	;volatile
  6945  163B                     l536:	
  6946                           
  6947                           ;PR28.c: 746: RC0=1;
  6948  163B  1407               	bsf	7,0	;volatile
  6949                           
  6950                           ;PR28.c: 747: RC0=0;
  6951  163C  1007               	bcf	7,0	;volatile
  6952                           
  6953                           ;PR28.c: 749: if(((value2&0b00100000)>>5)==1) RA5=1;
  6954  163D  0853               	movf	led_display2@value2,w
  6955  163E  00D2               	movwf	??_led_display2
  6956  163F  3005               	movlw	5
  6957  1640                     u3635:	
  6958  1640  1003               	clrc
  6959  1641  0CD2               	rrf	??_led_display2,f
  6960  1642  3EFF               	addlw	-1
  6961  1643  1D03               	skipz
  6962  1644  2E40               	goto	u3635
  6963  1645  1C52               	btfss	??_led_display2,0
  6964  1646  2E49               	goto	l537
  6965  1647  1685               	bsf	5,5	;volatile
  6966  1648  2E4A               	goto	l538
  6967  1649                     l537:	
  6968                           
  6969                           ;PR28.c: 750: else RA5=0;
  6970  1649  1285               	bcf	5,5	;volatile
  6971  164A                     l538:	
  6972                           
  6973                           ;PR28.c: 751: RC0=1;
  6974  164A  1407               	bsf	7,0	;volatile
  6975                           
  6976                           ;PR28.c: 752: RC0=0;
  6977  164B  1007               	bcf	7,0	;volatile
  6978                           
  6979                           ;PR28.c: 754: if(((value2&0b01000000)>>6)==1) RA5=1;
  6980  164C  0853               	movf	led_display2@value2,w
  6981  164D  00D2               	movwf	??_led_display2
  6982  164E  3006               	movlw	6
  6983  164F                     u3655:	
  6984  164F  1003               	clrc
  6985  1650  0CD2               	rrf	??_led_display2,f
  6986  1651  3EFF               	addlw	-1
  6987  1652  1D03               	skipz
  6988  1653  2E4F               	goto	u3655
  6989  1654  1C52               	btfss	??_led_display2,0
  6990  1655  2E58               	goto	l539
  6991  1656  1685               	bsf	5,5	;volatile
  6992  1657  2E59               	goto	l540
  6993  1658                     l539:	
  6994                           
  6995                           ;PR28.c: 755: else RA5=0;
  6996  1658  1285               	bcf	5,5	;volatile
  6997  1659                     l540:	
  6998                           
  6999                           ;PR28.c: 756: RC0=1;
  7000  1659  1407               	bsf	7,0	;volatile
  7001                           
  7002                           ;PR28.c: 757: RC0=0;
  7003  165A  1007               	bcf	7,0	;volatile
  7004                           
  7005                           ;PR28.c: 759: if(((value2&0b10000000)>>7)==1) RA5=1;
  7006  165B  0853               	movf	led_display2@value2,w
  7007  165C  00D2               	movwf	??_led_display2
  7008  165D  3007               	movlw	7
  7009  165E                     u3675:	
  7010  165E  1003               	clrc
  7011  165F  0CD2               	rrf	??_led_display2,f
  7012  1660  3EFF               	addlw	-1
  7013  1661  1D03               	skipz
  7014  1662  2E5E               	goto	u3675
  7015  1663  1C52               	btfss	??_led_display2,0
  7016  1664  2E67               	goto	l541
  7017  1665  1685               	bsf	5,5	;volatile
  7018  1666  2E68               	goto	l542
  7019  1667                     l541:	
  7020                           
  7021                           ;PR28.c: 760: else RA5=0;
  7022  1667  1285               	bcf	5,5	;volatile
  7023  1668                     l542:	
  7024                           
  7025                           ;PR28.c: 761: RC0=1;
  7026  1668  1407               	bsf	7,0	;volatile
  7027                           
  7028                           ;PR28.c: 762: RC0=0;
  7029  1669  1007               	bcf	7,0	;volatile
  7030                           
  7031                           ;PR28.c: 764: RE2=1;
  7032  166A  1509               	bsf	9,2	;volatile
  7033                           
  7034                           ;PR28.c: 765: RE2=0;
  7035  166B  1109               	bcf	9,2	;volatile
  7036  166C  0008               	return
  7037  166D                     __end_of_led_display2:	
  7038                           
  7039                           	psect	text25
  7040  1581                     __ptext25:	
  7041 ;; *************** function _led_display1 *****************
  7042 ;; Defined at:
  7043 ;;		line 672 in file "../../Source file/PR28.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  value1          1    wreg     unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  value1          1    1[BANK0 ] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7057 ;;      Params:         0       0       0       0       0
  7058 ;;      Locals:         0       1       0       0       0
  7059 ;;      Temps:          0       1       0       0       0
  7060 ;;      Totals:         0       2       0       0       0
  7061 ;;Total ram usage:        2 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    3
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_DisplayLEDs
  7068 ;;		_draw
  7069 ;;		_led_off
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _led_display1
  7075  1581                     _led_display1:	
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in _led_display1: [wreg+status,2+status,0]
  7079                           ;led_display1@value1 stored from wreg
  7080  1581  1283               	bcf	3,5	;RP0=0, select bank0
  7081  1582  1303               	bcf	3,6	;RP1=0, select bank0
  7082  1583  00D3               	movwf	led_display1@value1
  7083                           
  7084                           ;PR28.c: 674: if((value1&0b00000001)==1) RC1=1;
  7085  1584  1C53               	btfss	led_display1@value1,0
  7086  1585  2D88               	goto	l508
  7087  1586  1487               	bsf	7,1	;volatile
  7088  1587  2D89               	goto	l509
  7089  1588                     l508:	
  7090                           
  7091                           ;PR28.c: 675: else RC1=0;
  7092  1588  1087               	bcf	7,1	;volatile
  7093  1589                     l509:	
  7094                           
  7095                           ;PR28.c: 676: RC3=1;
  7096  1589  1587               	bsf	7,3	;volatile
  7097                           
  7098                           ;PR28.c: 677: RC3=0;
  7099  158A  1187               	bcf	7,3	;volatile
  7100                           
  7101                           ;PR28.c: 679: if(((value1&0b00000010)>>1)==1) RC1=1;
  7102  158B  0853               	movf	led_display1@value1,w
  7103  158C  00D2               	movwf	??_led_display1
  7104  158D  3001               	movlw	1
  7105  158E                     u3405:	
  7106  158E  1003               	clrc
  7107  158F  0CD2               	rrf	??_led_display1,f
  7108  1590  3EFF               	addlw	-1
  7109  1591  1D03               	skipz
  7110  1592  2D8E               	goto	u3405
  7111  1593  1C52               	btfss	??_led_display1,0
  7112  1594  2D97               	goto	l510
  7113  1595  1487               	bsf	7,1	;volatile
  7114  1596  2D98               	goto	l511
  7115  1597                     l510:	
  7116                           
  7117                           ;PR28.c: 680: else RC1=0;
  7118  1597  1087               	bcf	7,1	;volatile
  7119  1598                     l511:	
  7120                           
  7121                           ;PR28.c: 681: RC3=1;
  7122  1598  1587               	bsf	7,3	;volatile
  7123                           
  7124                           ;PR28.c: 682: RC3=0;
  7125  1599  1187               	bcf	7,3	;volatile
  7126                           
  7127                           ;PR28.c: 684: if(((value1&0b00000100)>>2)==1) RC1=1;
  7128  159A  0853               	movf	led_display1@value1,w
  7129  159B  00D2               	movwf	??_led_display1
  7130  159C  3002               	movlw	2
  7131  159D                     u3425:	
  7132  159D  1003               	clrc
  7133  159E  0CD2               	rrf	??_led_display1,f
  7134  159F  3EFF               	addlw	-1
  7135  15A0  1D03               	skipz
  7136  15A1  2D9D               	goto	u3425
  7137  15A2  1C52               	btfss	??_led_display1,0
  7138  15A3  2DA6               	goto	l512
  7139  15A4  1487               	bsf	7,1	;volatile
  7140  15A5  2DA7               	goto	l513
  7141  15A6                     l512:	
  7142                           
  7143                           ;PR28.c: 685: else RC1=0;
  7144  15A6  1087               	bcf	7,1	;volatile
  7145  15A7                     l513:	
  7146                           
  7147                           ;PR28.c: 686: RC3=1;
  7148  15A7  1587               	bsf	7,3	;volatile
  7149                           
  7150                           ;PR28.c: 687: RC3=0;
  7151  15A8  1187               	bcf	7,3	;volatile
  7152                           
  7153                           ;PR28.c: 689: if(((value1&0b00001000)>>3)==1) RC1=1;
  7154  15A9  0853               	movf	led_display1@value1,w
  7155  15AA  00D2               	movwf	??_led_display1
  7156  15AB  3003               	movlw	3
  7157  15AC                     u3445:	
  7158  15AC  1003               	clrc
  7159  15AD  0CD2               	rrf	??_led_display1,f
  7160  15AE  3EFF               	addlw	-1
  7161  15AF  1D03               	skipz
  7162  15B0  2DAC               	goto	u3445
  7163  15B1  1C52               	btfss	??_led_display1,0
  7164  15B2  2DB5               	goto	l514
  7165  15B3  1487               	bsf	7,1	;volatile
  7166  15B4  2DB6               	goto	l515
  7167  15B5                     l514:	
  7168                           
  7169                           ;PR28.c: 690: else RC1=0;
  7170  15B5  1087               	bcf	7,1	;volatile
  7171  15B6                     l515:	
  7172                           
  7173                           ;PR28.c: 691: RC3=1;
  7174  15B6  1587               	bsf	7,3	;volatile
  7175                           
  7176                           ;PR28.c: 692: RC3=0;
  7177  15B7  1187               	bcf	7,3	;volatile
  7178                           
  7179                           ;PR28.c: 694: if(((value1&0b00010000)>>4)==1) RC1=1;
  7180  15B8  0853               	movf	led_display1@value1,w
  7181  15B9  00D2               	movwf	??_led_display1
  7182  15BA  3004               	movlw	4
  7183  15BB                     u3465:	
  7184  15BB  1003               	clrc
  7185  15BC  0CD2               	rrf	??_led_display1,f
  7186  15BD  3EFF               	addlw	-1
  7187  15BE  1D03               	skipz
  7188  15BF  2DBB               	goto	u3465
  7189  15C0  1C52               	btfss	??_led_display1,0
  7190  15C1  2DC4               	goto	l516
  7191  15C2  1487               	bsf	7,1	;volatile
  7192  15C3  2DC5               	goto	l517
  7193  15C4                     l516:	
  7194                           
  7195                           ;PR28.c: 695: else RC1=0;
  7196  15C4  1087               	bcf	7,1	;volatile
  7197  15C5                     l517:	
  7198                           
  7199                           ;PR28.c: 696: RC3=1;
  7200  15C5  1587               	bsf	7,3	;volatile
  7201                           
  7202                           ;PR28.c: 697: RC3=0;
  7203  15C6  1187               	bcf	7,3	;volatile
  7204                           
  7205                           ;PR28.c: 699: if(((value1&0b00100000)>>5)==1) RC1=1;
  7206  15C7  0853               	movf	led_display1@value1,w
  7207  15C8  00D2               	movwf	??_led_display1
  7208  15C9  3005               	movlw	5
  7209  15CA                     u3485:	
  7210  15CA  1003               	clrc
  7211  15CB  0CD2               	rrf	??_led_display1,f
  7212  15CC  3EFF               	addlw	-1
  7213  15CD  1D03               	skipz
  7214  15CE  2DCA               	goto	u3485
  7215  15CF  1C52               	btfss	??_led_display1,0
  7216  15D0  2DD3               	goto	l518
  7217  15D1  1487               	bsf	7,1	;volatile
  7218  15D2  2DD4               	goto	l519
  7219  15D3                     l518:	
  7220                           
  7221                           ;PR28.c: 700: else RC1=0;
  7222  15D3  1087               	bcf	7,1	;volatile
  7223  15D4                     l519:	
  7224                           
  7225                           ;PR28.c: 701: RC3=1;
  7226  15D4  1587               	bsf	7,3	;volatile
  7227                           
  7228                           ;PR28.c: 702: RC3=0;
  7229  15D5  1187               	bcf	7,3	;volatile
  7230                           
  7231                           ;PR28.c: 704: if(((value1&0b01000000)>>6)==1) RC1=1;
  7232  15D6  0853               	movf	led_display1@value1,w
  7233  15D7  00D2               	movwf	??_led_display1
  7234  15D8  3006               	movlw	6
  7235  15D9                     u3505:	
  7236  15D9  1003               	clrc
  7237  15DA  0CD2               	rrf	??_led_display1,f
  7238  15DB  3EFF               	addlw	-1
  7239  15DC  1D03               	skipz
  7240  15DD  2DD9               	goto	u3505
  7241  15DE  1C52               	btfss	??_led_display1,0
  7242  15DF  2DE2               	goto	l520
  7243  15E0  1487               	bsf	7,1	;volatile
  7244  15E1  2DE3               	goto	l521
  7245  15E2                     l520:	
  7246                           
  7247                           ;PR28.c: 705: else RC1=0;
  7248  15E2  1087               	bcf	7,1	;volatile
  7249  15E3                     l521:	
  7250                           
  7251                           ;PR28.c: 706: RC3=1;
  7252  15E3  1587               	bsf	7,3	;volatile
  7253                           
  7254                           ;PR28.c: 707: RC3=0;
  7255  15E4  1187               	bcf	7,3	;volatile
  7256                           
  7257                           ;PR28.c: 709: if(((value1&0b10000000)>>7)==1) RC1=1;
  7258  15E5  0853               	movf	led_display1@value1,w
  7259  15E6  00D2               	movwf	??_led_display1
  7260  15E7  3007               	movlw	7
  7261  15E8                     u3525:	
  7262  15E8  1003               	clrc
  7263  15E9  0CD2               	rrf	??_led_display1,f
  7264  15EA  3EFF               	addlw	-1
  7265  15EB  1D03               	skipz
  7266  15EC  2DE8               	goto	u3525
  7267  15ED  1C52               	btfss	??_led_display1,0
  7268  15EE  2DF1               	goto	l522
  7269  15EF  1487               	bsf	7,1	;volatile
  7270  15F0  2DF2               	goto	l523
  7271  15F1                     l522:	
  7272                           
  7273                           ;PR28.c: 710: else RC1=0;
  7274  15F1  1087               	bcf	7,1	;volatile
  7275  15F2                     l523:	
  7276                           
  7277                           ;PR28.c: 711: RC3=1;
  7278  15F2  1587               	bsf	7,3	;volatile
  7279                           
  7280                           ;PR28.c: 712: RC3=0;
  7281  15F3  1187               	bcf	7,3	;volatile
  7282                           
  7283                           ;PR28.c: 714: RC4=1;
  7284  15F4  1607               	bsf	7,4	;volatile
  7285                           
  7286                           ;PR28.c: 715: RC4=0;
  7287  15F5  1207               	bcf	7,4	;volatile
  7288  15F6  0008               	return
  7289  15F7                     __end_of_led_display1:	
  7290                           
  7291                           	psect	text26
  7292  176B                     __ptext26:	
  7293 ;; *************** function _CapInit *****************
  7294 ;; Defined at:
  7295 ;;		line 235 in file "../../Source file/PR28.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  j               2    9[BANK0 ] int 
  7300 ;;  i               2    7[BANK0 ] int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;		None               void
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7310 ;;      Params:         0       0       0       0       0
  7311 ;;      Locals:         0       4       0       0       0
  7312 ;;      Temps:          0       3       0       0       0
  7313 ;;      Totals:         0       7       0       0       0
  7314 ;;Total ram usage:        7 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    4
  7317 ;; This function calls:
  7318 ;;		___bmul
  7319 ;; This function is called by:
  7320 ;;		_Init
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           
  7325                           ;psect for function _CapInit
  7326  176B                     _CapInit:	
  7327                           
  7328                           ;PR28.c: 239: for (index=0; index<9; index++) {
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in _CapInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7332  176B  1283               	bcf	3,5	;RP0=0, select bank0
  7333  176C  1303               	bcf	3,6	;RP1=0, select bank0
  7334  176D  01D0               	clrf	_index
  7335  176E  3009               	movlw	9
  7336  176F  0250               	subwf	_index,w
  7337  1770  1803               	btfsc	3,0
  7338  1771  2F8B               	goto	l3555
  7339  1772                     l3549:	
  7340                           
  7341                           ;PR28.c: 240: average[index] = 0;
  7342  1772  0850               	movf	_index,w
  7343  1773  00D6               	movwf	??_CapInit
  7344  1774  0756               	addwf	??_CapInit,w
  7345  1775  3E20               	addlw	(low (_average| 0))& (0+255)
  7346  1776  0084               	movwf	4
  7347  1777  1383               	bcf	3,7	;select IRP bank0
  7348  1778  0180               	clrf	0
  7349  1779  0A84               	incf	4,f
  7350  177A  0180               	clrf	0
  7351                           
  7352                           ;PR28.c: 241: reading[index] = 0;
  7353  177B  0850               	movf	_index,w
  7354  177C  00D6               	movwf	??_CapInit
  7355  177D  0756               	addwf	??_CapInit,w
  7356  177E  3EA0               	addlw	(low (_reading| 0))& (0+255)
  7357  177F  0084               	movwf	4
  7358  1780  0180               	clrf	0
  7359  1781  0A84               	incf	4,f
  7360  1782  0180               	clrf	0
  7361  1783  3001               	movlw	1
  7362  1784  00D6               	movwf	??_CapInit
  7363  1785  0856               	movf	??_CapInit,w
  7364  1786  07D0               	addwf	_index,f
  7365  1787  3009               	movlw	9
  7366  1788  0250               	subwf	_index,w
  7367  1789  1C03               	skipc
  7368  178A  2F72               	goto	l3549
  7369  178B                     l3555:	
  7370                           
  7371                           ;PR28.c: 242: }
  7372                           ;PR28.c: 243: for(int i=0; i<3; i++){
  7373  178B  01D9               	clrf	CapInit@i
  7374  178C  01DA               	clrf	CapInit@i+1
  7375  178D  085A               	movf	CapInit@i+1,w
  7376  178E  3A80               	xorlw	128
  7377  178F  00FF               	movwf	127
  7378  1790  3080               	movlw	128
  7379  1791  027F               	subwf	127,w
  7380  1792  1D03               	skipz
  7381  1793  2F96               	goto	u6425
  7382  1794  3003               	movlw	3
  7383  1795  0259               	subwf	CapInit@i,w
  7384  1796                     u6425:	
  7385  1796  1803               	btfsc	3,0
  7386  1797  2FE3               	goto	l3577
  7387  1798                     l3561:	
  7388                           
  7389                           ;PR28.c: 244: for(int j=0; j<3; j++){
  7390  1798  1283               	bcf	3,5	;RP0=0, select bank0
  7391  1799  1303               	bcf	3,6	;RP1=0, select bank0
  7392  179A  01DB               	clrf	CapInit@j
  7393  179B  01DC               	clrf	CapInit@j+1
  7394  179C  085C               	movf	CapInit@j+1,w
  7395  179D  3A80               	xorlw	128
  7396  179E  00FF               	movwf	127
  7397  179F  3080               	movlw	128
  7398  17A0  027F               	subwf	127,w
  7399  17A1  1D03               	skipz
  7400  17A2  2FA5               	goto	u6435
  7401  17A3  3003               	movlw	3
  7402  17A4  025B               	subwf	CapInit@j,w
  7403  17A5                     u6435:	
  7404  17A5  1803               	btfsc	3,0
  7405  17A6  2FD0               	goto	l3573
  7406  17A7                     l3567:	
  7407                           
  7408                           ;PR28.c: 245: matrix[i][j] = ' ';
  7409  17A7  3020               	movlw	32
  7410  17A8  1283               	bcf	3,5	;RP0=0, select bank0
  7411  17A9  1303               	bcf	3,6	;RP1=0, select bank0
  7412  17AA  00D6               	movwf	??_CapInit
  7413  17AB  3003               	movlw	3
  7414  17AC  00D7               	movwf	??_CapInit+1
  7415  17AD  0857               	movf	??_CapInit+1,w
  7416  17AE  00D2               	movwf	___bmul@multiplicand
  7417  17AF  0859               	movf	CapInit@i,w
  7418  17B0  160A  118A  237C  160A  118A  	fcall	___bmul
  7419  17B5  3E3B               	addlw	(low (_matrix| 0))& (0+255)
  7420  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  7421  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  7422  17B8  075B               	addwf	CapInit@j,w
  7423  17B9  00D8               	movwf	??_CapInit+2
  7424  17BA  0858               	movf	??_CapInit+2,w
  7425  17BB  0084               	movwf	4
  7426  17BC  0856               	movf	??_CapInit,w
  7427  17BD  1383               	bcf	3,7	;select IRP bank0
  7428  17BE  0080               	movwf	0
  7429  17BF  3001               	movlw	1
  7430  17C0  07DB               	addwf	CapInit@j,f
  7431  17C1  1803               	skipnc
  7432  17C2  0ADC               	incf	CapInit@j+1,f
  7433  17C3  3000               	movlw	0
  7434  17C4  07DC               	addwf	CapInit@j+1,f
  7435  17C5  085C               	movf	CapInit@j+1,w
  7436  17C6  3A80               	xorlw	128
  7437  17C7  00FF               	movwf	127
  7438  17C8  3080               	movlw	128
  7439  17C9  027F               	subwf	127,w
  7440  17CA  1D03               	skipz
  7441  17CB  2FCE               	goto	u6445
  7442  17CC  3003               	movlw	3
  7443  17CD  025B               	subwf	CapInit@j,w
  7444  17CE                     u6445:	
  7445  17CE  1C03               	skipc
  7446  17CF  2FA7               	goto	l3567
  7447  17D0                     l3573:	
  7448  17D0  3001               	movlw	1
  7449  17D1  1283               	bcf	3,5	;RP0=0, select bank0
  7450  17D2  1303               	bcf	3,6	;RP1=0, select bank0
  7451  17D3  07D9               	addwf	CapInit@i,f
  7452  17D4  1803               	skipnc
  7453  17D5  0ADA               	incf	CapInit@i+1,f
  7454  17D6  3000               	movlw	0
  7455  17D7  07DA               	addwf	CapInit@i+1,f
  7456  17D8  085A               	movf	CapInit@i+1,w
  7457  17D9  3A80               	xorlw	128
  7458  17DA  00FF               	movwf	127
  7459  17DB  3080               	movlw	128
  7460  17DC  027F               	subwf	127,w
  7461  17DD  1D03               	skipz
  7462  17DE  2FE1               	goto	u6455
  7463  17DF  3003               	movlw	3
  7464  17E0  0259               	subwf	CapInit@i,w
  7465  17E1                     u6455:	
  7466  17E1  1C03               	skipc
  7467  17E2  2F98               	goto	l3561
  7468  17E3                     l3577:	
  7469                           
  7470                           ;PR28.c: 246: }
  7471                           ;PR28.c: 247: }
  7472                           ;PR28.c: 253: T2CON = 0b01110110;
  7473  17E3  3076               	movlw	118
  7474  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  7475  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  7476  17E6  0092               	movwf	18	;volatile
  7477                           
  7478                           ;PR28.c: 254: PR2 = 0xB4;
  7479  17E7  30B4               	movlw	180
  7480  17E8  1683               	bsf	3,5	;RP0=1, select bank1
  7481  17E9  1303               	bcf	3,6	;RP1=0, select bank1
  7482  17EA  0092               	movwf	18	;volatile
  7483                           
  7484                           ;PR28.c: 255: TMR2IF = 0;
  7485  17EB  1283               	bcf	3,5	;RP0=0, select bank0
  7486  17EC  1303               	bcf	3,6	;RP1=0, select bank0
  7487  17ED  108C               	bcf	12,1	;volatile
  7488                           
  7489                           ;PR28.c: 256: TMR2IE = 1;
  7490  17EE  1683               	bsf	3,5	;RP0=1, select bank1
  7491  17EF  1303               	bcf	3,6	;RP1=0, select bank1
  7492  17F0  148C               	bsf	12,1	;volatile
  7493                           
  7494                           ;PR28.c: 257: T1CON = 0b11000101;
  7495  17F1  30C5               	movlw	197
  7496  17F2  1283               	bcf	3,5	;RP0=0, select bank0
  7497  17F3  1303               	bcf	3,6	;RP1=0, select bank0
  7498  17F4  0090               	movwf	16	;volatile
  7499                           
  7500                           ;PR28.c: 258: T1GCON = 0b11100010;
  7501  17F5  30E2               	movlw	226
  7502  17F6  1683               	bsf	3,5	;RP0=1, select bank1
  7503  17F7  1303               	bcf	3,6	;RP1=0, select bank1
  7504  17F8  008F               	movwf	15	;volatile
  7505                           
  7506                           ;PR28.c: 259: TMR1GIF = 0;
  7507  17F9  1283               	bcf	3,5	;RP0=0, select bank0
  7508  17FA  1303               	bcf	3,6	;RP1=0, select bank0
  7509  17FB  138C               	bcf	12,7	;volatile
  7510                           
  7511                           ;PR28.c: 260: TMR1GIE = 1;
  7512  17FC  1683               	bsf	3,5	;RP0=1, select bank1
  7513  17FD  1303               	bcf	3,6	;RP1=0, select bank1
  7514  17FE  178C               	bsf	12,7	;volatile
  7515  17FF  0008               	return
  7516  1800                     __end_of_CapInit:	
  7517                           
  7518                           	psect	text27
  7519  137C                     __ptext27:	
  7520 ;; *************** function ___bmul *****************
  7521 ;; Defined at:
  7522 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul8.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  multiplier      1    wreg     unsigned char 
  7525 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7528 ;;  product         1    2[BANK0 ] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      unsigned char 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7538 ;;      Params:         0       1       0       0       0
  7539 ;;      Locals:         0       2       0       0       0
  7540 ;;      Temps:          0       1       0       0       0
  7541 ;;      Totals:         0       4       0       0       0
  7542 ;;Total ram usage:        4 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    3
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_CapInit
  7549 ;;		_winlose
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function ___bmul
  7555  137C                     ___bmul:	
  7556                           
  7557                           ;incstack = 0
  7558                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7559                           ;___bmul@multiplier stored from wreg
  7560  137C  1283               	bcf	3,5	;RP0=0, select bank0
  7561  137D  1303               	bcf	3,6	;RP1=0, select bank0
  7562  137E  00D5               	movwf	___bmul@multiplier
  7563  137F  01D4               	clrf	___bmul@product
  7564  1380                     l3433:	
  7565  1380  1C55               	btfss	___bmul@multiplier,0
  7566  1381  2B86               	goto	l3437
  7567  1382  0852               	movf	___bmul@multiplicand,w
  7568  1383  00D3               	movwf	??___bmul
  7569  1384  0853               	movf	??___bmul,w
  7570  1385  07D4               	addwf	___bmul@product,f
  7571  1386                     l3437:	
  7572  1386  1003               	clrc
  7573  1387  0DD2               	rlf	___bmul@multiplicand,f
  7574  1388  1003               	clrc
  7575  1389  0CD5               	rrf	___bmul@multiplier,f
  7576  138A  0855               	movf	___bmul@multiplier,w
  7577  138B  1D03               	btfss	3,2
  7578  138C  2B80               	goto	l3433
  7579  138D  0854               	movf	___bmul@product,w
  7580  138E  0008               	return
  7581  138F                     __end_of___bmul:	
  7582                           
  7583                           	psect	text28
  7584  13F9                     __ptext28:	
  7585 ;; *************** function _isr *****************
  7586 ;; Defined at:
  7587 ;;		line 271 in file "../../Source file/PR28.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;		None               void
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7601 ;;      Params:         0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0
  7603 ;;      Temps:          4       0       0       0       0
  7604 ;;      Totals:         4       0       0       0       0
  7605 ;;Total ram usage:        4 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    2
  7608 ;; This function calls:
  7609 ;;		_GetReading
  7610 ;; This function is called by:
  7611 ;;		Interrupt level 1
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _isr
  7617  13F9                     _isr:	
  7618  13F9                     i1l4189:	
  7619                           ;PR28.c: 274: while (TMR1GIF )
  7620                           
  7621  13F9  1283               	bcf	3,5	;RP0=0, select bank0
  7622  13FA  1303               	bcf	3,6	;RP1=0, select bank0
  7623  13FB  1F8C               	btfss	12,7	;volatile
  7624  13FC  2C06               	goto	i1l215
  7625                           
  7626                           ;PR28.c: 275: {
  7627                           ;PR28.c: 277: TMR2ON =0;
  7628  13FD  1112               	bcf	18,2	;volatile
  7629                           
  7630                           ;PR28.c: 278: TMR1ON = 0;
  7631  13FE  1010               	bcf	16,0	;volatile
  7632                           
  7633                           ;PR28.c: 279: TMR1GIF = 0;
  7634  13FF  138C               	bcf	12,7	;volatile
  7635                           
  7636                           ;PR28.c: 281: GetReading();
  7637  1400  120A  158A  21D2  160A  118A  	fcall	_GetReading
  7638  1405  2BF9               	goto	i1l4189
  7639  1406                     i1l215:	
  7640  1406  087B               	movf	??_isr+3,w
  7641  1407  00FF               	movwf	127
  7642  1408  087A               	movf	??_isr+2,w
  7643  1409  008A               	movwf	10
  7644  140A  0879               	movf	??_isr+1,w
  7645  140B  0084               	movwf	4
  7646  140C  0E78               	swapf	??_isr^(0+-128),w
  7647  140D  0083               	movwf	3
  7648  140E  0EFE               	swapf	126,f
  7649  140F  0E7E               	swapf	126,w
  7650  1410  0009               	retfie
  7651  1411                     __end_of_isr:	
  7652                           
  7653                           	psect	intentry
  7654  0004                     __pintentry:	
  7655                           ;incstack = 0
  7656                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7657                           
  7658  0004                     interrupt_function:	
  7659  007E                     saved_w	set	btemp
  7660  0004  00FE               	movwf	btemp
  7661  0005  0E03               	swapf	3,w
  7662  0006  00F8               	movwf	??_isr
  7663  0007  0804               	movf	4,w
  7664  0008  00F9               	movwf	??_isr+1
  7665  0009  080A               	movf	10,w
  7666  000A  00FA               	movwf	??_isr+2
  7667  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7668  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7669  000D  087F               	movf	btemp+1,w
  7670  000E  00FB               	movwf	??_isr+3
  7671  000F  160A  118A  2BF9   	ljmp	_isr
  7672                           
  7673                           	psect	text29
  7674  09D2                     __ptext29:	
  7675 ;; *************** function _GetReading *****************
  7676 ;; Defined at:
  7677 ;;		line 489 in file "../../Source file/PR28.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;		None               void
  7684 ;; Registers used:
  7685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7691 ;;      Params:         0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0
  7693 ;;      Temps:          7       0       0       0       0
  7694 ;;      Totals:         7       0       0       0       0
  7695 ;;Total ram usage:        7 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    1
  7698 ;; This function calls:
  7699 ;;		_SetNextChannel
  7700 ;;		i1_RestartTimer1
  7701 ;; This function is called by:
  7702 ;;		_isr
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           
  7707                           ;psect for function _GetReading
  7708  09D2                     _GetReading:	
  7709                           
  7710                           ;PR28.c: 490: bigval = TMR1L + (unsigned int)(TMR1H << 8);
  7711                           
  7712                           ;incstack = 0
  7713                           ; Regs used in _GetReading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7714  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  7715  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  7716  09D4  080F               	movf	15,w	;volatile
  7717  09D5  00FD               	movwf	_bigval+1
  7718  09D6  080E               	movf	14,w	;volatile
  7719  09D7  00FC               	movwf	_bigval
  7720                           
  7721                           ;PR28.c: 491: bigval = bigval * 16;
  7722  09D8  087D               	movf	_bigval+1,w
  7723  09D9  00F2               	movwf	??_GetReading+1
  7724  09DA  087C               	movf	_bigval,w
  7725  09DB  00F1               	movwf	??_GetReading
  7726  09DC  0EF1               	swapf	??_GetReading,f
  7727  09DD  0EF2               	swapf	??_GetReading+1,f
  7728  09DE  30F0               	movlw	240
  7729  09DF  05F2               	andwf	??_GetReading+1,f
  7730  09E0  0871               	movf	??_GetReading,w
  7731  09E1  390F               	andlw	15
  7732  09E2  04F2               	iorwf	??_GetReading+1,f
  7733  09E3  30F0               	movlw	240
  7734  09E4  05F1               	andwf	??_GetReading,f
  7735  09E5  0871               	movf	??_GetReading,w
  7736  09E6  00FC               	movwf	_bigval
  7737  09E7  0872               	movf	??_GetReading+1,w
  7738  09E8  00FD               	movwf	_bigval+1
  7739                           
  7740                           ;PR28.c: 492: reading[index] = bigval;
  7741  09E9  0850               	movf	_index,w
  7742  09EA  00F1               	movwf	??_GetReading
  7743  09EB  0771               	addwf	??_GetReading,w
  7744  09EC  3EA0               	addlw	(low (_reading| 0))& (0+255)
  7745  09ED  0084               	movwf	4
  7746  09EE  087C               	movf	_bigval,w
  7747  09EF  1383               	bcf	3,7	;select IRP bank1
  7748  09F0  0080               	movwf	0
  7749  09F1  0A84               	incf	4,f
  7750  09F2  087D               	movf	_bigval+1,w
  7751  09F3  0080               	movwf	0
  7752                           
  7753                           ;PR28.c: 493: smallavg = average[index] / 16;
  7754  09F4  0850               	movf	_index,w
  7755  09F5  00F1               	movwf	??_GetReading
  7756  09F6  0771               	addwf	??_GetReading,w
  7757  09F7  3E20               	addlw	(low (_average| 0))& (0+255)
  7758  09F8  0084               	movwf	4
  7759  09F9  0800               	movf	0,w
  7760  09FA  00F2               	movwf	??_GetReading+1
  7761  09FB  0A84               	incf	4,f
  7762  09FC  0800               	movf	0,w
  7763  09FD  00F3               	movwf	??_GetReading+2
  7764  09FE  0E72               	swapf	??_GetReading+1,w
  7765  09FF  390F               	andlw	15
  7766  0A00  00C7               	movwf	_smallavg
  7767  0A01  0E73               	swapf	??_GetReading+2,w
  7768  0A02  39F0               	andlw	240
  7769  0A03  04C7               	iorwf	_smallavg,f
  7770  0A04  0E73               	swapf	??_GetReading+2,w
  7771  0A05  390F               	andlw	15
  7772  0A06  00C8               	movwf	_smallavg+1
  7773                           
  7774                           ;PR28.c: 494: threshold4 = average[index] >> 2;
  7775  0A07  0850               	movf	_index,w
  7776  0A08  00F1               	movwf	??_GetReading
  7777  0A09  0771               	addwf	??_GetReading,w
  7778  0A0A  3E20               	addlw	(low (_average| 0))& (0+255)
  7779  0A0B  0084               	movwf	4
  7780  0A0C  0800               	movf	0,w
  7781  0A0D  00F2               	movwf	??_GetReading+1
  7782  0A0E  0A84               	incf	4,f
  7783  0A0F  0800               	movf	0,w
  7784  0A10  00F3               	movwf	??_GetReading+2
  7785  0A11  1003               	clrc
  7786  0A12  0CF3               	rrf	??_GetReading+2,f
  7787  0A13  0CF2               	rrf	??_GetReading+1,f
  7788  0A14  1003               	clrc
  7789  0A15  0CF3               	rrf	??_GetReading+2,f
  7790  0A16  0CF2               	rrf	??_GetReading+1,f
  7791  0A17  0872               	movf	??_GetReading+1,w
  7792  0A18  00CB               	movwf	_threshold4
  7793  0A19  0873               	movf	??_GetReading+2,w
  7794  0A1A  00CC               	movwf	_threshold4+1
  7795                           
  7796                           ;PR28.c: 495: threshold = threshold4;
  7797  0A1B  084C               	movf	_threshold4+1,w
  7798  0A1C  00CA               	movwf	_threshold+1
  7799  0A1D  084B               	movf	_threshold4,w
  7800  0A1E  00C9               	movwf	_threshold
  7801                           
  7802                           ;PR28.c: 496: if (bigval < average[index] - threshold)
  7803  0A1F  0850               	movf	_index,w
  7804  0A20  00F1               	movwf	??_GetReading
  7805  0A21  0771               	addwf	??_GetReading,w
  7806  0A22  3E20               	addlw	(low (_average| 0))& (0+255)
  7807  0A23  0084               	movwf	4
  7808  0A24  0800               	movf	0,w
  7809  0A25  00F2               	movwf	??_GetReading+1
  7810  0A26  0A84               	incf	4,f
  7811  0A27  0800               	movf	0,w
  7812  0A28  00F3               	movwf	??_GetReading+2
  7813  0A29  0949               	comf	_threshold,w
  7814  0A2A  00F4               	movwf	??_GetReading+3
  7815  0A2B  094A               	comf	_threshold+1,w
  7816  0A2C  00F5               	movwf	??_GetReading+4
  7817  0A2D  0AF4               	incf	??_GetReading+3,f
  7818  0A2E  1903               	skipnz
  7819  0A2F  0AF5               	incf	??_GetReading+4,f
  7820  0A30  0872               	movf	??_GetReading+1,w
  7821  0A31  0774               	addwf	??_GetReading+3,w
  7822  0A32  00F6               	movwf	??_GetReading+5
  7823  0A33  0873               	movf	??_GetReading+2,w
  7824  0A34  1803               	skipnc
  7825  0A35  0A73               	incf	??_GetReading+2,w
  7826  0A36  0775               	addwf	??_GetReading+4,w
  7827  0A37  00F7               	movwf	??_GetReading+6
  7828  0A38  0877               	movf	??_GetReading+6,w
  7829  0A39  027D               	subwf	_bigval+1,w
  7830  0A3A  1D03               	skipz
  7831  0A3B  2A3E               	goto	u667_25
  7832  0A3C  0876               	movf	??_GetReading+5,w
  7833  0A3D  027C               	subwf	_bigval,w
  7834  0A3E                     u667_25:	
  7835  0A3E  1C03               	btfss	3,0
  7836  0A3F  2A5C               	goto	i1l4053
  7837  0A40  2A8C               	goto	i1l4075
  7838  0A41                     i1l348:	
  7839                           ;PR28.c: 499: {
  7840                           ;PR28.c: 500: case 0: Buttons.BTN0 = 1; break;
  7841                           
  7842                           ;PR28.c: 497: {
  7843                           ;PR28.c: 498: switch (index)
  7844                           
  7845  0A41  01B2               	clrf	_Buttons
  7846  0A42  0AB2               	incf	_Buttons,f
  7847  0A43  2AD4               	goto	i1l4079
  7848  0A44                     i1l350:	
  7849                           ;PR28.c: 501: case 1: Buttons.BTN1 = 1; break;
  7850                           
  7851  0A44  01B3               	clrf	_Buttons+1
  7852  0A45  0AB3               	incf	_Buttons+1,f
  7853  0A46  2AD4               	goto	i1l4079
  7854  0A47                     i1l351:	
  7855                           ;PR28.c: 502: case 2: Buttons.BTN2 = 1; break;
  7856                           
  7857  0A47  01B4               	clrf	_Buttons+2
  7858  0A48  0AB4               	incf	_Buttons+2,f
  7859  0A49  2AD4               	goto	i1l4079
  7860  0A4A                     i1l352:	
  7861                           ;PR28.c: 503: case 3: Buttons.BTN3 = 1; break;
  7862                           
  7863  0A4A  01B5               	clrf	_Buttons+3
  7864  0A4B  0AB5               	incf	_Buttons+3,f
  7865  0A4C  2AD4               	goto	i1l4079
  7866  0A4D                     i1l353:	
  7867                           ;PR28.c: 504: case 4: Buttons.BTN4 = 1; break;
  7868                           
  7869  0A4D  01B6               	clrf	_Buttons+4
  7870  0A4E  0AB6               	incf	_Buttons+4,f
  7871  0A4F  2AD4               	goto	i1l4079
  7872  0A50                     i1l354:	
  7873                           ;PR28.c: 505: case 5: Buttons.BTN5 = 1; break;
  7874                           
  7875  0A50  01B7               	clrf	_Buttons+5
  7876  0A51  0AB7               	incf	_Buttons+5,f
  7877  0A52  2AD4               	goto	i1l4079
  7878  0A53                     i1l355:	
  7879                           ;PR28.c: 506: case 6: Buttons.BTN6 = 1; break;
  7880                           
  7881  0A53  01B8               	clrf	_Buttons+6
  7882  0A54  0AB8               	incf	_Buttons+6,f
  7883  0A55  2AD4               	goto	i1l4079
  7884  0A56                     i1l356:	
  7885                           ;PR28.c: 507: case 7: Buttons.BTN7 = 1; break;
  7886                           
  7887  0A56  01B9               	clrf	_Buttons+7
  7888  0A57  0AB9               	incf	_Buttons+7,f
  7889  0A58  2AD4               	goto	i1l4079
  7890  0A59                     i1l357:	
  7891                           ;PR28.c: 508: case 8: Buttons.BTN8 = 1; break;
  7892                           
  7893  0A59  01BA               	clrf	_Buttons+8
  7894  0A5A  0ABA               	incf	_Buttons+8,f
  7895                           
  7896                           ;PR28.c: 511: }
  7897                           
  7898                           ;PR28.c: 510: default: break;
  7899  0A5B  2AD4               	goto	i1l4079
  7900  0A5C                     i1l4053:	
  7901  0A5C  0850               	movf	_index,w
  7902                           
  7903                           ; Switch size 1, requested type "space"
  7904                           ; Number of cases is 9, Range of values is 0 to 8
  7905                           ; switch strategies available:
  7906                           ; Name         Instructions Cycles
  7907                           ; simple_byte           28    15 (average)
  7908                           ; direct_byte           35     8 (fixed)
  7909                           ; jumptable            260     6 (fixed)
  7910                           ;	Chosen strategy is simple_byte
  7911  0A5D  3A00               	xorlw	0	; case 0
  7912  0A5E  1903               	skipnz
  7913  0A5F  2A41               	goto	i1l348
  7914  0A60  3A01               	xorlw	1	; case 1
  7915  0A61  1903               	skipnz
  7916  0A62  2A44               	goto	i1l350
  7917  0A63  3A03               	xorlw	3	; case 2
  7918  0A64  1903               	skipnz
  7919  0A65  2A47               	goto	i1l351
  7920  0A66  3A01               	xorlw	1	; case 3
  7921  0A67  1903               	skipnz
  7922  0A68  2A4A               	goto	i1l352
  7923  0A69  3A07               	xorlw	7	; case 4
  7924  0A6A  1903               	skipnz
  7925  0A6B  2A4D               	goto	i1l353
  7926  0A6C  3A01               	xorlw	1	; case 5
  7927  0A6D  1903               	skipnz
  7928  0A6E  2A50               	goto	i1l354
  7929  0A6F  3A03               	xorlw	3	; case 6
  7930  0A70  1903               	skipnz
  7931  0A71  2A53               	goto	i1l355
  7932  0A72  3A01               	xorlw	1	; case 7
  7933  0A73  1903               	skipnz
  7934  0A74  2A56               	goto	i1l356
  7935  0A75  3A0F               	xorlw	15	; case 8
  7936  0A76  1903               	skipnz
  7937  0A77  2A59               	goto	i1l357
  7938  0A78  2AD4               	goto	i1l4079
  7939                           
  7940                           ;PR28.c: 512: }
  7941  0A79  2AD4               	goto	i1l4079
  7942  0A7A                     i1l4055:	
  7943                           ;PR28.c: 517: {
  7944                           ;PR28.c: 518: case 0: Buttons.BTN0 = 0; break;
  7945                           
  7946                           ;PR28.c: 513: else
  7947                           ;PR28.c: 514: {
  7948                           ;PR28.c: 516: switch (index)
  7949                           
  7950  0A7A  01B2               	clrf	_Buttons
  7951  0A7B  2AA9               	goto	i1l4077
  7952  0A7C                     i1l4057:	
  7953                           ;PR28.c: 519: case 1: Buttons.BTN1 = 0; break;
  7954                           
  7955  0A7C  01B3               	clrf	_Buttons+1
  7956  0A7D  2AA9               	goto	i1l4077
  7957  0A7E                     i1l4059:	
  7958                           ;PR28.c: 520: case 2: Buttons.BTN2 = 0; break;
  7959                           
  7960  0A7E  01B4               	clrf	_Buttons+2
  7961  0A7F  2AA9               	goto	i1l4077
  7962  0A80                     i1l4061:	
  7963                           ;PR28.c: 521: case 3: Buttons.BTN3 = 0; break;
  7964                           
  7965  0A80  01B5               	clrf	_Buttons+3
  7966  0A81  2AA9               	goto	i1l4077
  7967  0A82                     i1l4063:	
  7968                           ;PR28.c: 522: case 4: Buttons.BTN4 = 0; break;
  7969                           
  7970  0A82  01B6               	clrf	_Buttons+4
  7971  0A83  2AA9               	goto	i1l4077
  7972  0A84                     i1l4065:	
  7973                           ;PR28.c: 523: case 5: Buttons.BTN5 = 0; break;
  7974                           
  7975  0A84  01B7               	clrf	_Buttons+5
  7976  0A85  2AA9               	goto	i1l4077
  7977  0A86                     i1l4067:	
  7978                           ;PR28.c: 524: case 6: Buttons.BTN6 = 0; break;
  7979                           
  7980  0A86  01B8               	clrf	_Buttons+6
  7981  0A87  2AA9               	goto	i1l4077
  7982  0A88                     i1l4069:	
  7983                           ;PR28.c: 525: case 7: Buttons.BTN7 = 0; break;
  7984                           
  7985  0A88  01B9               	clrf	_Buttons+7
  7986  0A89  2AA9               	goto	i1l4077
  7987  0A8A                     i1l4071:	
  7988                           ;PR28.c: 526: case 8: Buttons.BTN8 = 0; break;
  7989                           
  7990  0A8A  01BA               	clrf	_Buttons+8
  7991                           
  7992                           ;PR28.c: 529: }
  7993                           
  7994                           ;PR28.c: 528: default: break;
  7995  0A8B  2AA9               	goto	i1l4077
  7996  0A8C                     i1l4075:	
  7997  0A8C  0850               	movf	_index,w
  7998                           
  7999                           ; Switch size 1, requested type "space"
  8000                           ; Number of cases is 9, Range of values is 0 to 8
  8001                           ; switch strategies available:
  8002                           ; Name         Instructions Cycles
  8003                           ; simple_byte           28    15 (average)
  8004                           ; direct_byte           35     8 (fixed)
  8005                           ; jumptable            260     6 (fixed)
  8006                           ;	Chosen strategy is simple_byte
  8007  0A8D  3A00               	xorlw	0	; case 0
  8008  0A8E  1903               	skipnz
  8009  0A8F  2A7A               	goto	i1l4055
  8010  0A90  3A01               	xorlw	1	; case 1
  8011  0A91  1903               	skipnz
  8012  0A92  2A7C               	goto	i1l4057
  8013  0A93  3A03               	xorlw	3	; case 2
  8014  0A94  1903               	skipnz
  8015  0A95  2A7E               	goto	i1l4059
  8016  0A96  3A01               	xorlw	1	; case 3
  8017  0A97  1903               	skipnz
  8018  0A98  2A80               	goto	i1l4061
  8019  0A99  3A07               	xorlw	7	; case 4
  8020  0A9A  1903               	skipnz
  8021  0A9B  2A82               	goto	i1l4063
  8022  0A9C  3A01               	xorlw	1	; case 5
  8023  0A9D  1903               	skipnz
  8024  0A9E  2A84               	goto	i1l4065
  8025  0A9F  3A03               	xorlw	3	; case 6
  8026  0AA0  1903               	skipnz
  8027  0AA1  2A86               	goto	i1l4067
  8028  0AA2  3A01               	xorlw	1	; case 7
  8029  0AA3  1903               	skipnz
  8030  0AA4  2A88               	goto	i1l4069
  8031  0AA5  3A0F               	xorlw	15	; case 8
  8032  0AA6  1903               	skipnz
  8033  0AA7  2A8A               	goto	i1l4071
  8034  0AA8  2AA9               	goto	i1l4077
  8035  0AA9                     i1l4077:	
  8036                           
  8037                           ;PR28.c: 532: average[index] += bigval/16 - smallavg;
  8038  0AA9  0947               	comf	_smallavg,w
  8039  0AAA  00F1               	movwf	??_GetReading
  8040  0AAB  0948               	comf	_smallavg+1,w
  8041  0AAC  00F2               	movwf	??_GetReading+1
  8042  0AAD  0AF1               	incf	??_GetReading,f
  8043  0AAE  1903               	skipnz
  8044  0AAF  0AF2               	incf	??_GetReading+1,f
  8045  0AB0  087D               	movf	_bigval+1,w
  8046  0AB1  00F4               	movwf	??_GetReading+3
  8047  0AB2  087C               	movf	_bigval,w
  8048  0AB3  00F3               	movwf	??_GetReading+2
  8049  0AB4  3004               	movlw	4
  8050  0AB5                     u668_25:	
  8051  0AB5  1003               	clrc
  8052  0AB6  0CF4               	rrf	??_GetReading+3,f
  8053  0AB7  0CF3               	rrf	??_GetReading+2,f
  8054  0AB8  3EFF               	addlw	-1
  8055  0AB9  1D03               	skipz
  8056  0ABA  2AB5               	goto	u668_25
  8057  0ABB  0871               	movf	??_GetReading,w
  8058  0ABC  0773               	addwf	??_GetReading+2,w
  8059  0ABD  00F5               	movwf	??_GetReading+4
  8060  0ABE  0872               	movf	??_GetReading+1,w
  8061  0ABF  1803               	skipnc
  8062  0AC0  0A72               	incf	??_GetReading+1,w
  8063  0AC1  0774               	addwf	??_GetReading+3,w
  8064  0AC2  00F6               	movwf	??_GetReading+5
  8065  0AC3  0850               	movf	_index,w
  8066  0AC4  00F7               	movwf	??_GetReading+6
  8067  0AC5  0777               	addwf	??_GetReading+6,w
  8068  0AC6  3E20               	addlw	(low (_average| 0))& (0+255)
  8069  0AC7  0084               	movwf	4
  8070  0AC8  0875               	movf	??_GetReading+4,w
  8071  0AC9  1383               	bcf	3,7	;select IRP bank0
  8072  0ACA  0780               	addwf	0,f
  8073  0ACB  0F84               	incfsz	4,f
  8074  0ACC  0800               	movf	0,w
  8075  0ACD  1803               	skipnc
  8076  0ACE  0A00               	incf	0,w
  8077  0ACF  00FF               	movwf	127
  8078  0AD0  0876               	movf	??_GetReading+5,w
  8079  0AD1  077F               	addwf	127,w
  8080  0AD2  0080               	movwf	0
  8081  0AD3  0384               	decf	4,f
  8082  0AD4                     i1l4079:	
  8083                           
  8084                           ;PR28.c: 533: }
  8085                           ;PR28.c: 534: SetNextChannel();
  8086  0AD4  160A  118A  24C4  120A  158A  	fcall	_SetNextChannel
  8087                           
  8088                           ;PR28.c: 535: RestartTimer1();
  8089  0AD9  160A  118A  235F   	fcall	i1_RestartTimer1
  8090  0ADC  0008               	return
  8091  0ADD                     __end_of_GetReading:	
  8092                           
  8093                           	psect	text30
  8094  135F                     __ptext30:	
  8095 ;; *************** function i1_RestartTimer1 *****************
  8096 ;; Defined at:
  8097 ;;		line 544 in file "../../Source file/PR28.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;		None
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;		None               void
  8104 ;; Registers used:
  8105 ;;		status,2
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8111 ;;      Params:         0       0       0       0       0
  8112 ;;      Locals:         0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0
  8114 ;;      Totals:         0       0       0       0       0
  8115 ;;Total ram usage:        0 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_GetReading
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           
  8125                           ;psect for function i1_RestartTimer1
  8126  135F                     i1_RestartTimer1:	
  8127                           
  8128                           ;PR28.c: 546: TMR1L = 0;
  8129                           
  8130                           ;incstack = 0
  8131                           ; Regs used in i1_RestartTimer1: [status,2]
  8132  135F  1283               	bcf	3,5	;RP0=0, select bank0
  8133  1360  1303               	bcf	3,6	;RP1=0, select bank0
  8134  1361  018E               	clrf	14	;volatile
  8135                           
  8136                           ;PR28.c: 547: TMR1H = 0;
  8137  1362  018F               	clrf	15	;volatile
  8138                           
  8139                           ;PR28.c: 548: TMR2 = 0;
  8140  1363  0191               	clrf	17	;volatile
  8141                           
  8142                           ;PR28.c: 549: TMR2IF = 0;
  8143  1364  108C               	bcf	12,1	;volatile
  8144                           
  8145                           ;PR28.c: 550: TMR1ON = 1;
  8146  1365  1410               	bsf	16,0	;volatile
  8147                           
  8148                           ;PR28.c: 551: TMR2ON = 1;
  8149  1366  1512               	bsf	18,2	;volatile
  8150  1367  0008               	return
  8151  1368                     __end_ofi1_RestartTimer1:	
  8152                           
  8153                           	psect	text31
  8154  14C4                     __ptext31:	
  8155 ;; *************** function _SetNextChannel *****************
  8156 ;; Defined at:
  8157 ;;		line 560 in file "../../Source file/PR28.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;		None               void
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8171 ;;      Params:         0       0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0
  8173 ;;      Temps:          1       0       0       0       0
  8174 ;;      Totals:         1       0       0       0       0
  8175 ;;Total ram usage:        1 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_GetReading
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function _SetNextChannel
  8186  14C4                     _SetNextChannel:	
  8187                           
  8188                           ;PR28.c: 562: if (++index>= 9)
  8189                           
  8190                           ;incstack = 0
  8191                           ; Regs used in _SetNextChannel: [wreg+status,2+status,0]
  8192  14C4  3001               	movlw	1
  8193  14C5  00F0               	movwf	??_SetNextChannel
  8194  14C6  0870               	movf	??_SetNextChannel,w
  8195  14C7  1283               	bcf	3,5	;RP0=0, select bank0
  8196  14C8  1303               	bcf	3,6	;RP1=0, select bank0
  8197  14C9  07D0               	addwf	_index,f
  8198  14CA  3009               	movlw	9
  8199  14CB  0250               	subwf	_index,w
  8200  14CC  1803               	btfsc	3,0
  8201                           
  8202                           ;PR28.c: 563: index = 0;
  8203  14CD  01D0               	clrf	_index
  8204                           
  8205                           ;PR28.c: 565: if(index==0)
  8206                           
  8207                           ;PR28.c: 564: else;
  8208  14CE  0850               	movf	_index,w
  8209  14CF  1D03               	btfss	3,2
  8210  14D0  2CD5               	goto	i1l3607
  8211                           
  8212                           ;PR28.c: 566: CPSCON1 = 0b00001000;
  8213  14D1  3008               	movlw	8
  8214  14D2  1283               	bcf	3,5	;RP0=0, select bank2
  8215  14D3  1703               	bsf	3,6	;RP1=1, select bank2
  8216  14D4  0089               	movwf	9	;volatile
  8217  14D5                     i1l3607:	
  8218                           
  8219                           ;PR28.c: 567: if(index==1)
  8220  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  8221  14D6  0350               	decf	_index,w
  8222  14D7  1D03               	btfss	3,2
  8223  14D8  2CDD               	goto	i1l3611
  8224                           
  8225                           ;PR28.c: 568: CPSCON1 = 0b00001001;
  8226  14D9  3009               	movlw	9
  8227  14DA  1283               	bcf	3,5	;RP0=0, select bank2
  8228  14DB  1703               	bsf	3,6	;RP1=1, select bank2
  8229  14DC  0089               	movwf	9	;volatile
  8230  14DD                     i1l3611:	
  8231                           
  8232                           ;PR28.c: 569: if(index==2)
  8233  14DD  3002               	movlw	2
  8234  14DE  1303               	bcf	3,6	;RP1=0, select bank0
  8235  14DF  0650               	xorwf	_index,w
  8236  14E0  1D03               	btfss	3,2
  8237  14E1  2CE6               	goto	i1l3615
  8238                           
  8239                           ;PR28.c: 570: CPSCON1 = 0b00001010;
  8240  14E2  300A               	movlw	10
  8241  14E3  1283               	bcf	3,5	;RP0=0, select bank2
  8242  14E4  1703               	bsf	3,6	;RP1=1, select bank2
  8243  14E5  0089               	movwf	9	;volatile
  8244  14E6                     i1l3615:	
  8245                           
  8246                           ;PR28.c: 571: if(index == 3)
  8247  14E6  3003               	movlw	3
  8248  14E7  1303               	bcf	3,6	;RP1=0, select bank0
  8249  14E8  0650               	xorwf	_index,w
  8250  14E9  1D03               	btfss	3,2
  8251  14EA  2CEF               	goto	i1l3619
  8252                           
  8253                           ;PR28.c: 572: CPSCON1 = 0b00001011;
  8254  14EB  300B               	movlw	11
  8255  14EC  1283               	bcf	3,5	;RP0=0, select bank2
  8256  14ED  1703               	bsf	3,6	;RP1=1, select bank2
  8257  14EE  0089               	movwf	9	;volatile
  8258  14EF                     i1l3619:	
  8259                           
  8260                           ;PR28.c: 573: if(index== 4)
  8261  14EF  3004               	movlw	4
  8262  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  8263  14F1  0650               	xorwf	_index,w
  8264  14F2  1D03               	btfss	3,2
  8265  14F3  2CF8               	goto	i1l3623
  8266                           
  8267                           ;PR28.c: 574: CPSCON1 = 0b00001100;
  8268  14F4  300C               	movlw	12
  8269  14F5  1283               	bcf	3,5	;RP0=0, select bank2
  8270  14F6  1703               	bsf	3,6	;RP1=1, select bank2
  8271  14F7  0089               	movwf	9	;volatile
  8272  14F8                     i1l3623:	
  8273                           
  8274                           ;PR28.c: 575: if(index == 5)
  8275  14F8  3005               	movlw	5
  8276  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  8277  14FA  0650               	xorwf	_index,w
  8278  14FB  1D03               	btfss	3,2
  8279  14FC  2D01               	goto	i1l3627
  8280                           
  8281                           ;PR28.c: 576: CPSCON1 = 0b00001101;
  8282  14FD  300D               	movlw	13
  8283  14FE  1283               	bcf	3,5	;RP0=0, select bank2
  8284  14FF  1703               	bsf	3,6	;RP1=1, select bank2
  8285  1500  0089               	movwf	9	;volatile
  8286  1501                     i1l3627:	
  8287                           
  8288                           ;PR28.c: 577: if(index ==6)
  8289  1501  3006               	movlw	6
  8290  1502  1303               	bcf	3,6	;RP1=0, select bank0
  8291  1503  0650               	xorwf	_index,w
  8292  1504  1D03               	btfss	3,2
  8293  1505  2D0A               	goto	i1l3631
  8294                           
  8295                           ;PR28.c: 578: CPSCON1 = 0b00001110;
  8296  1506  300E               	movlw	14
  8297  1507  1283               	bcf	3,5	;RP0=0, select bank2
  8298  1508  1703               	bsf	3,6	;RP1=1, select bank2
  8299  1509  0089               	movwf	9	;volatile
  8300  150A                     i1l3631:	
  8301                           
  8302                           ;PR28.c: 579: if (index ==7)
  8303  150A  3007               	movlw	7
  8304  150B  1303               	bcf	3,6	;RP1=0, select bank0
  8305  150C  0650               	xorwf	_index,w
  8306  150D  1D03               	btfss	3,2
  8307  150E  2D13               	goto	i1l3635
  8308                           
  8309                           ;PR28.c: 580: CPSCON1 = 0b00001111;
  8310  150F  300F               	movlw	15
  8311  1510  1283               	bcf	3,5	;RP0=0, select bank2
  8312  1511  1703               	bsf	3,6	;RP1=1, select bank2
  8313  1512  0089               	movwf	9	;volatile
  8314  1513                     i1l3635:	
  8315                           
  8316                           ;PR28.c: 581: if (index == 8)
  8317  1513  3008               	movlw	8
  8318  1514  1303               	bcf	3,6	;RP1=0, select bank0
  8319  1515  0650               	xorwf	_index,w
  8320  1516  1D03               	btfss	3,2
  8321  1517  0008               	return
  8322                           
  8323                           ;PR28.c: 582: CPSCON1 = 0b00000110;
  8324  1518  3006               	movlw	6
  8325  1519  1283               	bcf	3,5	;RP0=0, select bank2
  8326  151A  1703               	bsf	3,6	;RP1=1, select bank2
  8327  151B  0089               	movwf	9	;volatile
  8328  151C  0008               	return
  8329  151D                     __end_of_SetNextChannel:	
  8330  007E                     btemp	set	126	;btemp
  8331  007E                     wtemp	set	126
  8332  007E                     wtemp0	set	126
  8333  0080                     wtemp1	set	128
  8334  0082                     wtemp2	set	130
  8335  0084                     wtemp3	set	132
  8336  0086                     wtemp4	set	134
  8337  0088                     wtemp5	set	136
  8338  007F                     wtemp6	set	127
  8339  007E                     ttemp	set	126
  8340  007E                     ttemp0	set	126
  8341  0081                     ttemp1	set	129
  8342  0084                     ttemp2	set	132
  8343  0087                     ttemp3	set	135
  8344  007F                     ttemp4	set	127
  8345  007E                     ltemp	set	126
  8346  007E                     ltemp0	set	126
  8347  0082                     ltemp1	set	130
  8348  0086                     ltemp2	set	134
  8349  0080                     ltemp3	set	128


Data Sizes:
    Strings     211
    Constant    0
    Data        0
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     20      70
    BANK1            80      0      18
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_string@s	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_14(CODE[11]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[6]), STR_5(CODE[16]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[32]), STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_GetReading
    _GetReading->_SetNextChannel

Critical Paths under _main in BANK0

    _main->_Init
    _send_string->_send_char
    _send_char->_delay
    _lcd_shift->_send_config
    _lcd_goto->_send_config
    _lcd_clr->_send_config
    _send_config->_delay
    _e_pulse->_delay
    _draw->_delay
    _checkstatus->_DisplayLEDs
    _DisplayLEDs->_led_display1
    _DisplayLEDs->_led_display2
    _DisplayLEDs->_led_display3
    _PIEZO_S->_delay
    _PIEZO_D->_delay
    _PIEZO->_delay
    _Init->_winlose
    _winlose->___bmul
    _led_off->_led_display1
    _led_off->_led_display2
    _led_off->_led_display3
    _CapInit->___bmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   71807
                                             17 BANK0      3     3      0
                               _Init
                              _PIEZO
                            _PIEZO_D
                            _PIEZO_S
                          _checkflag
                              _delay
                               _draw
                            _lcd_clr
                           _lcd_goto
                          _lcd_shift
                        _send_config
                        _send_string
                            _winlose
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     2      0    7129
                                              9 BANK0      2     2      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0    6684
                                              8 BANK0      1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (1) _lcd_shift                                            0     0      0   10015
                              _delay
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0    6773
                                              9 BANK0      2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0   10015
                              _delay
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _send_config                                          1     1      0    6684
                                              8 BANK0      1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (3) _e_pulse                                              0     0      0    3331
                              _delay
 ---------------------------------------------------------------------------------
 (1) _draw                                                 1     1      0    4387
                                              8 BANK0      1     1      0
                              _delay
                       _led_display1
                       _led_display2
                       _led_display3
                            _led_off
 ---------------------------------------------------------------------------------
 (1) _checkflag                                            0     0      0   11004
                           _player_1
                           _player_2
 ---------------------------------------------------------------------------------
 (2) _player_2                                             0     0      0    5502
                        _checkstatus
 ---------------------------------------------------------------------------------
 (2) _player_1                                             0     0      0    5502
                        _checkstatus
 ---------------------------------------------------------------------------------
 (3) _checkstatus                                          0     0      0    5502
                        _DisplayLEDs
                              _store
 ---------------------------------------------------------------------------------
 (4) _store                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DisplayLEDs                                          3     3      0    5502
                                              2 BANK0      3     3      0
                       _led_display1
                       _led_display2
                       _led_display3
 ---------------------------------------------------------------------------------
 (1) _PIEZO_S                                              0     0      0    3331
                      _RestartTimer1
                              _delay
 ---------------------------------------------------------------------------------
 (1) _PIEZO_D                                              0     0      0    3331
                      _RestartTimer1
                              _delay
 ---------------------------------------------------------------------------------
 (1) _PIEZO                                                0     0      0    3331
                      _RestartTimer1
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                8     4      4    3331
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _RestartTimer1                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 1     1      0    1684
                                             16 BANK0      1     1      0
                            _CapInit
                            _led_off
                            _winlose
 ---------------------------------------------------------------------------------
 (1) _winlose                                             16    16      0     746
                                              4 BANK0     12    12      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _led_off                                              0     0      0     528
                       _led_display1
                       _led_display2
                       _led_display3
 ---------------------------------------------------------------------------------
 (3) _led_display3                                         2     2      0     176
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_display2                                         2     2      0     176
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_display1                                         2     2      0     176
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CapInit                                              7     7      0     410
                                              4 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     274
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              8 COMMON     4     4      0
                         _GetReading
 ---------------------------------------------------------------------------------
 (7) _GetReading                                           7     7      0       0
                                              1 COMMON     7     7      0
                     _SetNextChannel
                    i1_RestartTimer1
 ---------------------------------------------------------------------------------
 (8) i1_RestartTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _SetNextChannel                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
     _CapInit
       ___bmul
     _led_off
       _led_display1
       _led_display2
       _led_display3
     _winlose
       ___bmul
   _PIEZO
     _RestartTimer1
     _delay
   _PIEZO_D
     _RestartTimer1
     _delay
   _PIEZO_S
     _RestartTimer1
     _delay
   _checkflag
     _player_1
       _checkstatus
         _DisplayLEDs
           _led_display1
           _led_display2
           _led_display3
         _store
     _player_2
       _checkstatus
         _DisplayLEDs
           _led_display1
           _led_display2
           _led_display3
         _store
   _delay
   _draw
     _delay
     _led_display1
     _led_display2
     _led_display3
     _led_off
       _led_display1
       _led_display2
       _led_display3
   _lcd_clr
     _delay
     _send_config
       _delay
       _e_pulse
         _delay
   _lcd_goto
     _send_config
       _delay
       _e_pulse
         _delay
   _lcd_shift
     _delay
     _send_config
       _delay
       _e_pulse
         _delay
   _send_config
     _delay
     _e_pulse
       _delay
   _send_string
     _send_char
       _delay
       _e_pulse
         _delay
   _winlose
     ___bmul

 _isr (ROOT)
   _GetReading
     _SetNextChannel
     i1_RestartTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      66       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      46       5       87.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0      66       6        0.0%
BITBANK1            50      0       0       7        0.0%
BANK1               50      0      12       8       22.5%
BITBANK3            60      0       0       9        0.0%
BANK3               60      0       0      10        0.0%
BITBANK2            60      0       0      11        0.0%
BANK2               60      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jul 22 15:05:18 2015

                       pc 0002            ___bmul@product 0054               __CFG_CP$OFF 0000  
                      fsr 0004             ?_led_display1 0070             ?_led_display2 0070  
           ?_led_display3 0070                       l223 13A2                       l510 1597  
                     l190 0FDC                       l511 1598                       l520 15E2  
                     l512 15A6                       l521 15E3                       l513 15A7  
                     l522 15F1                       l514 15B5                       l530 160E  
                     l338 0E46                       l194 0FFF                       l523 15F2  
                     l515 15B6                       l531 161C                       l516 15C4  
                     l508 1588                       l540 1659                       l532 161D  
                     l517 15C5                       l509 1589                       l541 1667  
                     l533 162B                       l518 15D3                       l542 1668  
                     l534 162C                       l550 1692                       l519 15D4  
                     l535 163A                       l527 15FE                       l551 1693  
                     l536 163B                       l528 15FF                       l560 16DD  
                     l552 16A1                       l537 1649                       l529 160D  
                     l561 16DE                       l553 16A2                       l538 164A  
                     l554 16B0                       l546 1674                       l539 1658  
                     l555 16B1                       l547 1675                       l556 16BF  
                     l548 1683                       l557 16C0                       l549 1684  
                     l558 16CE                       l559 16CF                       _GIE 005F  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RA3 002B                       _RC0 0038                       _RC1 0039  
                     _RA5 002D                       _RA6 002E                       _RC3 003B  
                     _RA7 002F                       _RE0 0048                       _RC4 003C  
                     _RE1 0049                       _RC5 003D                       _RE2 004A  
                     _RC6 003E                       _RC7 003F                       _PR2 0092  
                     _isr 13F9                       fsr0 0004                       indf 0000  
            __CFG_BORV$19 0000           send_config@data 005A          ?i1_RestartTimer1 0070  
                    l3011 02B8                      l3003 02A3                      l3211 04E5  
                    l3203 04CE                      l3131 0401                      l3123 03EA  
                    l3115 03D5                      l3107 03BE                      l3051 0325  
                    l3043 030E                      l3035 02F9                      l3027 02E4  
                    l3019 02CF                      l3301 0D88                      l3311 0D97  
                    l3303 0D8B                      l4023 1532                      l3401 0E32  
                    l3321 0DAA                      l3305 0D8C                      l4113 0EBB  
                    l3227 0513                      l3219 04FC                      l3171 046E  
                    l3163 0459                      l3155 0442                      l3147 042D  
                    l3139 0416                      l3091 0392                      l3083 037D  
                    l3075 0366                      l3067 034F                      l3059 033A  
                    l3235 052F                      l3411 0E41                      l3403 0E35  
                    l3331 0DB9                      l3323 0DAD                      l3315 0D9B  
                    l3251 0D31                      l4027 1549                      l3501 0B9A  
                    l3405 0E36                      l3341 0DCC                      l3325 0DAE  
                    l3261 0D44                      l3511 0BC7                      l2711 16F6  
                    l3423 0E5B                      l3415 0E49                      l3351 0DDB  
                    l3343 0DCF                      l3335 0DBD                      l3271 0D53  
                    l3263 0D47                      l3255 0D35                      l4151 0F62  
                    l4119 0ED3                      l3433 1380                      l3177 0483  
                    l3361 0DEE                      l3345 0DD0                      l3281 0D66  
                    l3265 0D48                      l4161 0F83                      l3515 0BD8  
                    l3507 0BA9                      l3195 04B7                      l3187 04A0  
                    l3179 0489                      l3099 03A7                      l2811 009B  
                    l2803 0086                      l2731 1719                      l2723 170B  
                    l2715 16FD                      l2707 16EF                      l3371 0DFD  
                    l3363 0DF1                      l3355 0DDF                      l3291 0D75  
                    l3283 0D69                      l3275 0D57                      l3437 1386  
                    l3381 0E10                      l3365 0DF2                      l3285 0D6A  
                    l3527 0BF7                      l3519 0BEB                      l2735 1720  
                    l2727 1712                      l2719 1704                      l3391 0E1F  
                    l3383 0E13                      l3375 0E01                      l3295 0D79  
                    l3711 141E                      l4183 0FD1                      l4159 0F4A  
                    l3561 1798                      l2761 174E                      l2753 1740  
                    l2745 1732                      l3385 0E14                      l3721 146B  
                    l4169 0FA9                      l3555 178B                      l3491 0B7A  
                    l3483 0B70                      l3475 0B66                      l3467 0B47  
                    l3459 0AEE                      l2931 01DE                      l2923 01C9  
                    l2915 01B2                      l2907 019D                      l2851 0106  
                    l2843 00EF                      l2835 00DA                      l2827 00C5  
                    l2819 00B0                      l2739 1728                      l3395 0E23  
                    l3573 17D0                      l3549 1772                      l2773 1763  
                    l2765 1755                      l2757 1747                      l2749 1739  
                    l3567 17A7                      l3495 0B8B                      l3591 1371  
                    l3577 17E3                      l2769 175C                      l2971 024B  
                    l2963 0234                      l2955 021D                      l2947 0208  
                    l2939 01F3                      l2891 0171                      l2883 015C  
                    l2875 0147                      l2867 0132                      l2859 011D  
                    l2795 0071                      l3597 07F0                      l3791 1398  
                    l3785 1390                      l2995 028E                      l2987 0279  
                    l2979 0262                      l2899 0186                      l3787 1394  
                    ?_isr 0070                      STR_1 0826                      STR_2 0806  
                    STR_3 08B9                      STR_4 0878                      STR_5 08A9  
                    STR_6 08D3                      STR_7 0889                      STR_8 0899  
                    STR_9 0845                      u3405 158E                      u3505 15D9  
                    u3425 159D                      u4075 003D                      u3525 15E8  
                    u3445 15AC                      u3615 1631                      u3465 15BB  
                    u3705 167A                      u3635 1640                      u3555 1604  
                    _PEIE 005E                      u3485 15CA                      u3805 16C5  
                    u3725 1689                      u3655 164F                      u3575 1613  
                    u3825 16D4                      u3745 1698                      u3675 165E  
                    u3595 1622                      u3765 16A7                      u6245 0AEC  
                    u6335 0B89                      u3855 08F0                      u3856 08F1  
                    u6425 1796                      u3785 16B6                      u6345 0B98  
                    u3857 08F6           __end_of_PIEZO_D 07F0                      u3858 08F7  
                    u6610 1526                      u6435 17A5                      u6355 0BA7  
                    u3859 08FC                      u6620 152F                      u6445 17CE  
                    u6455 17E1                      u6375 0BD6                      u6640 153D  
                    u6624 1529                      u6385 0BE9                      u6705 0ED1  
                    u6650 1546                      u6654 1540           __end_of_PIEZO_S 09D2  
                    u6695 0EB9                      _TMR2 0011                      _Init 148B  
                    _data 004E                      _flag 004F                      _draw 151D  
                    _main 0E5D                      btemp 007E           __end_of_CapInit 1800  
            lcd_goto@data 005C                      ltemp 007E                      start 0012  
                    ttemp 007E                      wtemp 007E         ___bmul@multiplier 0055  
           __CFG_MCLRE$ON 0000                _GetReading 09D2                     ??_isr 0078  
     __end_of_DisplayLEDs 054E             __CFG_PLLEN$ON 0000            ??_led_display1 0052  
          ??_led_display2 0052            ??_led_display3 0052                     ?_Init 0070  
                   ?_draw 0070                     ?_main 0070                     STR_10 0856  
                   STR_11 0845                     STR_12 0867                     STR_13 0845  
                   STR_14 08C8             __CFG_WDTE$OFF 0000                     _T1CON 0010  
                   _T2CON 0012                     i1l215 1406                     i1l350 0A44  
                   i1l351 0A47                     i1l352 0A4A                     i1l353 0A4D  
                   i1l354 0A50                     i1l355 0A53                     i1l356 0A56  
                   i1l348 0A41                     i1l357 0A59                     _PIEZO 0BFD  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTB 0006  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _Flags 004D             __CFG_PWRTE$ON 0000           __end_of_e_pulse 1468  
         __end_of_lcd_clr 13B7           __end_of_led_off 1449                     _delay 08D9  
                   _index 0050                     main@i 0064                     _store 16E3  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
    __size_of_checkstatus 0139                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __end_of_winlose 0BFD  
         __initialization 0015              __end_of_Init 14C4              __end_of_draw 1581  
            __end_of_main 1000                    ??_Init 0062                    ??_draw 005A  
                  ??_main 0063                    ?_PIEZO 0070                 ??_PIEZO_D 005A  
               ??_PIEZO_S 005A     __end_of_RestartTimer1 1371                    ?_delay 0052  
            ?_send_config 0070                    _CCPR1L 0015                    _ANSELA 0185  
                  _ANSELB 0186                    _ANSELD 0188                    _ANSELE 0189  
               ??_CapInit 0056                    ?_store 0070                    _T1GCON 008F  
                  i1l4061 0A80                    i1l4053 0A5C                    i1l4071 0A8A  
                  i1l4063 0A82                    i1l4055 0A7A                    i1l4065 0A84  
                  i1l4057 0A7C                    i1l3611 14DD                    i1l4067 0A86  
                  i1l4059 0A7E                    i1l4075 0A8C                    i1l4069 0A88  
                  i1l4077 0AA9                    i1l3631 150A                    i1l3623 14F8  
                  i1l3615 14E6                    i1l3607 14D5                    i1l4079 0AD4  
                  i1l3635 1513                    i1l3627 1501                    i1l3619 14EF  
                  i1l4189 13F9              ?_send_string 0070                    _OSCCON 0090  
                  u667_25 0A3E                    u668_25 0AB5                    _TMR2IE 0461  
                  _TMR2IF 0061                    _TMR1ON 0080                    _TMR2ON 0092  
             _DisplayLEDs 002A          __end_of_lcd_goto 142B                    ___bmul 137C  
             ?_GetReading 0070                    _bigval 007C                    _matrix 003B  
               ??_e_pulse 005A                    _result 0051                 ??_lcd_clr 005B  
               ??_led_off 0054          ??_SetNextChannel 0070          __end_of_player_1 137C  
        __end_of_player_2 07FB                    saved_w 007E                 ??_winlose 0056  
 __end_of__initialization 0026      __end_of_led_display1 15F7      __end_of_led_display2 166D  
    __end_of_led_display3 16E3             __end_of_PIEZO 0D24       ___bmul@multiplicand 0052  
          __pcstackCOMMON 0070             __end_of_delay 08FE        __size_of_checkflag 0014  
           __end_of_store 176B              winlose@i_280 005C              winlose@i_279 0060  
            winlose@j_281 005E                   ??_PIEZO 005A        __size_of_lcd_shift 0014  
                 ??_delay 0056                   ??_store 0052                __pbssBANK0 0020  
              __pbssBANK1 00A0       __size_of_GetReading 010B           __CFG_VCAPEN$DIS 0000  
              __pmaintext 0E5D                   ?___bmul 0052                __pintentry 0004  
      __size_of_send_char 0017                   _CCP1CON 0017                   _CPSCON0 0108  
                 _CPSCON1 0109                   _PIEZO_D 054E                   _PIEZO_S 08FE  
                 _TMR1GIE 0467                   _TMR1GIF 0067                 ?_lcd_goto 0070  
                 _CapInit 176B                __stringtab 0800         __end_of_checkflag 13A3  
    __size_of_send_config 0017      __size_of_send_string 0023  __size_ofi1_RestartTimer1 0009  
                 _Buttons 0032                 ?_player_1 0070                 ?_player_2 0070  
       __end_of_lcd_shift 13CB           __size_of___bmul 0013                   _e_pulse 1449  
                 __ptext1 1468                   __ptext2 13E2                   __ptext3 13B7  
                 __ptext4 1411                   __ptext5 13A3                   __ptext6 13CB  
                 __ptext7 1449                   __ptext8 151D                   __ptext9 138F  
                 _lcd_clr 13A3                   _average 0020                   _led_off 142B  
            __size_of_isr 0018                   _reading 00A0                   _result1 0044  
   __size_of_led_display1 0076     __size_of_led_display2 0076     __size_of_led_display3 0076  
           ??_checkstatus 0057                   _winlose 0ADD                   clrloop0 1358  
              ??_lcd_goto 005B      end_of_initialization 0026         __end_of_send_char 13F9  
              ??_player_1 0057                ??_player_2 0057              ?_DisplayLEDs 0070  
            ??_GetReading 0071             send_char@data 005A              _led_display1 1581  
            _led_display2 15F7              _led_display3 166D                _threshold4 004B  
      __end_of_GetReading 0ADD       __end_of_checkstatus 0E5D    __size_of_RestartTimer1 0009  
       ??i1_RestartTimer1 0070            __end_of___bmul 138F       start_initialization 0015  
             __end_of_isr 1411             winlose@flag_w 005B                  ??___bmul 0053  
           winlose@status 0059               __pbssCOMMON 007C                 ___latbits 0002  
           __pcstackBANK0 0052                  ?_PIEZO_D 0070                  ?_PIEZO_S 0070  
           _RestartTimer1 1368               _checkstatus 0D24                  ?_CapInit 0070  
 __size_of_SetNextChannel 0059         __size_of_lcd_goto 001A                 _checkflag 138F  
       __size_of_player_1 000B         __size_of_player_2 000B      __size_of_DisplayLEDs 0524  
                ?_e_pulse 0070                 __pstrings 0800                 _lcd_shift 13B7  
                ?_lcd_clr 0070                  ?_led_off 0070            __size_of_PIEZO 0127  
          ?_RestartTimer1 0070                  CapInit@i 0059                  CapInit@j 005B  
           ??_send_config 005A            __size_of_delay 0025                  ?_winlose 0070  
          __size_of_store 0088                 delay@data 0052             ??_send_string 005B  
       interrupt_function 0004                ?_checkflag 0070                 clear_ram0 1357  
               _send_char 13E2                 _threshold 0049                ?_lcd_shift 0070  
             __stringbase 0805          __size_of_PIEZO_D 02A2          __size_of_PIEZO_S 00D4  
        __size_of_CapInit 0095           i1_RestartTimer1 135F       __end_of_send_config 13E2  
              ?_send_char 0070              send_string@s 005C       __end_of_send_string 148B  
      __end_of__stringtab 0806          __size_of_e_pulse 001F          __size_of_lcd_clr 0014  
        __size_of_led_off 001E           ??_RestartTimer1 0052                  __ptext10 07F0  
                __ptext11 1371                  __ptext20 148B                  __ptext12 0D24  
                __ptext21 0ADD                  __ptext13 16E3                  __ptext30 135F  
                __ptext22 142B                  __ptext14 002A                  __ptext31 14C4  
                __ptext23 166D                  __ptext15 08FE                  __ptext24 15F7  
                __ptext16 054E                  __ptext25 1581                  __ptext17 0BFD  
                __ptext26 176B                  __ptext18 08D9                  __ptext27 137C  
                __ptext19 1368                  __ptext28 13F9                  __ptext29 09D2  
                _lcd_goto 1411            _SetNextChannel 14C4          __size_of_winlose 0120  
           __size_of_Init 0039             __size_of_draw 0064             __size_of_main 01A3  
             ??_checkflag 0057                  _player_1 1371                  _player_2 07F0  
                _smallavg 0047               ??_lcd_shift 005B    __end_of_SetNextChannel 151D  
 __end_ofi1_RestartTimer1 1368               _send_config 13CB              ?_checkstatus 0070  
                intlevel1 0000               _send_string 1468              DisplayLEDs@k 0055  
             ??_send_char 005A                 stringcode 0800                  stringdir 0800  
                stringtab 0800           ?_SetNextChannel 0070        __CFG_FOSC$INTOSCIO 0000  
      led_display1@value1 0053        led_display2@value2 0053        led_display3@value3 0053  
           ??_DisplayLEDs 0054  
